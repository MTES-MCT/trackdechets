version: "3"
services:
  prisma:
    image: prismagraphql/prisma:1.34.10
    restart: always
    ports:
      - "4466:4466"
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: postgres
            host: $POSTGRES_HOST
            port: $POSTGRES_PORT
            user: $POSTGRES_USER
            password: $POSTGRES_PASSWORD
            migrations: true

  postgres:
    image: td-postgres
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      AIRFLOW_POSTGRES_USER: $AIRFLOW_POSTGRES_USER
      AIRFLOW_POSTGRES_PASSWORD: $AIRFLOW_POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:5.0-alpine
    restart: always
    sysctls:
      - net.core.somaxconn=511

  td-api:
    image: td-api
    build:
      context: ./back
      dockerfile: Dockerfile
    command: npx nodemon -L --watch src --exec "ts-node" src/index.ts
    volumes:
      - ./back/src:/usr/src/app/src
      - ./documentation/docs/api-reference:/usr/src/app/documentation
    env_file:
      - .env
    environment:
      NODE_ENV: dev
      VIRTUAL_HOST: $API_HOST
      LETSENCRYPT_HOST: $API_HOST
      LETSENCRYPT_EMAIL: $EMAIL_LETS_ENCRYPT

  td-ui:
    image: node:10.14-alpine
    container_name: td-ui
    working_dir: /usr/src/front
    command: sh -c "npm install && npm start"
    expose:
      - "3000"
    environment:
      VIRTUAL_HOST: $UI_HOST
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: $UI_HOST
      LETSENCRYPT_EMAIL: $EMAIL_LETS_ENCRYPT
    volumes:
      - ./front/:/usr/src/front

  td-insee:
    image: td-insee
    build:
      context: ./insee
      dockerfile: Dockerfile
    ports:
      - 81:81
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD

  td-pdf:
    image: td-pdf
    build:
      context: ./pdf
      dockerfile: Dockerfile
    ports:
      - 3201:3201
    environment:
      PDF_WATERMARK: display

  td-mail:
    image: td-mail
    build:
      context: ./mail
      dockerfile: Dockerfile
    ports:
      - 82:80
    environment:
      MJ_APIKEY_PUBLIC: $MJ_APIKEY_PUBLIC
      MJ_APIKEY_PRIVATE: $MJ_APIKEY_PRIVATE

  td-etl:
    image: td-etl
    build:
      context: ./etl
      dockerfile: Dockerfile
    environment:
      VIRTUAL_HOST: $ETL_HOST
      VIRTUAL_PORT: 8080
      LOAD_EX: n
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $AIRFLOW_POSTGRES_USER
      POSTGRES_PASSWORD: $AIRFLOW_POSTGRES_PASSWORD
      AIRFLOW__CORE__FERNET_KEY: $AIRFLOW_FERNET_KEY
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgres://$AIRFLOW_POSTGRES_USER:$AIRFLOW_POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/airflow
      AIRFLOW_CONN_POSTGRES_ETL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$ETL_DB
      AIRFLOW_CONN_POSTGRES_PRISMA: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/prisma
    volumes:
      - ./etl/code/dags:/usr/local/airflow/dags
      - ./etl/code/data:/usr/local/airflow/data
      - ./etl/code/embulk:/usr/local/airflow/embulk
      - ./etl/code/sql:/usr/local/airflow/sql
      - ./etl/code/tests:/usr/local/airflow/tests

  td-doc:
    image: td-doc
    build:
      context: ./doc
    environment:
      VIRTUAL_HOST: $DOC_HOST
      VIRTUAL_PORT: 3000
      API_HOST: $API_HOST
      API_URL_SCHEME: $URL_SCHEME
      UI_HOST: $UI_HOST
      UI_URL_SCHEME: $UI_URL_SCHEME
    volumes:
      - ./doc/docs:/app/docs
      - ./doc/website/blog:/app/website/blog
      - ./doc/website/core:/app/website/core
      - ./doc/website/i18n:/app/website/i18n
      - ./doc/website/pages:/app/website/pages
      - ./doc/website/static:/app/website/static
      - ./doc/website/sidebars.json:/app/website/sidebars.json
      - ./doc/website/siteConfig.js:/app/website/siteConfig.js
    working_dir: /app/website

  metabase:
    image: metabase/metabase:v0.34.2
    volumes:
      - metabase:/metabase-data
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db
      - VIRTUAL_HOST=$METABASE_HOST
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=$METABASE_HOST
      - LETSENCRYPT_EMAIL=$EMAIL_LETS_ENCRYPT

volumes:
  postgres:
  metabase:

networks:
  default:
    external:
      name: nginx-proxy
