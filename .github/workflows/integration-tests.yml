name: Integration tests

on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  back:
    runs-on: ubuntu-latest
    name: Integration tests (chunk ${{ matrix.shard }}/${{ strategy.job-total }})
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Start DB with docker
        run: docker compose up -d
      - name: Init DB & ES index
        run: |
          npx nx run @td/codegen-back:build
          npx nx run @td/prisma:generate
          TERM=xterm bash ./scripts/deploy-db.sh
      - name: Create MinIO buckets
        run: |
          docker exec trackdechets-minio-1 mc alias set myminio http://localhost:9000 trackdechets password
          docker exec trackdechets-minio-1 mc mb myminio/"$S3_REGISTRY_ERRORS_BUCKET"
          docker exec trackdechets-minio-1 mc mb myminio/"$S3_REGISTRY_IMPORTS_BUCKET"
          docker exec trackdechets-minio-1 mc mb myminio/"$S3_REGISTRY_EXPORTS_BUCKET"
      - name: Start queues
        run: |
          npx nx run-many -t serve --projects=tag:backend:queues --parallel=6 --configuration=integration &
          sleep 5
      - name: Run integration tests
        run: |
          npx nx run-many --target=test --projects=back,cron --configuration=integration --parallel=1 -- --shard=${{ matrix.shard }}/${{ strategy.job-total }}

env:
  ALLOW_CLONING_BSDS: true
  TD_COMPANY_ELASTICSEARCH_URL: ${{ secrets.TD_COMPANY_ELASTICSEARCH_URL }}
  TD_COMPANY_ELASTICSEARCH_CACERT: ${{ secrets.TD_COMPANY_ELASTICSEARCH_CACERT }}
  NODE_ENV: test
  VIRTUAL_HOST: $API_HOST
  LETSENCRYPT_HOST: $API_HOST
  EMAIL_BACKEND: "sendinblue"
  SIB_BASE_URL: "http://mailservice"
  MAIN_TEMPLATE_ID: "9"
  FIRST_ONBOARDING_TEMPLATE_ID: "246"
  PRODUCER_SECOND_ONBOARDING_TEMPLATE_ID: "248"
  PROFESIONAL_SECOND_ONBOARDING_TEMPLATE_ID: "250"
  VERIFIED_FOREIGN_TRANSPORTER_COMPANY_TEMPLATE_ID: "247"
  SENDER_EMAIL_ADDRESS: "us@td.test"
  SENDER_NAME: "Wastetracker corp."
  POST_BACKEND: console
  QUEUE_NAME_SENDMAIL: td-integration-tests-queue
  REGISTRY_WHITE_LIST_IP: "11.11.11.11"
  DATABASE_URL: 'postgresql://trackdechets:password@localhost:5432/prisma?schema=default$default'
  REDIS_URL: redis://localhost:6379
  MONGO_URL: mongodb://trackdechets:password@localhost:27017
  SESSION_SECRET: any_secret
  API_TOKEN_SECRET: any_secret
  API_HOST: api.trackdechets.local
  UI_HOST: trackdechets.local
  ELASTIC_SEARCH_URL: http://localhost:9200
  OTEL_SDK_DISABLED: true
  TD_COMPANY_ELASTICSEARCH_INDEX: stocketablissement-production
  ALLOW_TEST_COMPANY: true

  WEBHOOK_TOKEN_ENCRYPTION_KEY: abcdefgh12345678abcdefgh12345678
  GERICO_WEBHOOK_SLUG: secret-slug-lorem
  GERICO_WEBHOOK_TOKEN: wxcfdzr
  S3_ENDPOINT: http://localhost:9000
  S3_REGION: fr-par
  S3_ACCESS_KEY_ID: trackdechets
  S3_SECRET_ACCESS_KEY: password
  S3_REGISTRY_ERRORS_BUCKET: registry-errors-integration
  S3_REGISTRY_IMPORTS_BUCKET: registry-imports-integration
  S3_REGISTRY_EXPORTS_BUCKET: registry-exports-integration
  S3_REGISTRY_MODELS_BUCKET: registry-models-integration
  VERIFY_DESTINATION_PROFILES_FOR_BSDD_CREATED_AFTER: 2024-10-30T00:00:00.000Z
  OVERRIDE_V20241201: 2024-10-30T00:00:00.000Z
  OVERRIDE_V20250101: 2024-12-27T00:00:00.000Z
  OVERRIDE_V20250201: 2025-01-15T00:00:00.000Z
