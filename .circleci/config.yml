version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:10.13.0-browsers
    working_directory: ~/project/trackdechets

jobs:
  test:
    description: "Run tests"
    executor: node
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run tests
          command: |
            for container in $(docker-compose -f docker-compose.test.yml ps --services | tr '\r\n' '\n');
            do
              docker-compose -f docker-compose.test.yml run --rm $container
              code=$?
              if [[ $code != "0" ]]; then
                echo "Tests failed for ${container}, exit code ${code}"
                exit 1
              fi
            done

  build-and-push:
    description: "Build all images, pushes them to the Docker repository if branch is master or dev"
    executor: node
    parameters:
      extra-cfg:
        type: string
        default: ""
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "Build and push images"
          command: |
            docker-compose -f docker-compose.yml -f docker-compose.build.yml << parameters.extra-cfg >> build
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "dev" ]; then
              docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
              docker-compose -f docker-compose.yml -f docker-compose.build.yml << parameters.extra-cfg >> push --ignore-push-failures
            fi

  deploy:
    machine:
      enabled: true
    working_directory: ~/project/trackdechets
    parameters:
      user:
        type: env_var_name
        default: SSH_USER
      host:
        type: env_var_name
        default: SSH_HOST
      isValidation:
        type: boolean
        default: false
    steps:
      - checkout
      - run:
          name: Deploy Over SSH
          command: |
            scp docker-compose.yml ${<< parameters.user >>}@${<< parameters.host >>}:/srv/trackdechets/
            <<# parameters.isValidation >>
            scp docker-compose.val.yml ${<< parameters.user >>}@${<< parameters.host >>}:/srv/trackdechets/docker-compose.override.yml
            <</ parameters.isValidation >>
            ssh ${<< parameters.user >>}@${<< parameters.host >>} "cd /srv/trackdechets/
            docker-compose pull
            docker-compose up -d
            docker exec \$(docker ps -qf 'name=td-api') npx prisma deploy"

  integration-tests:
    machine:
      enabled: true
    working_directory: ~/project/trackdechets
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run integration tests
          command: |
            cd back/integration-tests
            sudo chmod +x ./run.sh
            ./run.sh

workflows:
  build-and-deploy:
    jobs:
      - test
      - integration-tests
      - build-and-push:
          name: build-and-push-prod
          requires:
            - test
            - integration-tests
          filters:
            branches:
              only: master
      - build-and-push:
          name: build-and-push-recette
          extra-cfg: "-f docker-compose.val.yml"
          requires:
            - test
            - integration-tests
          filters:
            branches:
              only: dev
      - deploy:
          name: deploy-prod
          requires:
            - build-and-push-prod
          filters:
            branches:
              only: master
      - deploy:
          name: deploy-sandbox
          host: SSH_HOST_SANDBOX
          requires:
            - build-and-push-prod
          filters:
            branches:
              only: master
      - deploy:
          name: deploy-recette
          host: SSH_HOST_RECETTE
          isValidation: true
          requires:
            - build-and-push-recette
          filters:
            branches:
              only: dev
