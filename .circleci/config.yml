version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:10.13.0-browsers
    working_directory: ~/project/trackdechets

jobs:
  check-docker:
    executor: node
    steps:
      - run: |
          if [[ -z "$DOCKERHUB_USER" || -z "$DOCKERHUB_PASSWORD" ]]; then
            echo "Missing DOCKERHUB_USER or DOCKERHUB_PASSWORD environment variables!"
            exit 1
          fi

  build-service:
    description: "Build and push <service-name> (located in <folder-name>) to the Docker repository"
    parameters:
      service-name:
        type: string
      folder-name:
        type: string
      run-tests:
        type: boolean
        default: false
    executor: node
    steps:
      - checkout
      - run: |
        cd ./<< parameters.folder-name >>
        <<# parameters.run-tests >> npm test <</ parameters.run-tests >>
      - setup_remote_docker
      - run: |
          docker build -t betagouv/trackdechets-<< parameters.service-name >>:$CIRCLE_SHA1 ./<< parameters.folder-name >>
          docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
          docker push betagouv/trackdechets-<< parameters.service-name >>:$CIRCLE_SHA1
      - run: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            docker tag betagouv/trackdechets-<< parameters.service-name >>:$CIRCLE_SHA1 betagouv/trackdechets-<< parameters.service-name >>:latest
            docker push betagouv/trackdechets-<< parameters.service-name >>:latest
          fi

  deploy:
    machine:
      enabled: true
    working_directory: ~/project/trackdechets
    parameters:
      user:
        type: env_var_name
        default: SSH_USER
      host:
        type: env_var_name
        default: SSH_HOST
    steps:
      - checkout
      - run:
          name: Deploy Over SSH
          command: |
            scp docker-compose.yml ${<< parameters.user >>}@${<< parameters.host >>}:/srv/trackdechets/
            ssh ${<< parameters.user >>}@${<< parameters.host >>} "cd /srv/trackdechets/
            docker-compose pull
            docker-compose up -d
            docker exec \$(docker ps -qf 'name=td-api') npx prisma deploy"

  deploy-validation:
    machine:
      enabled: true
    steps:
      - run:
          name: Deploy to validation over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST_ST "cd /srv/trackdechets/
            git pull
            docker-compose -f docker-compose.val.yml build
            docker-compose -f docker-compose.val.yml up -d
            docker exec \$(docker ps -qf 'name=td-api') npx prisma deploy"

  integration-tests:
    machine:
      enabled: true
    working_directory: ~/project/trackdechets
    steps:
      - checkout
      - run:
          name: Install Node Version Manager
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v8.12.0
            nvm alias default v8.12.0
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"" >> $BASH_ENV
      - run:
          name: Run integration tests
          command: |
            cd integration-tests
            sudo chmod +x ./run.sh
            ./run.sh

workflows:
  build-and-deploy:
    jobs:
      - check-docker:
          filters:
            branches:
              only: master
      - build-service:
          name: build-postgres
          service-name: postgres
          folder-name: postgres
          requires:
            - check-docker
      - build-service:
          name: build-ui
          service-name: ui
          folder-name: front
          requires:
            - check-docker
      - build-service:
          name: build-api
          service-name: api
          folder-name: back
          run-tests: true
          requires:
            - check-docker
      - build-service:
          name: build-insee
          service-name: insee
          folder-name: insee
          requires:
            - check-docker
      - build-service:
          name: build-pdf
          service-name: pdf
          folder-name: pdf
          requires:
            - check-docker
      - build-service:
          name: build-mail
          service-name: mail
          folder-name: mail
          requires:
            - check-docker
      - build-service:
          name: build-doc
          service-name: doc
          folder-name: documentation
          requires:
            - check-docker
      - build-service:
          name: build-etl
          service-name: etl
          folder-name: etl
          requires:
            - check-docker
      - deploy:
          name: deploy-prod
          requires:
            - build-postgres
            - build-api
            - build-ui
            - build-insee
            - build-pdf
            - build-mail
            - build-doc
            - build-etl
          filters:
            branches:
              only: master
      - deploy:
        name: deploy-validation
        host: SSH_HOST_BU
        requires:
          - build-postgres
          - build-api
          - build-ui
          - build-insee
          - build-pdf
          - build-mail
          - build-etl
        filters:
          branches:
            only: master

  deploy-validation:
    jobs:
      - deploy-validation:
          filters:
            branches:
              only: dev
