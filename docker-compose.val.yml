version: "3"
services:
  prisma:
    image: prismagraphql/prisma:1.33.0
    restart: always
    ports:
      - "4466:4466"
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: postgres
            host: postgres
            port: 5432
            user: $POSTGRES_USER
            password: $POSTGRES_PASSWORD
            migrations: true

  postgres:
    image: td-postgres
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - postgres:/var/lib/postgresql/data

  td-api:
    image: td-api
    build:
      context: ./back
      dockerfile: Dockerfile
    restart: always
    environment:
      NODE_ENV: dev
      JWT_SECRET: $JWT_SECRET
      UI_HOST: $UI_HOST
      VIRTUAL_HOST: $API_HOST
      LETSENCRYPT_HOST: $API_HOST
      LETSENCRYPT_EMAIL: $EMAIL_LETS_ENCRYPT

  td-ui:
    image: td-ui
    build:
      context: ./front
      dockerfile: Dockerfile
    restart: always
    environment:
      VIRTUAL_HOST: $UI_HOST
      LETSENCRYPT_HOST: $UI_HOST
      LETSENCRYPT_EMAIL: $EMAIL_LETS_ENCRYPT

  td-insee:
    image: td-insee
    build:
      context: ./insee
      dockerfile: Dockerfile
    restart: always
    environment:
      INSEE_SECRET: $INSEE_SECRET
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD

  td-pdf:
    image: td-pdf
    build:
      context: ./pdf
      dockerfile: Dockerfile
    restart: always

  td-mail:
    image: td-mail
    build:
      context: ./mail
      dockerfile: Dockerfile
    restart: always
    environment:
      MJ_APIKEY_PUBLIC: $MJ_APIKEY_PUBLIC
      MJ_APIKEY_PRIVATE: $MJ_APIKEY_PRIVATE

  td-doc:
    image: td-doc
    build:
      context: ./documentation
      dockerfile: Dockerfile
    environment:
      VIRTUAL_HOST: $DOC_HOST
      LETSENCRYPT_HOST: $DOC_HOST
      LETSENCRYPT_EMAIL: $EMAIL_LETS_ENCRYPT

  td-etl:
    image: td-etl
    build:
      context: ./etl
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      AIRFLOW__CORE__FERNET_KEY: $AIRFLOW_FERNET_KEY
      AIRFLOW__CORE__LOGGING_LEVEL: ERROR
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgres://$AIRFLOW_POSTGRES_USER:$AIRFLOW_POSTGRES_PASSWORD@postgres:5432/airflow
      AIRFLOW_CONN_POSTGRES_ETL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$ETL_DB
      AIRFLOW_CONN_POSTGRES_ETL_TEST: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/test_$ETL_DB

volumes:
  postgres:

networks:
  default:
    external:
      name: nginx-proxy
