"use strict";(self.webpackChunktrackdechets=self.webpackChunktrackdechets||[]).push([[9465],{7766:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"concepts/graphql","title":"Introduction \xe0 GraphQL","description":"Comparaison avec le standard REST","source":"@site/docs/concepts/graphql.md","sourceDirName":"concepts","slug":"/concepts/graphql","permalink":"/concepts/graphql","draft":false,"unlisted":false,"editUrl":"https://github.com/MTES-MCT/trackdechets/edit/dev/doc/docs/concepts/graphql.md","tags":[],"version":"current","frontMatter":{"title":"Introduction \xe0 GraphQL"},"sidebar":"docs","previous":{"title":"Lien entre l\'API et l\'interface web Trackd\xe9chets","permalink":"/concepts/api-ui"}}');var t=r(4848),i=r(8453);const a={title:"Introduction \xe0 GraphQL"},o=void 0,c={},d=[{value:"Comparaison avec le standard REST",id:"comparaison-avec-le-standard-rest",level:2},{value:"\xc0 propos des op\xe9rations de type <code>query</code> et <code>mutation</code>",id:"\xe0-propos-des-op\xe9rations-de-type-query-et-mutation",level:2},{value:"Queries",id:"queries",level:3},{value:"Mutations",id:"mutations",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"comparaison-avec-le-standard-rest",children:"Comparaison avec le standard REST"}),"\n",(0,t.jsxs)(n.p,{children:["Dans le standard REST, la m\xe9thode de requ\xeate HTTP (",(0,t.jsx)(n.code,{children:"GET"}),", ",(0,t.jsx)(n.code,{children:"POST"}),", ",(0,t.jsx)(n.code,{children:"PUT"}),", ",(0,t.jsx)(n.code,{children:"DELETE"}),") d\xe9termine le type d'op\xe9ration. Dans le standard GraphQL, un contenu de requ\xeate JSON est pass\xe9 que ce soit pour une ",(0,t.jsx)(n.code,{children:"query"})," ou une ",(0,t.jsx)(n.code,{children:"mutation"}),", la m\xe9thode de requ\xeate est donc toujours ",(0,t.jsx)(n.code,{children:"POST"}),". La seule exception est la requ\xeate d'introspection qui est un simple ",(0,t.jsx)(n.code,{children:"GET"})," sur le point de terminaison GraphQL."]}),"\n",(0,t.jsxs)(n.p,{children:["Toutes les requ\xeates se font sur un point de terminaison unique \xe0 la ",(0,t.jsx)(n.a,{href:"/reference/environments/",children:"racine de l'API"})]}),"\n",(0,t.jsxs)(n.p,{children:["Pour faire une requ\xeate GraphQL en utilisant cURL, vous devez faire un ",(0,t.jsx)(n.code,{children:"POST"})," avec un corps JSON. Le corps de la requ\xeate doit contenir une chaine de caract\xe8res appel\xe9e ",(0,t.jsx)(n.code,{children:"query"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl \\\n  -X POST \\\n  -H "Content-Type: application/json" \\\n  -H "Authorization: Bearer YOUR_TOKEN" \\\n  --data \'{"query": "query { me { name} }"}\' https://api.trackdechets.beta.gouv.fr/\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"\xe0-propos-des-op\xe9rations-de-type-query-et-mutation",children:["\xc0 propos des op\xe9rations de type ",(0,t.jsx)(n.code,{children:"query"})," et ",(0,t.jsx)(n.code,{children:"mutation"})]}),"\n",(0,t.jsxs)(n.p,{children:["Les deux types d'op\xe9ration autoris\xe9es sur l'API GraphQL Trackd\xe9chets sont les ",(0,t.jsx)(n.em,{children:"queries"})," et les ",(0,t.jsx)(n.em,{children:"mutations"}),". Pour faire un parall\xe8le avec le standard REST, les ",(0,t.jsx)(n.em,{children:"queries"})," se comportent comme des requ\xeates ",(0,t.jsx)(n.code,{children:"GET"})," et les mutations se comportent comme des requ\xeates ",(0,t.jsx)(n.code,{children:"POST"}),"/",(0,t.jsx)(n.code,{children:"PATCH"}),"/",(0,t.jsx)(n.code,{children:"DELETE"}),". Le nom de la mutation d\xe9termine l'op\xe9ration qui sera execut\xe9e. Les requ\xeates et mutations ont une forme similaire avec quelques diff\xe9rences."]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["La cl\xe9 JSON utilis\xe9e est toujours ",(0,t.jsx)(n.code,{children:'"query"'}),", que ce soit pour une ",(0,t.jsx)(n.em,{children:"query"})," ou une ",(0,t.jsx)(n.em,{children:"mutation"})," GraphQL. La diff\xe9rence se fait dans la chaine de caract\xe8re pass\xe9e en valeur :"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'// exemple de query\n{ "query": "query { ... }" }\n\n// exemple de mutation\n{ "query" : "mutation { ... }"}\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"queries",children:"Queries"}),"\n",(0,t.jsxs)(n.p,{children:["Les ",(0,t.jsx)(n.em,{children:"queries"})," GraphQL retournent uniquement les donn\xe9es sp\xe9cifi\xe9es. Pour construire une ",(0,t.jsx)(n.em,{children:"query"})," il faut sp\xe9cifier les champs imbriqu\xe9s jusqu'\xe0 un champs de type scalaire (string, int, etc)."]}),"\n",(0,t.jsx)(n.p,{children:"Exemple avec une requ\xeate de profil utilisateur :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:"query {\n  me {\n    name\n    email\n    companies {\n      name\n      siret\n    }\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Des variables peuvent \xe9galement \xeatre ajout\xe9es sur certaines ",(0,t.jsx)(n.em,{children:"queries"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Exemple avec une requ\xeate d'information entreprise en passant un num\xe9ro siret en variable :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:'query {\n  companyInfos(siret: "13001045700013") {\n    name,\n    address\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"mutations",children:"Mutations"}),"\n",(0,t.jsx)(n.p,{children:"Pour construire une mutation, il faut sp\xe9cifier trois choses :"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Le nom de la mutation qui correspond \xe0 l'op\xe9ration \xe0 ex\xe9cuter"}),"\n",(0,t.jsx)(n.li,{children:"Les donn\xe9es d'input pass\xe9es en argument"}),"\n",(0,t.jsx)(n.li,{children:"Les donn\xe9es retourn\xe9es"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple avec une requ\xeate permettant de valider la r\xe9ception d'un bordereau de d\xe9chets dangereux :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-graphql",children:'mutation {\n  markAsReceived(\n    id: "sju8d6g0JU61G76F",\n    receivedInfo: {\n      receivedBy: "Bill",\n      receivedAt: "2019-01-17",\n      signedAt: "2019-01-17",\n      wasteAcceptationStatus: "ACCEPTED",\n      quantityReceived: 0\n    }){\n    id\n    status\n  }\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);