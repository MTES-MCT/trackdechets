generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CompanyType {
  PRODUCER
  COLLECTOR
  WASTEPROCESSOR
  TRANSPORTER
  WASTE_VEHICLES
  WASTE_CENTER
  TRADER
  BROKER
  ECO_ORGANISME
}

enum CompanyVerificationMode {
  MANUAL
  LETTER
}

enum CompanyVerificationStatus {
  TO_BE_VERIFIED
  LETTER_SENT
  VERIFIED
}

enum Seveso {
  NS
  SB
  SH
}

enum WasteType {
  INERTE
  NOT_DANGEROUS
  DANGEROUS
}

enum GerepType {
  Producteur
  Traiteur
}

enum WasteAcceptationStatus {
  ACCEPTED
  REFUSED
  PARTIALLY_REFUSED
}

enum EmitterType {
  PRODUCER
  OTHER
  APPENDIX1
  APPENDIX2
}

enum QuantityType {
  REAL
  ESTIMATED
}

enum Consistence {
  SOLID
  LIQUID
  GASEOUS
  DOUGHY
}

enum Status {
  DRAFT
  SEALED
  SENT
  RECEIVED
  ACCEPTED
  PROCESSED
  AWAITING_GROUP
  GROUPED
  NO_TRACEABILITY
  REFUSED

  // Temporary storage status
  TEMP_STORED
  TEMP_STORER_ACCEPTED
  RESEALED
  RESENT
}

enum TransportMode {
  ROAD
  RAIL
  AIR
  RIVER
  SEA
}

enum UserRole {
  MEMBER
  ADMIN
}

enum MembershipRequestStatus {
  PENDING
  ACCEPTED
  REFUSED
}

// Different types of authentication possible to Trackdechet's API
enum AuthType {
  // Session authentification from Trackdechets'UI
  SESSION
  // Bearer access token (stored in database)
  BEARER
  // JWT token
  JWT
}

model AccessToken {
  id            String       @id @default(cuid())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  token         String       @unique
  isRevoked     Boolean      @default(false)
  lastUsed      DateTime?
  applicationId String?
  application   Application? @relation(fields: [applicationId], references: [id])
  userId        String
  user          User         @relation(fields: [userId], references: [id])
}

model Application {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  clientSecret String
  name         String
  logoUrl      String?
  redirectUris String[]
  admins       User[]
  AccessToken  AccessToken[]
  Grant        Grant[]
}

model Company {
  id                                   String                    @id @default(cuid())
  siret                                String                    @unique
  updatedAt                            DateTime                  @updatedAt
  createdAt                            DateTime                  @default(now())
  securityCode                         Int
  verificationCode                     String
  verificationStatus                   CompanyVerificationStatus @default(TO_BE_VERIFIED)
  verificationMode                     CompanyVerificationMode?
  verificationComment                  String?
  verifiedAt                           DateTime?
  name                                 String?
  address                              String?
  longitude                            Float?
  latitude                             Float?
  gerepId                              String?
  codeNaf                              String?
  givenName                            String?
  contactEmail                         String?
  contactPhone                         String?
  website                              String?
  ecoOrganismeAgreements               String[]
  companyTypes                         CompanyType[]
  traderReceiptId                      String?
  traderReceipt                        TraderReceipt?            @relation(fields: [traderReceiptId], references: [id])
  brokerReceiptId                      String?
  brokerReceipt                        BrokerReceipt?            @relation(fields: [brokerReceiptId], references: [id])
  transporterReceiptId                 String?
  transporterReceipt                   TransporterReceipt?       @relation(fields: [transporterReceiptId], references: [id])
  vhuAgrementDemolisseurId             String?
  vhuAgrementDemolisseur               VhuAgrement?              @relation(name: "VhuAgrementDemolisseur_Company", fields: [vhuAgrementDemolisseurId], references: [id])
  vhuAgrementBroyeurId                 String?
  vhuAgrementBroyeur                   VhuAgrement?              @relation(name: "VhuAgrementBroyeur_Company", fields: [vhuAgrementBroyeurId], references: [id])
  CompanyAssociation                   CompanyAssociation[]
  MembershipRequest                    MembershipRequest[]
  allowBsdasriTakeOverWithoutSignature Boolean                   @default(false)
}

// Companies with restricted diffusion of SIRENE information (police, army, etc)

// "Certaines entreprises demandent à ne pas figurer sur les listes de diffusion publique
// en vertu de l'article A123-96 du code du commerce. On parle d‘entreprise non diffusable.
// Dans ce cas les API SIRENE ne diffusent pas les informations de cette entreprise dans
// les résultats de recherche. Pour des raisons de sécurité, certaines associations et les
// organismes relevant du Ministère de la Défense ne sont pas diffusibles non plus."
//
// Cette table permet également de stocker de "faux établissements" pouvant être visés lors
// du rattachement d'établissements de test sur l'environnement sandbox
model AnonymousCompany {
  id          String @id @default(cuid())
  siret       String @unique
  name        String
  address     String
  codeNaf     String
  libelleNaf  String
  codeCommune String
}

model CompanyAssociation {
  id        String   @id @default(cuid())
  role      UserRole
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Declaration {
  id         String     @id @default(cuid())
  codeS3ic   String?
  nomEts     String?
  annee      String?
  codeDechet String?
  libDechet  String?
  gerepType  GerepType?

  @@index([codeS3ic], name: "declaration_codes3ic")
}

model EcoOrganisme {
  id      String @id @default(cuid())
  siret   String @unique
  name    String
  address String
}

model Form {
  id                                 String                  @id @default(cuid())
  createdAt                          DateTime                @default(now())
  updatedAt                          DateTime                @updatedAt
  emitterType                        EmitterType?
  emitterPickupSite                  String?
  emitterCompanyName                 String?
  emitterCompanySiret                String?
  emitterCompanyAddress              String?
  emitterCompanyContact              String?
  emitterCompanyPhone                String?
  emitterCompanyMail                 String?
  recipientCap                       String?
  recipientProcessingOperation       String?
  recipientCompanyName               String?
  recipientCompanySiret              String?
  recipientCompanyAddress            String?
  recipientCompanyContact            String?
  recipientCompanyPhone              String?
  recipientCompanyMail               String?
  transporterCompanyName             String?
  transporterCompanySiret            String?
  transporterCompanyAddress          String?
  transporterCompanyContact          String?
  transporterCompanyPhone            String?
  transporterCompanyMail             String?
  transporterReceipt                 String?
  transporterDepartment              String?
  transporterValidityLimit           DateTime?
  transporterNumberPlate             String?
  wasteDetailsCode                   String?
  wasteDetailsOnuCode                String?
  wasteDetailsPackagingInfos         Json?
  wasteDetailsPackagings             Json?
  wasteDetailsOtherPackaging         String?
  wasteDetailsNumberOfPackages       Int?
  wasteDetailsQuantity               Float?
  wasteDetailsQuantityType           QuantityType?
  wasteDetailsPop                    Boolean                 @default(false)
  readableId                         String                  @unique
  status                             Status                  @default(DRAFT)
  sentAt                             DateTime?
  sentBy                             String?
  isAccepted                         Boolean?                @default(false)
  receivedAt                         DateTime?
  quantityReceived                   Float?
  processingOperationDone            String?
  wasteDetailsName                   String?
  isDeleted                          Boolean?                @default(false)
  receivedBy                         String?
  wasteDetailsConsistence            Consistence?
  processedBy                        String?
  processedAt                        DateTime?
  nextDestinationProcessingOperation String?
  traderCompanyName                  String?
  traderCompanySiret                 String?
  traderCompanyAddress               String?
  traderCompanyContact               String?
  traderCompanyPhone                 String?
  traderCompanyMail                  String?
  traderReceipt                      String?
  traderDepartment                   String?
  traderValidityLimit                DateTime?
  brokerCompanyName                  String?
  brokerCompanySiret                 String?
  brokerCompanyAddress               String?
  brokerCompanyContact               String?
  brokerCompanyPhone                 String?
  brokerCompanyMail                  String?
  brokerReceipt                      String?
  brokerDepartment                   String?
  brokerValidityLimit                DateTime?
  processingOperationDescription     String?
  noTraceability                     Boolean?
  signedByTransporter                Boolean?
  transporterIsExemptedOfReceipt     Boolean?
  customId                           String?
  wasteAcceptationStatus             WasteAcceptationStatus?
  wasteRefusalReason                 String?
  nextDestinationCompanyName         String?
  nextDestinationCompanySiret        String?
  nextDestinationCompanyAddress      String?
  nextDestinationCompanyContact      String?
  nextDestinationCompanyPhone        String?
  nextDestinationCompanyMail         String?
  emitterWorkSiteName                String?
  emitterWorkSiteAddress             String?
  emitterWorkSiteCity                String?
  emitterWorkSitePostalCode          String?
  emitterWorkSiteInfos               String?
  transporterCustomInfo              String?
  recipientIsTempStorage             Boolean?                @default(false)
  signedAt                           DateTime?
  currentTransporterSiret            String?
  nextTransporterSiret               String?
  nextDestinationCompanyCountry      String?
  isImportedFromPaper                Boolean                 @default(false)
  ecoOrganismeName                   String?
  ecoOrganismeSiret                  String?
  signedBy                           String?
  temporaryStorageDetailId           String?                 @unique
  temporaryStorageDetail             TemporaryStorageDetail? @relation(fields: [temporaryStorageDetailId], references: [id])
  transportSegments                  TransportSegment[]
  appendix2Forms                     Form[]                  @relation("FormToForm")
  appendix2RootFormId                String?
  appendix2RootForm                  Form?                   @relation("FormToForm", fields: [appendix2RootFormId], references: [id])
  ownerId                            String
  owner                              User                    @relation(fields: [ownerId], references: [id])
  StatusLog                          StatusLog[]
}

model Grant {
  id            String      @id @default(cuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  code          String      @unique
  expires       Int
  redirectUri   String
  applicationId String
  application   Application @relation(fields: [applicationId], references: [id])
  userId        String
  user          User        @relation(fields: [userId], references: [id])
}

model Installation {
  id                String  @id @default(cuid())
  codeS3ic          String?
  nomEts            String?
  regime            String?
  libRegime         String?
  seveso            Seveso?
  libSeveso         String?
  familleIc         String?
  urlFiche          String?
  s3icNumeroSiret   String?
  irepNumeroSiret   String?
  gerepNumeroSiret  String?
  sireneNumeroSiret String?

  @@index([gerepNumeroSiret], name: "installation_gerepnumerosiret")
  @@index([irepNumeroSiret], name: "installation_irepnumerosiret")
  @@index([s3icNumeroSiret], name: "installation_s3icnumerosiret")
  @@index([sireneNumeroSiret], name: "installation_sirenenumerosiret")
}

model MembershipRequest {
  id              String                  @id @default(cuid())
  createdAt       DateTime                @default(now())
  updatedAt       DateTime                @updatedAt
  status          MembershipRequestStatus @default(PENDING)
  statusUpdatedBy String?
  sentTo          String[]
  companyId       String
  company         Company                 @relation(fields: [companyId], references: [id])
  userId          String
  user            User                    @relation(fields: [userId], references: [id])
}

model Rubrique {
  id               String     @id @default(cuid())
  codeS3ic         String?
  rubrique         String?
  alinea           String?
  dateAutorisation String?
  etatActivite     String?
  regimeAutorise   String?
  activite         String?
  volume           String?
  unite            String?
  category         String?
  wasteType        WasteType?

  @@index([codeS3ic], name: "rubrique_codes3ic")
}

model StatusLog {
  id            String    @id @default(cuid())
  status        Status
  loggedAt      DateTime?
  updatedFields Json
  formId        String
  form          Form      @relation(fields: [formId], references: [id])
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  authType      AuthType
}

model TemporaryStorageDetail {
  id                               String                  @id @default(cuid())
  tempStorerQuantityType           QuantityType?
  tempStorerQuantityReceived       Float?
  tempStorerWasteAcceptationStatus WasteAcceptationStatus?
  tempStorerWasteRefusalReason     String?
  tempStorerReceivedAt             DateTime?
  tempStorerReceivedBy             String?
  tempStorerSignedAt               DateTime?
  tempStorerSignedBy               String?
  destinationIsFilledByEmitter     Boolean?                @default(true)
  destinationCompanyName           String?
  destinationCompanySiret          String?
  destinationCompanyAddress        String?
  destinationCompanyContact        String?
  destinationCompanyPhone          String?
  destinationCompanyMail           String?
  destinationCap                   String?
  destinationProcessingOperation   String?
  wasteDetailsOnuCode              String?
  wasteDetailsPackagingInfos       Json?
  wasteDetailsPackagings           Json?
  wasteDetailsOtherPackaging       String?
  wasteDetailsNumberOfPackages     Int?
  wasteDetailsQuantity             Float?
  wasteDetailsQuantityType         QuantityType?
  transporterCompanyName           String?
  transporterCompanySiret          String?
  transporterCompanyAddress        String?
  transporterCompanyContact        String?
  transporterCompanyPhone          String?
  transporterCompanyMail           String?
  transporterIsExemptedOfReceipt   Boolean?
  transporterReceipt               String?
  transporterDepartment            String?
  transporterValidityLimit         DateTime?
  transporterNumberPlate           String?
  transporterCustomInfo            String?
  signedByTransporter              Boolean?
  signedBy                         String?
  signedAt                         DateTime?
  Form                             Form[]
}

model TraderReceipt {
  id            String    @id @default(cuid())
  receiptNumber String
  validityLimit DateTime
  department    String
  Company       Company[]
}

model BrokerReceipt {
  id            String    @id @default(cuid())
  receiptNumber String
  validityLimit DateTime
  department    String
  Company       Company[]
}

model TransporterReceipt {
  id            String    @id @default(cuid())
  receiptNumber String
  validityLimit DateTime
  department    String
  Company       Company[]
}

model VhuAgrement {
  id                   String    @id @default(cuid())
  agrementNumber       String
  department           String
  demolisseurCompanies Company[] @relation("VhuAgrementDemolisseur_Company")
  broyeurCompanies     Company[] @relation("VhuAgrementBroyeur_Company")
}

model TransportSegment {
  id                              String         @id @default(cuid())
  segmentNumber                   Int?
  transporterCompanySiret         String?
  transporterCompanyName          String?
  transporterCompanyAddress       String?
  transporterCompanyContact       String?
  transporterCompanyPhone         String?
  transporterCompanyMail          String?
  transporterIsExemptedOfReceipt  Boolean?
  transporterReceipt              String?
  transporterDepartment           String?
  transporterValidityLimit        DateTime?
  transporterNumberPlate          String?
  mode                            TransportMode?
  readyToTakeOver                 Boolean?       @default(false)
  previousTransporterCompanySiret String?
  takenOverAt                     DateTime?
  takenOverBy                     String?
  createdAt                       DateTime       @default(now())
  updatedAt                       DateTime       @updatedAt
  formId                          String
  form                            Form           @relation(fields: [formId], references: [id])
}

model User {
  id                   String               @id @default(cuid())
  email                String               @unique
  password             String
  name                 String?
  phone                String?
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  activatedAt          DateTime? // when was this user activated ? - emailing purpose
  firstAssociationDate DateTime? // when was this user first associated to any company ? - emailing purpose
  isActive             Boolean?             @default(false)
  isAdmin              Boolean?             @default(false)
  applicationId        String?
  application          Application?         @relation(fields: [applicationId], references: [id])
  companyAssociations  CompanyAssociation[]
  AccessToken          AccessToken[]
  Form                 Form[]
  Grant                Grant[]
  MembershipRequest    MembershipRequest[]
  StatusLog            StatusLog[]
  UserActivationHash   UserActivationHash[]

  bsdasriEmissionSignatures  Bsdasri[] @relation("BsdasriEmissionSignature")
  bsdasriTransportSignatures Bsdasri[] @relation("BsdasriTransportSignature")
  bsdasriReceptionSignatures Bsdasri[] @relation("BsdasriReceptionSignature")
  bsdasriOperationignatures  Bsdasri[] @relation("BsdasriOperationSignature")
}

model UserAccountHash {
  id           String    @id @default(cuid())
  email        String
  companySiret String
  hash         String    @unique
  updatedAt    DateTime  @updatedAt
  createdAt    DateTime  @default(now())
  role         UserRole
  acceptedAt   DateTime?
}

model UserActivationHash {
  id        String   @id @default(cuid())
  hash      String   @unique
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

// ----------------
// BSVHU FORM
// ----------------
enum BsvhuStatus {
  INITIAL
  SIGNED_BY_PRODUCER
  SENT
  PROCESSED
  REFUSED
}

enum BsvhuPackaging {
  UNITE
  LOT
}

enum BsvhuIdentificationType {
  NUMERO_ORDRE_REGISTRE_POLICE
  NUMERO_ORDRE_LOTS_SORTANTS
}

enum BsvhuRecipientType {
  BROYEUR
  DEMOLISSEUR
}

model Bsvhu {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDraft   Boolean  @default(false)
  isDeleted Boolean  @default(false)

  status BsvhuStatus @default(INITIAL)

  emitterAgrementNumber String?
  emitterCompanyName    String?
  emitterCompanySiret   String?
  emitterCompanyAddress String?
  emitterCompanyContact String?
  emitterCompanyPhone   String?
  emitterCompanyMail    String?

  destinationType                 BsvhuRecipientType?
  destinationPlannedOperationCode String?             @default("R 4")
  destinationAgrementNumber       String?
  destinationCompanyName          String?
  destinationCompanySiret         String?
  destinationCompanyAddress       String?
  destinationCompanyContact       String?
  destinationCompanyPhone         String?
  destinationCompanyMail          String?

  wasteCode             String?                  @default("16 01 06")
  packaging             BsvhuPackaging?
  identificationNumbers String[]
  identificationType    BsvhuIdentificationType?
  quantityNumber        Int?
  quantityTons          Float?

  emitterEmissionSignatureAuthor String?
  emitterEmissionSignatureDate   DateTime?

  transporterCompanyName              String?
  transporterCompanySiret             String?
  transporterCompanyAddress           String?
  transporterCompanyContact           String?
  transporterCompanyPhone             String?
  transporterCompanyMail              String?
  transporterCompanyVatNumber         String?
  transporterRecepisseNumber          String?
  transporterRecepisseDepartment      String?
  transporterRecepisseValidityLimit   DateTime?
  transporterTransportTakenOverAt     DateTime?
  transporterTransportSignatureAuthor String?
  transporterTransportSignatureDate   DateTime?

  destinationReceptionQuantityNumber                Int?
  destinationReceptionQuantityTons                  Float?
  destinationReceptionAcceptationStatus             WasteAcceptationStatus?
  destinationReceptionRefusalReason                 String?
  destinationReceptionIdentificationNumbers         String[]
  destinationReceptionIdentificationType            BsvhuIdentificationType?
  destinationReceptionDate                          DateTime?
  destinationOperationDate                          DateTime?
  destinationOperationCode                          String?
  destinationOperationNextDestinationCompanyName    String?
  destinationOperationNextDestinationCompanySiret   String?
  destinationOperationNextDestinationCompanyAddress String?
  destinationOperationNextDestinationCompanyContact String?
  destinationOperationNextDestinationCompanyPhone   String?
  destinationOperationNextDestinationCompanyMail    String?
  destinationOperationSignatureAuthor               String?
  destinationOperationSignatureDate                 DateTime?
}

// ----------------
// BSDASRI FORM
// ----------------

enum BsdasriStatus {
  INITIAL
  SIGNED_BY_PRODUCER
  SENT
  RECEIVED
  PROCESSED
  REFUSED
}

enum BsdasriEmitterType {
  PRODUCER
  COLLECTOR
}

enum BsdasriType {
  SIMPLE
  GROUPING
  SYNTHESIS
}

model Bsdasri {
  id                                          String                  @unique
  type                                        BsdasriType             @default(SIMPLE)
  status                                      BsdasriStatus           @default(INITIAL)
  createdAt                                   DateTime                @default(now())
  updatedAt                                   DateTime                @updatedAt
  isDeleted                                   Boolean?                @default(false)
  isDraft                                     Boolean?                @default(false)
  // emitter
  emitterOnBehalfOfEcoorganisme               Boolean?                @default(false)
  emitterCompanyName                          String?
  emitterCompanySiret                         String?
  emitterCompanyAddress                       String?
  emitterCompanyContact                       String?
  emitterCompanyPhone                         String?
  emitterCompanyMail                          String?
  emitterPickupSiteName                       String?
  emitterPickupSiteAddress                    String?
  emitterPickupSiteCity                       String?
  emitterPickupSitePostalCode                 String?
  emitterPickupSiteInfos                      String?
  emitterCustomInfo                           String? // free field
  // emission
  wasteCode                                   String?
  wasteAdr                                    String?
  emitterWasteWeightValue                     Float? // kg
  emitterWasteWeightIsEstimate                Boolean?
  emitterWasteVolume                          Int? // liters
  emitterWastePackagingsInfo                  Json?
  emissionSignatory                           User?                   @relation("BsdasriEmissionSignature", fields: [emissionSignatoryId], references: [id])
  emissionSignatoryId                         String?
  emitterEmissionSignatureDate                DateTime?
  emitterEmissionSignatureAuthor              String?
  isEmissionDirectTakenOver                   Boolean                 @default(false)
  isEmissionTakenOverWithSecretCode           Boolean                 @default(false)
  // transporter
  transporterCompanyName                      String?
  transporterCompanySiret                     String?
  transporterCompanyAddress                   String?
  transporterCompanyPhone                     String?
  transporterCompanyContact                   String?
  transporterCompanyMail                      String?
  transporterRecepisseNumber                  String?
  transporterRecepisseDepartment              String?
  transporterRecepisseValidityLimit           DateTime?
  transporterCustomInfo                       String? // free field
  // transport
  transporterTransportMode                    TransportMode?          @default(ROAD)
  transporterAcceptationStatus                WasteAcceptationStatus?
  transporterWasteRefusalReason               String?
  transporterWasteRefusedWeightValue          Float? // kg
  transporterTakenOverAt                      DateTime?
  transporterWastePackagingsInfo              Json?
  transporterWasteWeightValue                 Float? // kg
  transporterWasteWeightIsEstimate            Boolean?
  transporterWasteVolume                      Int? // liters
  handedOverToRecipientAt                     DateTime?
  transportSignatory                          User?                   @relation("BsdasriTransportSignature", fields: [transportSignatoryId], references: [id])
  transportSignatoryId                        String?
  transporterTransportSignatureDate           DateTime?
  transporterTransportSignatureAuthor         String?
  // destination
  destinationCompanyName                      String?
  destinationCompanySiret                     String?
  destinationCompanyAddress                   String?
  destinationCompanyContact                   String?
  destinationCompanyPhone                     String?
  destinationCompanyMail                      String?
  destinationCustomInfo                       String? // free field
  // reception
  destinationWastePackagingsInfo              Json?
  destinationReceptionAcceptationStatus       WasteAcceptationStatus?
  destinationReceptionWasteRefusalReason      String?
  destinationReceptionWasteRefusedWeightValue Float? // kg
  destinationReceptionWasteWeightValue        Float? // kg
  destinationReceptionWasteVolume             Int? // liters
  destinationReceptionDate                    DateTime? // accepted or refused date
  // processing
  destinationOperationCode                    String?
  destinationOperationDate                    DateTime?
  receptionSignatory                          User?                   @relation("BsdasriReceptionSignature", fields: [receptionSignatoryId], references: [id])
  receptionSignatoryId                        String?
  destinationReceptionSignatureDate           DateTime?
  destinationReceptionSignatureAuthor         String?
  operationSignatory                          User?                   @relation("BsdasriOperationSignature", fields: [operationSignatoryId], references: [id])
  operationSignatoryId                        String?
  destinationOperationSignatureDate           DateTime?
  destinationOperationSignatureAuthor         String?
  // associations
  grouping                                    Bsdasri[]               @relation("BsdasriToBsdasri")
  groupingIn                                  Bsdasri?                @relation("BsdasriToBsdasri", fields: [groupingInId], references: [id])
  groupingInId                                String?
}

// ----------------
// BSFF FORM
// ----------------

model Bsff {
  id        String     @id
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  isDeleted Boolean    @default(false)
  isDraft   Boolean    @default(false)
  type      BsffType   @default(TRACER_FLUIDE)
  status    BsffStatus @default(INITIAL)

  emitterCompanyName    String?
  emitterCompanySiret   String?
  emitterCompanyAddress String?
  emitterCompanyContact String?
  emitterCompanyPhone   String?
  emitterCompanyMail    String?

  emitterEmissionSignatureAuthor String?
  emitterEmissionSignatureDate   DateTime?

  packagings Json @default("[]")

  wasteCode        String?
  wasteNature      String?
  wasteDescription String?
  wasteAdr         String?

  quantityKilos      Float?
  quantityIsEstimate Boolean?

  transporterCompanyName      String?
  transporterCompanySiret     String?
  transporterCompanyVatNumber String?
  transporterCompanyAddress   String?
  transporterCompanyContact   String?
  transporterCompanyPhone     String?
  transporterCompanyMail      String?

  transporterRecepisseNumber        String?
  transporterRecepisseDepartment    String?
  transporterRecepisseValidityLimit DateTime?

  transporterTransportMode            TransportMode?
  transporterTransportSignatureAuthor String?
  transporterTransportSignatureDate   DateTime?

  destinationCompanyName    String?
  destinationCompanySiret   String?
  destinationCompanyAddress String?
  destinationCompanyContact String?
  destinationCompanyPhone   String?
  destinationCompanyMail    String?

  destinationReceptionDate    DateTime?
  destinationReceptionKilos   Float?
  destinationReceptionRefusal String?

  destinationReceptionSignatureAuthor String?
  destinationReceptionSignatureDate   DateTime?

  destinationPlannedOperationCode String?

  destinationOperationCode String?

  destinationOperationNextDestinationCompanyName      String?
  destinationOperationNextDestinationCompanySiret     String?
  destinationOperationNextDestinationCompanyVatNumber String?
  destinationOperationNextDestinationCompanyAddress   String?
  destinationOperationNextDestinationCompanyContact   String?
  destinationOperationNextDestinationCompanyPhone     String?
  destinationOperationNextDestinationCompanyMail      String?

  destinationOperationSignatureAuthor String?
  destinationOperationSignatureDate   DateTime?

  destinationCap String?

  ficheInterventions BsffFicheIntervention[] @relation("FicheInterventionToBsff")

  previousBsffs Bsff[]  @relation("BsffToBsff")
  nextBsff      Bsff?   @relation("BsffToBsff", fields: [nextBsffId], references: [id])
  nextBsffId    String?
}

enum BsffType {
  TRACER_FLUIDE
  COLLECTE_PETITES_QUANTITES
  GROUPEMENT
  RECONDITIONNEMENT
  REEXPEDITION
}

enum BsffStatus {
  INITIAL
  SIGNED_BY_EMITTER
  SENT
  RECEIVED
  INTERMEDIATELY_PROCESSED
  PROCESSED
  REFUSED
}

model BsffFicheIntervention {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  numero     String
  kilos      Float
  postalCode String

  detenteurCompanyName    String
  detenteurCompanySiret   String
  detenteurCompanyAddress String
  detenteurCompanyContact String
  detenteurCompanyPhone   String
  detenteurCompanyMail    String

  operateurCompanyName    String
  operateurCompanySiret   String
  operateurCompanyAddress String
  operateurCompanyContact String
  operateurCompanyPhone   String
  operateurCompanyMail    String

  Bsff   Bsff?   @relation("FicheInterventionToBsff", fields: [bsffId], references: [id])
  bsffId String?
}

// ----------------
// BSDA FORM
// ----------------
enum BsdaStatus {
  INITIAL
  SIGNED_BY_PRODUCER
  SIGNED_BY_WORKER
  SENT
  PROCESSED
  REFUSED
  AWAITING_CHILD
}

enum BsdaType {
  COLLECTION_2710
  OTHER_COLLECTIONS
  GATHERING
  RESHIPMENT
}

enum BsdaConsistence {
  SOLIDE
  PULVERULENT
  OTHER
}

model Bsda {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDraft   Boolean  @default(false)
  isDeleted Boolean  @default(false)

  status BsdaStatus @default(INITIAL)
  type   BsdaType   @default(OTHER_COLLECTIONS)

  emitterIsPrivateIndividual     Boolean?
  emitterCompanyName             String?
  emitterCompanySiret            String?
  emitterCompanyAddress          String?
  emitterCompanyContact          String?
  emitterCompanyPhone            String?
  emitterCompanyMail             String?
  emitterWorkSiteName            String?
  emitterWorkSiteAddress         String?
  emitterWorkSiteCity            String?
  emitterWorkSitePostalCode      String?
  emitterWorkSiteInfos           String?
  emitterEmissionSignatureAuthor String?
  emitterEmissionSignatureDate   DateTime?

  wasteCode         String?
  wasteName         String?
  wasteFamilyCode   String?
  wasteMaterialName String?
  wasteConsistence  BsdaConsistence?
  wasteSealNumbers  String[]
  wasteAdr          String?

  packagings    Json?
  quantityType  QuantityType?
  quantityValue Float?

  brokerCompanyName            String?
  brokerCompanySiret           String?
  brokerCompanyAddress         String?
  brokerCompanyContact         String?
  brokerCompanyPhone           String?
  brokerCompanyMail            String?
  brokerRecepisseNumber        String?
  brokerRecepisseDepartment    String?
  brokerRecepisseValidityLimit DateTime?

  destinationCompanyName          String?
  destinationCompanySiret         String?
  destinationCompanyAddress       String?
  destinationCompanyContact       String?
  destinationCompanyPhone         String?
  destinationCompanyMail          String?
  destinationCap                  String?
  destinationPlannedOperationCode String?

  destinationReceptionDate              DateTime?
  destinationReceptionQuantityType      QuantityType?
  destinationReceptionQuantityValue     Float?
  destinationReceptionAcceptationStatus WasteAcceptationStatus?
  destinationReceptionRefusalReason     String?

  destinationOperationCode            String?
  destinationOperationDate            DateTime?
  destinationOperationSignatureAuthor String?
  destinationOperationSignatureDate   DateTime?

  destinationOperationNextDestinationCompanySiret         String?
  destinationOperationNextDestinationCompanyVatNumber     String?
  destinationOperationNextDestinationCompanyName          String?
  destinationOperationNextDestinationCompanyAddress       String?
  destinationOperationNextDestinationCompanyContact       String?
  destinationOperationNextDestinationCompanyPhone         String?
  destinationOperationNextDestinationCompanyMail          String?
  destinationOperationNextDestinationCap                  String?
  destinationOperationNextDestinationPlannedOperationCode String?

  transporterCompanyName      String?
  transporterCompanySiret     String?
  transporterCompanyAddress   String?
  transporterCompanyContact   String?
  transporterCompanyPhone     String?
  transporterCompanyMail      String?
  transporterCompanyVatNumber String?

  transporterRecepisseIsExempted    Boolean?
  transporterRecepisseNumber        String?
  transporterRecepisseDepartment    String?
  transporterRecepisseValidityLimit DateTime?

  transporterTransportMode            TransportMode?
  transporterTransportPlates          String[]
  transporterTransportTakenOverAt     DateTime?
  transporterTransportSignatureAuthor String?
  transporterTransportSignatureDate   DateTime?

  workerCompanyName    String?
  workerCompanySiret   String?
  workerCompanyAddress String?
  workerCompanyContact String?
  workerCompanyPhone   String?
  workerCompanyMail    String?

  workerWorkHasEmitterPaperSignature Boolean?
  workerWorkSignatureAuthor          String?
  workerWorkSignatureDate            DateTime?

  bsdas       Bsda[]  @relation("BsdasToBsda")
  childBsda   Bsda?   @relation("BsdasToBsda", fields: [childBsdaId], references: [id])
  childBsdaId String?
}
