input BsdasriCompanyWhere {
  siret: String!
}
input BsdasriSignatureWhere {
  date: DateFilter!
}
input BsdasriEmitterWhere {
  company: BsdasriCompanyWhere
  signature: BsdasriSignatureWhere
}
input BsdasriTransporterWhere {
  company: BsdasriCompanyWhere
  signature: BsdasriSignatureWhere
}
input BsdasriDestinationWhere {
  company: BsdasriCompanyWhere
  signature: BsdasriSignatureWhere
}

input BsdasriWhere {
  "(Optionnel) Permet de récupérer uniquement les bordereaux en brouillon"
  isDraft: Boolean
  """
  (Optionnel) Filtre sur le statut des bordereaux
  Si aucun filtre n'est passé, les bordereaux seront retournés quel que soit leur statut
  Défaut à vide.
  """
  status: BsdasriStatus
  """
  Expérimental : Filtre le résultat sur l'ID des bordereaux
  """
  id_in: [ID!]

  createdAt: DateFilter
  updatedAt: DateFilter
  emitter: BsdasriEmitterWhere
  transporter: BsdasriTransporterWhere
  destination: BsdasriDestinationWhere
  destinationOperationCode: [destinationOperationCodeTypes!]
  """
  (Optionnel) Filtre sur l'état de regroupement des bordereaux
  Si aucun filtre n'est passé, les bordereaux seront retournés sans filtrage supplémentaire
  Si groupable: true, les bordereaux retournés ne sont pas déjà regroupés et ne regroupent pas d'autres bordereaux
  Si groupable: false, les bordereaux retournés ne sont déjà regroupés ou ne regroupent d'autres bordereaux
  """
  groupable: Boolean
  _and: [BsdasriWhere!]
  _or: [BsdasriWhere!]
  _not: [BsdasriWhere!]
}

input BsdasriPackagingInfoInput {
  "Type de conditionnement"
  type: BsdasriPackagings!

  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String

  "Volume de chaque colis associé à ce conditionnement"
  volume: Int!

  "Nombre de colis associés à ce conditionnement"
  quantity: Int!
}

input PickupSiteInput {
  name: String
  address: String
  city: String
  postalCode: String
  infos: String
}

input BsdasriWasteInput {
  adr: String
  code: String
}
input BsdasriEmissionInput {
  weight: BsdasriWeightInput
  packagingInfos: [BsdasriPackagingInfoInput!]
}
input BsdasriEmitterInput {
  company: CompanyInput
  pickupSite: PickupSiteInput
  "Champ libre émetteur"
  customInfo: String
  onBehalfOfEcoorganisme: Boolean
  emission: BsdasriEmissionInput
}

input BsdasriWeightInput {
  value: Float
  isEstimate: Boolean
}
input BsdasriRealWeightInput {
  value: Float!
}

input BsdasriWasteAcceptationInput {
  status: WasteAcceptationStatusInput
  refusalReason: String
  refusedWeight: Float
}

input BsdasriTransportInput {
  weight: BsdasriWeightInput
  packagingInfos: [BsdasriPackagingInfoInput!]
  takenOverAt: DateTime
  handedOverAt: DateTime
  wasteAcceptation: BsdasriWasteAcceptationInput
  mode: TransportMode
}

input BsdasriRecepisseInput {
  number: String
  department: String
  validityLimit: DateTime
}

input BsdasriTransporterInput {
  "Établissement collecteur - transporteur"
  company: CompanyInput

  "Récépissé transporteur"
  recepisse: BsdasriRecepisseInput

  "Champ libre transporteur"
  customInfo: String

  transport: BsdasriTransportInput
}

input BsdasriDestinationInput {
  "Établissement émetteur"
  company: CompanyInput

  "Champ libre transporteur"
  customInfo: String

  reception: BsdasriReceptionInput
  operation: BsdasriOperationInput
}

input BsdasriReceptionInput {
  volume: Int
  packagingInfos: [BsdasriPackagingInfoInput!]
  date: DateTime
  wasteAcceptation: BsdasriWasteAcceptationInput
}

input BsdasriOperationInput {
  weight: BsdasriRealWeightInput
  """
  Code de traitement
  Les codes R12 et D12 ne sont autorisé que si le destinataire est une installation TTR (tri transit regroupement).
  """
  code: String
  date: DateTime
}

input BsdasriInput {
  waste: BsdasriWasteInput

  emitter: BsdasriEmitterInput

  transporter: BsdasriTransporterInput

  destination: BsdasriDestinationInput
}

"Payload de regroupement"
input GroupingBsdasriInput {
  "Identifiant unique du bordereau"
  id: ID
}

input BsdasriCreateInput {
  waste: BsdasriWasteInput

  emitter: BsdasriEmitterInput

  transporter: BsdasriTransporterInput

  destination: BsdasriDestinationInput

  grouping: [GroupingBsdasriInput]
}

input BsdasriUpdateInput {
  waste: BsdasriWasteInput

  emitter: BsdasriEmitterInput

  transporter: BsdasriTransporterInput
  destination: BsdasriDestinationInput

  grouping: [GroupingBsdasriInput]
}

input BsdasriSignatureInput {
  type: BsdasriSignatureType!
  author: String!
}

input BsdasriSignatureWithSecretCodeInput {
  author: String!
  securityCode: Int!
}
