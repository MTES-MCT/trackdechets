input BsdasriEmitterWhere {
  company: CompanyWhere
  emission: BsdasriEmissionWhere
}

input BsdasriEmissionWhere {
  signature: SignatureWhere
}

input BsdasriTransporterWhere {
  company: CompanyWhere
  transport: BsdasriTransportWhere
}
input BsdasriTransportWhere {
  signature: SignatureWhere
}

input BsdasriDestinationWhere {
  company: CompanyWhere
  reception: BsdasriReceptionWhere
  operation: BsdasriOperationWhere
}

input BsdasriReceptionWhere {
  date: DateFilter
  signature: SignatureWhere
}

input BsdasriOperationWhere {
  code: StringFilter
  date: DateFilter
  signature: SignatureWhere
}

input BsdasriWhere {
  "(Optionnel) Permet de récupérer uniquement les bordereaux en brouillon"
  isDraft: Boolean

  """
  (Optionnel) Filtre sur le statut des bordereaux
  Si aucun filtre n'est passé, les bordereaux seront retournés quel que soit leur statut
  Défaut à vide.
  """
  status: BsdasriStatusFilter

  """
  Filtre le résultat sur l'ID des bordereaux
  """
  id: IdFilter

  createdAt: DateFilter
  updatedAt: DateFilter
  emitter: BsdasriEmitterWhere
  transporter: BsdasriTransporterWhere
  destination: BsdasriDestinationWhere

  """
  (Optionnel) Filtre sur l'état de regroupement des bordereaux
  Si aucun filtre n'est passé, les bordereaux seront retournés sans filtrage supplémentaire
  Si groupable: true, les bordereaux retournés ne sont pas déjà regroupés et ne regroupent pas d'autres bordereaux
  Si groupable: false, les bordereaux retournés ne sont déjà regroupés ou ne regroupent d'autres bordereaux
  """
  groupable: Boolean

  _and: [BsdasriWhere!]
  _or: [BsdasriWhere!]
  _not: BsdasriWhere
}

"Filtre sur le statut"
input BsdasriStatusFilter {
  _eq: BsdasriStatus
  _in: [BsdasriStatus!]
}

input BsdasriPackagingsInput {
  "Type de conditionnement"
  type: BsdasriPackagingType!

  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String

  "Volume de chaque colis associé à ce conditionnement"
  volume: Int!

  "Nombre de colis associés à ce conditionnement"
  quantity: Int!
}

input PickupSiteInput {
  name: String
  address: String
  city: String
  postalCode: String
  infos: String
}

input BsdasriWasteInput {
  adr: String
  code: String
}
input BsdasriEmissionInput {
  weight: BsdasriWeightInput
  packagings: [BsdasriPackagingsInput!]
}
input BsdasriEmitterInput {
  company: CompanyInput
  pickupSite: PickupSiteInput
  "Champ libre émetteur"
  customInfo: String
  emission: BsdasriEmissionInput
}

input BsdasriEcoOrganismeInput {
  name: String!
  """
  SIRET composé de 14 caractères correspondant à un éco-organisme? Seul DASTRI est autorisé à ce jour.
  """
  siret: String!
}

input BsdasriWeightInput {
  value: Float
  isEstimate: Boolean
}
input BsdasriRealWeightInput {
  value: Float!
}

input BsdasriAcceptationInput {
  status: WasteAcceptationStatusInput
  refusalReason: String
  refusedWeight: Float
}

input BsdasriTransportInput {
  weight: BsdasriWeightInput
  packagings: [BsdasriPackagingsInput!]
  takenOverAt: DateTime
  handedOverAt: DateTime
  acceptation: BsdasriAcceptationInput
  mode: TransportMode
  plates: [String!]
}

input BsdasriRecepisseInput {
  number: String
  department: String
  validityLimit: DateTime
}

input BsdasriTransporterInput {
  "Établissement collecteur - transporteur"
  company: CompanyInput

  "Récépissé transporteur"
  recepisse: BsdasriRecepisseInput

  "Champ libre transporteur"
  customInfo: String

  transport: BsdasriTransportInput
}

input BsdasriDestinationInput {
  "Établissement émetteur"
  company: CompanyInput

  "Champ libre transporteur"
  customInfo: String

  reception: BsdasriReceptionInput
  operation: BsdasriOperationInput
}

input BsdasriReceptionInput {
  volume: Int
  packagings: [BsdasriPackagingsInput!]
  date: DateTime
  acceptation: BsdasriAcceptationInput
}

input BsdasriOperationInput {
  weight: BsdasriRealWeightInput
  """
  Code de traitement
  Les codes R12 et D12 ne sont autorisé que si le destinataire est une installation TTR (tri transit regroupement).
  """
  code: String
  date: DateTime
}

input BsdasriInput {
  waste: BsdasriWasteInput

  emitter: BsdasriEmitterInput

  ecoOrganisme: BsdasriEcoOrganismeInput

  transporter: BsdasriTransporterInput

  destination: BsdasriDestinationInput

  grouping: [ID!]
}

input BsdasriSignatureInput {
  type: BsdasriSignatureType!
  author: String!
}

input BsdasriSignatureWithSecretCodeInput {
  author: String!
  securityCode: Int!
}
