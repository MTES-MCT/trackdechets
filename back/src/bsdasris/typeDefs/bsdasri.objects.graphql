type BsdasriSignature {
  date: DateTime
  author: String
}

"Émetteur du Bsdasri, Personne responsable de l'émimination des déchets (PRED)"
type BsdasriEmitter {
  "Établissement émetteur"
  company: FormCompany
  "Site d'emport du déceht, si différent de celle de l'émetteur"
  workSite: WorkSite
  "Date de remise au tranporteur"
  handOverToTransporterAt: DateTime
  "Champ libre"
  customInfo: String
  "Type d'émetteur"
  type: BsdasriEmitterType
  "Agit pour le compte de l'éco organisme agréé"
  onBehalfOfEcoorganisme: Boolean!
}

"Destinataire du Bsdasri"
type BsdasriRecipient {
  """
  Installation destinataire
  """
  company: FormCompany

  "Champ libre"
  customInfo: String
}

"""
Collecteur transporteur
"""
type BsdasriTransporter {
  "Établissement de destination"
  company: FormCompany

  "N° de récipissé"
  receipt: String

  "Département"
  receiptDepartment: String

  "Limite de validité du récipissé"
  receiptValidityLimit: DateTime

  "Champ libre"
  customInfo: String
}

"Informations sur le conditionnement Bsdasri"
type BsdasriPackagingInfo {
  "Type de conditionnement"
  type: BsdasriPackagings!

  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String

  "Nombre de colis associés à ce conditionnement"
  quantity: Int!

  volume: Int!
}

type BsdasriQuantity {
  "Quantité en kg"
  value: Float
  "Quantité réélle (pesée ou estimée)"
  type: QuantityType
}
type BsdasriOperationQuantity {
  "Quantité en kg"
  value: Float
}

"Détail sur le déchet emis du Bsdasri"
type BsdasriEmissionWasteDetails {
  "Quantité émise"
  quantity: BsdasriQuantity
  "Volume en litres"
  volume: Int
  packagingInfos: [BsdasriPackagingInfo!]
  onuCode: String
}

"Détail sur le déchet transporté"
type BsdasriTransportWasteDetails {
  "Quantité transportée"
  quantity: BsdasriQuantity

  volume: Int
  packagingInfos: [BsdasriPackagingInfo!]
}

"Détail sur le déchet reçu du Bsdasri"
type BsdasriReceptionWasteDetails {
  volume: Int
  packagingInfos: [BsdasriPackagingInfo!]
}

"Informations relatives au déchet émis"
type BsdasriEmission {
  wasteCode: String
  wasteDetails: BsdasriEmissionWasteDetails
  handedOverAt: DateTime
  signature: BsdasriSignature
  "Emporté sans signature PRED avec son autorisation prélalable"
  isTakenOverWithoutEmitterSignature: Boolean
  "Signature PRED avec code de sécurité"
  isTakenOverWithSecretCode: Boolean
}

"Informations relatives à l'acceptation ou au refus du déchet (Bsdasri)"
type BsdasriWasteAcceptation {
  status: String
  refusalReason: String
  refusedQuantity: Float
}

"Informations relatives au transport du Bsdasri"
type BsdasriTransport {
  wasteDetails: BsdasriTransportWasteDetails
  wasteAcceptation: BsdasriWasteAcceptation
  handedOverAt: DateTime
  takenOverAt: DateTime
  signature: BsdasriSignature
  mode: TransportMode!
}

"Informations relatives à la réception du Bsdasri"
type BsdasriReception {
  wasteDetails: BsdasriReceptionWasteDetails
  wasteAcceptation: BsdasriWasteAcceptation
  receivedAt: DateTime
  signature: BsdasriSignature
}

"Informations relatives au traitement du Bsdasri"
type BsdasriOperation {
  "Quantité traitée"
  quantity: BsdasriOperationQuantity
  "Code de l'opération de traitement"
  processingOperation: String
  "Date de l'opération de traitement"
  processedAt: DateTime
  signature: BsdasriSignature
}

"Bordereau Bsdasri"
type Bsdasri {
  id: ID!
  status: BsdasriStatus!
  bsdasriType: BsdasriType!
  createdAt: DateTime
  updatedAt: DateTime
  isDraft: Boolean!

  emitter: BsdasriEmitter
  emission: BsdasriEmission

  transporter: BsdasriTransporter
  transport: BsdasriTransport

  recipient: BsdasriRecipient
  reception: BsdasriReception
  operation: BsdasriOperation

  "Bordereaux groupés"
  regroupedBsdasris: [ID!]

  "Bordereaux de synthèse associés"
  synthesizedBsdasris: [ID!]

  metadata: BsdasriMetadata!

  allowDirectTakeOver: Boolean
}

type BsdasriError {
  message: String!
  path: String!
  requiredFor: [BsdasriSignatureType!]!
}
type BsdasriMetadata {
  errors: [BsdasriError]!
}

type BsdasriConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [BsdasriEdge!]!
}
type BsdasriEdge {
  cursor: String!
  node: Bsdasri!
}
