type Rubrique {
  rubrique: String
  alinea: String
  etatActivite: String
  regimeAutorise: String
  activite: String
  category: String
  volume: String
  unite: String
  wasteType: WasteType
}

enum GerepType {
  Producteur
  Traiteur
}

enum WasteType {
  INERTE
  NOT_DANGEROUS
  DANGEROUS
}

type Declaration {
  annee: String
  codeDechet: String
  libDechet: String
  gerepType: GerepType
}

type Installation {
  codeS3ic: String
  urlFiche: String
  rubriques: [Rubrique]
  declarations: [Declaration]
}

enum CompanyType {
  PRODUCER
  COLLECTOR
  WASTEPROCESSOR
  TRANSPORTER
  WASTE_VEHICLES
  WASTE_CENTER
  TRADER
}

# Private company type accessed by a user
# who is member of the company. Is is typically
# accessed through `query { user { companies } }`
type CompanyPrivate {
  # Company info in Prisma
  ########################
  id: ID!
  companyTypes: [CompanyType]
  gerepId: String
  securityCode: Int!

  # Contact info (from prisma)
  ###########################
  contactEmail: String
  contactPhone: String
  website: String

  # List of company members
  users: [CompanyMember]

  # Role of the logged in user in the company
  userRole: UserRole

  # Given name used in company selector
  givenName: String

  # Company info from SIRENE
  ##########################
  siret: String
  address: String
  name: String
  naf: String
  libelleNaf: String
  longitude: Float
  latitude: Float

  # Company info from ICPE database
  #################################
  installation: Installation
}

# Public company type that can be accessed
# by a user who is not member of the company
# (for example in the fiche entreprise)
type CompanyPublic {
  # Contact info (from prisma)
  ###########################
  contactEmail: String
  contactPhone: String
  website: String

  # Company info from SIRENE
  ##########################
  siret: String
  address: String
  name: String
  naf: String
  libelleNaf: String
  longitude: Float
  latitude: Float

  # Company info from ICPE database
  installation: Installation

  # Whether or not this company is registered in TD
  isRegistered: Boolean
}

type CompanySearchResult {
  # company info from SIRENE
  siret: String
  address: String
  name: String
  companyTypes: [CompanyType]
  naf: String
  libelleNaf: String
  longitude: Float
  latitude: Float

  # company info from ICPE database
  installation: Installation
}

type CompanyFavorite {
  name: String
  siret: String
  address: String
  contact: String
  phone: String
  mail: String
}

type Query {
  companyInfos(siret: String!): CompanyPublic
  searchCompanies(clue: String!, department: Int): [CompanySearchResult]
  favorites(type: FavoriteType!): [CompanyFavorite]
}

type Mutation {
  renewSecurityCode(siret: String!): CompanyPrivate
  updateCompany(
    siret: String!
    gerepId: String
    contactEmail: String
    contactPhone: String
    website: String
    companyTypes: [CompanyType]
    givenName: String
  ): CompanyPrivate
  createCompany(companyInput: PrivateCompanyInput!): CompanyPrivate
}

input PrivateCompanyInput {
  siret: String!
  gerepId: String
  companyTypes: [CompanyType]
  codeNaf: String
  companyName: String
}

type CompanyMember {
  id: ID!
  email: String!
  name: String
  role: UserRole
  isActive: Boolean
  isPendingInvitation: Boolean
  isMe: Boolean
}

enum FavoriteType {
  EMITTER
  TRANSPORTER
  RECIPIENT
  TRADER
}
