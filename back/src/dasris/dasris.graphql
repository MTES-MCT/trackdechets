scalar DateTime

enum DasriRole {
  "Les Dasri dont je suis transporteur"
  TRANSPORTER
  "Les Dasri dont je suis la destination de traitement"
  RECIPIENT
  "Les Dasri dont je suis l'émetteur"
  EMITTER
}

enum DasriStatus {
  "Dasri à l'état de brouillon"
  DRAFT

  "Dasri scellé (publié)"
  SEALED

  "Optionnel, Dasri signé par la PRED (émetteur)"
  READY_FOR_TAKEOVER

  "Dasri envoyé vers l'établissement de destination"
  SENT

  "Dasri reçu par l'établissement de destination"
  RECEIVED

  "Dasri dont les déchets ont été traités"
  PROCESSED

  "Déchet refusé"
  REFUSED
}

 

"Type de packaging du déchet"
enum DasriPackagings {
  "Caisse en carton avec sac en plastique"
  BOITE_CARTON

  "Fûts ou jerrican à usage unique"
  FUT

  "Boîtes et Mini-collecteurs pour déchets perforants"
  BOITE_PERFORANTS

  "Grand emballage"
  GRAND_EMBALLAGE

  "Grand récipient pour vrac"
  VRAC

  "Autre"
  AUTRE
}

"Émetteur du Dasri, Personne responsable de l'émimination des déchets (PRED)"
type DasriEmitter {
  "Établissement émetteur"
  company: FormCompany
  "Site d'emport du déceht, si différent de celle de l'émetteur"
  workSite: WorkSite
  "Date de remise au tranporteur"
  handOverToTransporterAt: DateTime
  "Champ libre"
  customInfo: String
}

"Destinataire du Dasri"
type DasriRecipient {
  """
  Installation destinataire
  """
  company: FormCompany

  "Champ libre"
  customInfo: String
}

"""
Collecteur transporteur
"""
type DasriTransporter {
  "Établissement de destination"
  company: FormCompany

  "N° de récipissé"
  receipt: String

  "Département"
  receiptDepartment: String

  "Limite de validité du récipissé"
  receiptValidityLimit: DateTime

  "Champ libre"
  customInfo: String
}

"Informations sur le conditionnement Dasri"
type DasriPackagingInfo {
  "Type de conditionnement"
  type: DasriPackagings!

  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String

  "Nombre de colis associés à ce conditionnement"
  quantity: Int!

  volume: Int!
}
"Détail sur le déchet proprement dit du Dasri"
type DasriWasteDetails {
  quantity: Int
  quantityType: QuantityType
  volume: Int
  packagingInfos: [DasriPackagingInfo!]
  onuCode: String
}

"Informations relatives au déchet émis"
type DasriEmission {
  wasteCode: String
  wasteDetails: DasriWasteDetails
  handedOverAt: DateTime
  signedBy: String
  signedAt: DateTime
}

"Informations relatives à l'acceptation ou au refus du déchet (Dasri)"
type DasriWasteAcceptation {
  status: WasteAcceptationStatusInput
  refusalReason: String
  refusedQuantity: Int
}

"Informations relatives au transport du Dasri"
type DasriTransport {
  wasteDetails: DasriWasteDetails
  wasteAcceptation: DasriWasteAcceptation
  handedOverAt: DateTime
  takenOverAt: DateTime
  signedBy: String
  signedAt: DateTime
}

"Informations relatives à la réception du Dasri"
type DasriReception {
  wasteDetails: DasriWasteDetails
  wasteAcceptation: DasriWasteAcceptation
  receivedAt: DateTime
  signedBy: String
  signedAt: DateTime
}

"Informations relatives au traitement du Dasri"
type DasriOperation {
  signedBy: String
  signedAt: DateTime
  processingOperation: String
  processedAt: DateTime
}

"Bordereau Dasri"
type Dasri {
  id: ID!
  readableId: String!
  customId: String
  status: DasriStatus!
  createdAt: DateTime
  updatedAt: DateTime

  emitter: DasriEmitter
  emission: DasriEmission

  transporter: DasriTransporter
  transport: DasriTransport

  recipient: DasriRecipient
  reception: DasriReception
  operation: DasriOperation
}

type Query {
  """
  Renvoie les Dasri de l'établissement sélectionné.
  Si aucun SIRET n'est précisé et que l'utilisateur est membre d'une seule entreprise
  alors les Dasri de cette entreprise sont retournés.
  Si l'utilisateur est membre de 2 entreprises ou plus, vous devez obligatoirement
  préciser un SIRET
  Si l'utilisateur n'est membre d'aucune entreprise, un tableau vide sera renvoyé

  Vous pouvez filtrer:
  - par rôle que joue votre entreprise sur le Dasri via `role`
  - par date de dernière modification via `updatedAfter`
  - par date d'envoi via `sentAfter`
  - par statut du Dasri via `status`
  - par code déchet via `wasteCode`
  - par SIRET d'une entreprise présente n'importe où sur le bordereau via `siretPresentOnForm`

  Par défaut:
  - tous les BSD accessibles sont retournés
  - les BSD sont classés par date de création, de la plus récente à la plus vieille
  - les résultats sont paginés par 50. Il est possible de modifier cette valeur via `first` ou `last` en fonction du curseur utilisé
  - pour afficher la suite des résultats, utiliser `cursorAfter` ou `cursorBefore`
  """
  dasris(
    "SIRET d'un établissement dont je suis membre"
    siret: String

    """
    (Optionnel) PAGINATION
    Permet en conjonction avec `first` de paginer "en avant"
    (des Dasri les plus récents aux Dasri les plus anciens)
    Curseur après lequel les Dasri doivent être retournés
    Attend un identifiant (propriété `id`) de BSD
    Défaut à vide, pour retourner les Dasri les plus récents
    Le BSD précisé dans le curseur ne fait pas partie du résultat
    """
    after: ID
    """
    (Optionnel) PAGINATION
    Permet en conjonction avec `after` de paginer "en avant"
    (des Dasri les plus récents aux Dasri les plus anciens)
    Nombre de Dasri retournés après le `cursorAfter`
    Défaut à 50, maximum à 500
    """
    first: Int

    """
    (Optionnel) PAGINATION
    Permet en conjonction avec `last` de paginer "en arrière"
    (des Dasri les plus anciens aux Dasri les plus récents)
    Curseur avant lequel les Dasri doivent être retournés
    Attend un identifiant (propriété `id`) de BSD
    Défaut à vide, pour retourner les Dasri les plus anciens
    Le BSD précisé dans le curseur ne fait pas partie du résultat
    """
    before: ID

    """
    (Optionnel) PAGINATION
    Nombre de Dasri retournés avant le `before`
    Défaut à 50, maximum à 500
    """
    last: Int

    """
    (Optionnel) Retourne les Dasri modifiés après la date
    Filtre sur la date de dernière modification
    Au format (YYYY-MM-DD)
    Par défaut vide, aucun filtre n'est appliqué
    """
    updatedAfter: String

    """
    (Optionnel) Filtre sur les statuts des Dasri
    Si aucun filtre n'est passé, les Dasri seront retournés quel que soit leur statut
    Défaut à vide.
    """
    status: [DasriStatus!]

    """
    (Optionnel) Siret d'une autre entreprise présente sur le Dasri
    Vous n'avez pas besoin d'être membre de cette entreprise.
    Seuls les Dasri où cette entreprise apparait (dans n'importe quel cadre) seront retournés.
    Défaut à vide.
    """
    siretPresentOnForm: String

    """
    (Optionnel) Code déchet pour affiner la recherche
    18 01 03* (DASRI d'origine humaine) ou 18 02 02* (DASRI d'origine animale)
    Défaut à vide.
    """
    wasteCode: String

    """
    (Optionnel) Filtre sur le role de demandeur dans le dasri
    Par exemple:
     - `roles: [TRANSPORTER]` renverra les Dasri pour lesquels je suis transporteur
     - `roles: [EMITTER, RECIPIENT]` renverra les Dasri dont je suis l'émetteur ou le destinataire final
    Voir `DasriRole` pour la liste des roles sur lesquels il est possible de filtrer.
    Si aucune filtre n'est passé, les Dasri seront retournés quel que soit votre role dessus.
    Défaut à vide.
    """
    roles: [DasriRole!]

    """
    (Optionnel) Permet de filtrer sur les dasris en attente d'une action de votre part
    Si `true`, seul les dasris attendant une action sont renvoyés
    Si `false`, seul les dasris n'attendant aucune action son renvoyés
    Si vide, tous les dasris sont renvoyés
    Défaut à vide.
    """
    hasNextStep: Boolean
  ): [Dasri!]!
  dasri(
    "Identifiant opaque du BSD"
    id: ID
    "Identifiant lisible du BSD"
    readableId: String
  ): Dasri
}

type Mutation {
  "Crée un nouveau dasri"
  dasriCreate(
    "Payload de création d'un dasri"
    dasriCreateInput: DasriCreateInput!
  ): Dasri!

  """
  Met à jour un dasri existant
  Par défaut, tous les champs sont modifiables.
  """
  dasriUpdate(
    "Payload de mise à jour d'un dasri"
    dasriUpdateInput: DasriUpdateInput!
  ): Dasri!

  "Marque un dasri brouillon comme prêt (SEALED)"
  dasriMarkAsReady("ID d'un Dasri" id: ID!): Dasri

  """Appose une signature sur un Dasri, verrouille les cadres correspondant
  
  Une signature ne peut être apposée que par un membre de l'entreprise figurant sur le cadre concerné
  Ex: la signature TRANSPORT ne peut être apposée que par un membre de l'entreprise de transport

  Toutefois il existe un exception: le cadre emetteur peut être signé par le transporteur grâce au code de 
  sécurité de l'émetteur (DasriSignatureType: EMISSION_WITH_SECRET_CODE)


  """ 

  
  dasriSign(id: ID!, signatureInput: DasriSignatureInput! ): Dasri
}
