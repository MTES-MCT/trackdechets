input BsdasriPackagingInfoInput {
  "Type de conditionnement"
  type: BsdasriPackagings!

  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String

  "Nombre de colis associés à ce conditionnement"
  volume: Int!

  "Nombre de colis associés à ce conditionnement"
  quantity: Int!
}

input WorkSiteInput {
  name: String
  address: String
  city: String
  postalCode: String
  infos: String
}

input BsdasriEmitterInput {
  "Établissement émetteur"
  type: BsdasriEmitterType
  company: CompanyInput
  workSite: WorkSiteInput
  "Champ libre émetteur"
  customInfo: String
  onBehalfOfEcoorganisme: Boolean
}

input BsdasriWasteDetailInput {
  quantity: Int
  quantityType: QuantityType
  packagingInfos: [BsdasriPackagingInfoInput!]
  onuCode: String
}
input BsdasriRecipientWasteDetailInput {
  quantity: Int
  volume: Int
}
input BsdasriWasteAcceptationInput {
  status: WasteAcceptationStatusInput
  refusalReason: String
  refusedQuantity: Int
}
input BsdasriEmissionInput {
  wasteCode: String
  wasteDetails: BsdasriWasteDetailInput
  handedOverAt: DateTime
}
input BsdasriTransportInput {
  wasteDetails: BsdasriWasteDetailInput
  takenOverAt: DateTime
  handedOverAt: DateTime
  wasteAcceptation: BsdasriWasteAcceptationInput
}

input BsdasriTransporterInput {
  "Établissement collecteur - transporteur"
  company: CompanyInput

  "N° de récipissé"
  receipt: String

  "Département"
  receiptDepartment: String

  "Limite de validité du récipissé"
  receiptValidityLimit: DateTime

  "Champ libre transporteur"
  customInfo: String
}

input BsdasriRecipientInput {
  "Établissement émetteur"
  company: CompanyInput

  "Champ libre transporteur"
  customInfo: String
}

input BsdasriReceptionInput {
  wasteDetails: BsdasriWasteDetailInput
  receivedAt: DateTime
  wasteAcceptation: BsdasriWasteAcceptationInput
}

input BsdasriOperationInput {
  processingOperation: String
  processedAt: DateTime
}

input BsdasriInput {
  emitter: BsdasriEmitterInput
  emission: BsdasriEmissionInput
  transporter: BsdasriTransporterInput
  transport: BsdasriTransportInput
  recipient: BsdasriRecipientInput
  reception: BsdasriReceptionInput
  operation: BsdasriOperationInput
}

"Payload de regroupement"
input RegroupedBsdasriInput {
  "Identifiant unique du bordereau"
  id: ID
}

input BsdasriCreateInput {
  emitter: BsdasriEmitterInput
  emission: BsdasriEmissionInput
  transporter: BsdasriTransporterInput
  transport: BsdasriTransportInput
  recipient: BsdasriRecipientInput
  reception: BsdasriReceptionInput
  operation: BsdasriOperationInput

  regroupedBsdasris: [RegroupedBsdasriInput]
}

input BsdasriUpdateInput {
  emitter: BsdasriEmitterInput
  emission: BsdasriEmissionInput
  transporter: BsdasriTransporterInput
  transport: BsdasriTransportInput
  recipient: BsdasriRecipientInput
  reception: BsdasriReceptionInput
  operation: BsdasriOperationInput

  regroupedBsdasris: [RegroupedBsdasriInput]
}

enum BsdasriSignatureType {
  "Signature du cadre émetteur (PRED)"
  EMISSION

  "Signature du cadre collecteur transporteur"
  TRANSPORT

  "Signature de la réception du déchet"
  RECEPTION

  "Signature du traitement du déchet"
  OPERATION
}

input BsdasriSignatureInput {
  type: BsdasriSignatureType!
  author: String!
}

input BsdasriSignatureWithSecretCodeInput {
  author: String!
  securityCode: Int
}
type Mutation {
  """
  EXPERIMENTAL - Ne pas utiliser dans un contexte de production
  Crée un nouveau dasri en brouillon
  """
  createDraftBsdasri(
    "Payload de création d'un dasri brouillon"
    bsdasriCreateInput: BsdasriCreateInput!
  ): Bsdasri!

  """
  EXPERIMENTAL - Ne pas utiliser dans un contexte de production
  Crée un nouveau dasri
  """
  createBsdasri(
    "Payload de création d'un dasri"
    bsdasriCreateInput: BsdasriCreateInput!
  ): Bsdasri!

  """
  EXPERIMENTAL - Ne pas utiliser dans un contexte de production
  Met à jour un dasri existant
  Par défaut, tous les champs sont modifiables.
  """
  updateBsdasri(
    "Identifiant unique du bordereau"
    id: ID!
    "Payload de mise à jour d'un dasri"
    bsdasriUpdateInput: BsdasriUpdateInput!
  ): Bsdasri!

  """
  EXPERIMENTAL - Ne pas utiliser dans un contexte de production
  Marque un dasri brouillon comme publié (isDraft=false)
  """
  publishBsdasri("ID d'un Bsdasri" id: ID!): Bsdasri

  """
  EXPERIMENTAL - Ne pas utiliser dans un contexte de production
  Appose une signature sur un Bsdasri, verrouille les cadres correspondant

  Une signature ne peut être apposée que par un membre de l'entreprise figurant sur le cadre concerné
  Ex: la signature TRANSPORT ne peut être apposée que par un membre de l'entreprise de transport

  Pour signer l'emission avec un compte transpoteur (cas de lasignature sur device transporteur),
  utiliser la mutation signBsdasriEmissionWithSecretCode
  """
  signBsdasri(id: ID!, signatureInput: BsdasriSignatureInput!): Bsdasri

  """
  EXPERIMENTAL - Ne pas utiliser dans un contexte de production
  Appose une signature de type EMISSION via un compte n'appartenant pas à l'émetteur.
  Permet de signer un enlèvement sur le device transporteur grâce au code de sécurité de l'émetteur du dasri
  """
  signBsdasriEmissionWithSecretCode(
    id: ID!
    signatureInput: BsdasriSignatureWithSecretCodeInput!
  ): Bsdasri
  """
  EXPERIMENTAL - Ne pas utiliser dans un contexte de production
  Duplique un bordereau Dasri
  """
  duplicateBsdasri("ID d'un Bsdasri" id: ID!): Bsdasri

  """
  EXPERIMENTAL - Ne pas utiliser dans un contexte de production
  Supprime un BSDASRI
  """
  deleteBsdasri("ID d'un Dasri" id: ID!): Bsdasri
}
