type BsdaConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [BsdaEdge!]!
}

type BsdaEdge {
  cursor: String!
  node: Bsda!
}

type Bsda {
  "Bordereau n°"
  id: ID!
  "Date de création"
  createdAt: DateTime!
  "Date de dernière modification"
  updatedAt: DateTime!
  "Indique si le bordereau est à l'état de brouillon"
  isDraft: Boolean!
  "Statur du bordereau"
  status: BsdaStatus!

  """
  Type de bordereau
  Le type de bordereau impacte le workflow et les champs obligatoires
  """
  type: BsdaType

  "Maitre d'ouvrage ou détenteur du déchet"
  emitter: BsdaEmitter

  ecoOrganisme: BsdaEcoOrganisme

  "Courtier"
  broker: BsdaBroker

  "Dénomination du déchet"
  waste: BsdaWaste
  "Conditionnement"
  packagings: [BsdaPackaging!]
  "Poids"
  weight: BsdaWeight

  "Installation de destination"
  destination: BsdaDestination

  "Entreprise de travaux"
  worker: BsdaWorker

  "Entreprise de transport"
  transporter: BsdaTransporter

  "Bordereau que celui-ci réexpédie"
  forwarding: InitialBsda

  "Bordereau dans lequel celui-ci est réexpédié"
  forwardedIn: Bsda

  "Bordereaux que celui-ci groupe"
  grouping: [InitialBsda!]

  """
  Bordereaux dans lequel celui-ci est groupé
  """
  groupedIn: InitialBsda

  "Metadata associées au bordereau"
  metadata: BsdaMetadata!
}

type InitialBsda {
  """
  Identifiant unique assigné par Trackdéchets.
  Il est à utiliser pour les échanges avec l'API.
  """
  id: ID!
  """
  Émetteur du déchet, qui n'est pas nécessairement le producteur.
  """
  emitter: BsdaEmitter
  """
  Destination du déchet, qui peut le réceptionner pour traitement, groupement ou réexpedition.
  Un nouveau bordereau doit être créé si le déchet connaît un nouveau parcours, par exemple s'il quitte une installation de collecte pour un centre de traitement.

  Pour plus de détails sur les différents types de bordereau, voir l'enum BsdaType.
  """
  destination: BsdaDestination
  """
  Détails du déchet.
  """
  waste: BsdaWaste
  """
  Quantité totale du déchet en kilogrammes, il peut s'agir d'une estimation.
  """
  weight: BsdaWeight
  """
  Liste des contenants utilisés pour le transport du déchet.
  """
  packagings: [BsdaPackaging!]!
}

type BsdaEmitter {
  "Indique si le détenteur est un particulier ou une entreprise"
  isPrivateIndividual: Boolean
  "Établissement MOA/détenteur. Partiellement rempli si l'émetteur est en fait un particulier"
  company: FormCompany
  "Champ libre"
  customInfo: String
  "Informations chantier (si différente de l'adresse de l'entreprise)"
  pickupSite: BsdaPickupSite
  "Déclaration générale"
  emission: BsdaEmission
}

"Information sur l'éco-organisme responsable du BSDA"
type BsdaEcoOrganisme {
  name: String!
  siret: String!
}

type BsdaPickupSite {
  name: String
  address: String
  city: String
  postalCode: String
  "Autres informations, notamment le code chantier"
  infos: String
}

type BsdaEmission {
  signature: Signature
}

type BsdaWaste {
  "Rubrique Déchet"
  code: String
  "Dénomination usuelle"
  name: String
  "Code famille"
  familyCode: String
  "Nom du matériau"
  materialName: String
  "Consistence"
  consistence: BsdaConsistence
  "Numéros de scellés"
  sealNumbers: [String!]
  "Mention ADR"
  adr: String
}

type BsdaPackaging {
  "Type de conditionnement"
  type: BsdaPackagingType!

  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String

  "Nombre de colis associés à ce conditionnement"
  quantity: Int!
}

type BsdaWeight {
  "Type de quantité (réelle ou estimé)"
  isEstimate: Boolean
  "Quantité en tonne"
  value: Float
}

type BsdaDestination {
  "Établissement de destination"
  company: FormCompany
  "Champ libre"
  customInfo: String
  "N° de CAP (le cas échéant)"
  cap: String
  "Opération d'élimination / valorisation prévue (code D/R)"
  plannedOperationCode: String

  "Expédition reçue à l'installation de destination"
  reception: BsdaReception

  "Réalisation de l'opération (case 11)"
  operation: BsdaOperation
}

type BsdaReception {
  "Date de présentation sur site"
  date: DateTime
  "Poids présentée"
  weight: Float
  "Lot accepté, accepté partiellement ou refusé"
  acceptationStatus: BsdaAcceptationStatus
  "Motif de refus"
  refusalReason: String
  "Signature case 10"
  signature: Signature
}

type BsdaOperation {
  "Code D/R"
  code: String
  "Date de réalisation de l'opération"
  date: DateTime
  "Exutoire final (si la destination ne l'est pas)"
  nextDestination: BsdaNextDestination
  signature: Signature
}

type BsdaNextDestination {
  "Coordonnées de l'éxutoire final"
  company: FormCompany
  "N° de CAP (le cas échéant)"
  cap: String
  "Opération d'élimination / valorisation prévue (code D/R)"
  plannedOperationCode: String
}

type BsdaWorker {
  "Entreprise de travaux"
  company: FormCompany
  "Déclaration générale"
  work: BsdaWork
}

type BsdaWork {
  """
  Indique si l'entreprise de travaux a une signature papier du MOA/détenteur du déchet
  Remettre une signature papier permet au détenteur de ne pas à avoir à signer sur la plateforme
  """
  hasEmitterPaperSignature: Boolean
  signature: Signature
}

type BsdaTransporter {
  "Coordonnées de l'entreprise de transport"
  company: FormCompany
  "Champ libre"
  customInfo: String
  "Récépissé transporteur"
  recepisse: BsdaRecepisse
  "Déclaration générale"
  transport: BsdaTransport
}

type BsdaTransport {
  "Mode de transport"
  mode: TransportMode
  "Plaque(s) d'immatriculation"
  plates: [String!]
  "Date de prise en charge"
  takenOverAt: DateTime
  signature: Signature
}

type BsdaRecepisse {
  "Exemption de récépissé (conformément aux dispositions de l'article R.541-50 du code de l'environnement)"
  isExempted: Boolean
  "Numéro de récépissé"
  number: String
  "Département"
  department: String
  "Date limite de validité"
  validityLimit: DateTime
}

type BsdaBroker {
  "Coordonnées de l'entreprise courtier"
  company: FormCompany
  "Récépissé courtier"
  recepisse: BsdaRecepisse
}

type BsdaMetadata {
  errors: [BsdaError!]
}

type BsdaError {
  message: String!
  path: String!
  requiredFor: BsdaSignatureType!
}
