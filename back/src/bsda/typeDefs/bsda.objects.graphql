type BsdaConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [BsdaEdge!]!
}

type BsdaEdge {
  cursor: String!
  node: Bsda!
}

type Bsda {
  "Bordereau n°"
  id: ID!
  "Date de création"
  createdAt: DateTime!
  "Date de dernière modification"
  updatedAt: DateTime!
  "Indique si le bordereau est à l'état de brouillon"
  isDraft: Boolean!
  "Statut du bordereau"
  status: BsdaStatus!

  """
  Identifiant du bordereau à partir duquel ce celui-ci a été dupliqué.
  Est égal à `null` si le bordereau n'est pas issue d'une duplication.
  """
  isDuplicateOf: String

  """
  Type de bordereau
  Le type de bordereau impacte le workflow et les champs obligatoires
  """
  type: BsdaType

  "Maitre d'ouvrage ou détenteur du déchet"
  emitter: BsdaEmitter

  ecoOrganisme: BsdaEcoOrganisme

  "Courtier"
  broker: BsdaBroker

  "Description du déchet"
  waste: BsdaWaste
  "Conditionnement"
  packagings: [BsdaPackaging!]
  "Quantité en tonnes"
  weight: BsdaWeight

  "Installation de destination"
  destination: BsdaDestination

  "Entreprise de travaux"
  worker: BsdaWorker

  "Entreprise de transport - 1er transporteur en cas de transport multi-modal"
  transporter: BsdaTransporter

  """
  Liste des transporteurs du déchet. Contient 1 seul transporteur en cas d'achemniment direct.
  Peut contenir un maximum de 5 transporteurs différents en cas de transport multi-modal
  """
  transporters: [BsdaTransporter!]!

  "Bordereau que celui-ci réexpédie"
  forwarding: InitialBsda

  "Bordereau dans lequel celui-ci est réexpédié"
  forwardedIn: Bsda

  "Bordereaux que celui-ci groupe"
  grouping: [InitialBsda!]

  """
  Bordereaux dans lequel celui-ci est groupé
  """
  groupedIn: Bsda

  "Metadata associées au bordereau"
  metadata: BsdaMetadata!

  """
  Liste d'entreprises intermédiaires. Un intermédiaire est une entreprise qui prend part à la gestion du déchet,
  mais pas à la responsabilité de la traçabilité (entreprise de travaux, bureau d'étude, maitre d'oeuvre,
  collectivité, etc.) Il pourra lire ce bordereau, sans étape de signature.
  """
  intermediaries: [FormCompany!]
}

type InitialBsda {
  """
  Identifiant unique assigné par Trackdéchets.
  Il est à utiliser pour les échanges avec l'API.
  """
  id: ID!
  """
  Émetteur du déchet, qui n'est pas nécessairement le producteur.
  """
  emitter: BsdaEmitter
  """
  Destination du déchet, qui peut le réceptionner pour traitement, groupement ou réexpedition.
  Un nouveau bordereau doit être créé si le déchet connaît un nouveau parcours, par exemple s'il quitte une installation de collecte pour un centre de traitement.

  Pour plus de détails sur les différents types de bordereau, voir l'enum BsdaType.
  """
  destination: BsdaDestination
  """
  Détails du déchet.
  """
  waste: BsdaWaste
  """
  Quantité totale du déchet en tonnes, il peut s'agir d'une estimation.
  """
  weight: BsdaWeight
  """
  Liste des contenants utilisés pour le transport du déchet.
  """
  packagings: [BsdaPackaging!]!
}

type BsdaEmitter {
  "Indique si le détenteur est un particulier ou une entreprise"
  isPrivateIndividual: Boolean
  "Établissement MOA/détenteur. Partiellement rempli si l'émetteur est en fait un particulier"
  company: FormCompany
  "Champ libre"
  customInfo: String
  "Informations chantier (si différente de l'adresse de l'entreprise)"
  pickupSite: BsdaPickupSite
  "Déclaration générale"
  emission: BsdaEmission
}

"Information sur l'éco-organisme responsable du BSDA"
type BsdaEcoOrganisme {
  name: String!
  siret: String!
}

type BsdaPickupSite {
  name: String
  address: String
  city: String
  postalCode: String
  "Autres informations, notamment le code chantier"
  infos: String
}

type BsdaEmission {
  signature: Signature
}

type BsdaWaste {
  "Rubrique Déchet"
  code: String
  "DEPRECATED - Dénomination usuelle"
  name: String @deprecated(reason: "Utiliser materialName")
  "Code famille"
  familyCode: String
  "Nom usuel du matériau"
  materialName: String
  "Consistence"
  consistence: BsdaConsistence
  "Numéros de scellés"
  sealNumbers: [String!]
  "Mention ADR"
  adr: String
  "Contient des Polluants Organiques Persistants (POP) oui / non"
  pop: Boolean
}

type BsdaPackaging {
  "Type de conditionnement"
  type: BsdaPackagingType!

  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String

  "Nombre de colis associés à ce conditionnement"
  quantity: Int!

  "Volume du conditionnement en litre(s)"
  volume: Float
  "Numéros des contenants"
  identificationNumbers: [String!]!
}

type BsdaWeight {
  "Type de quantité (réelle ou estimée)"
  isEstimate: Boolean
  "Quantité en tonne"
  value: Float
}

type BsdaDestination {
  "Établissement de destination"
  company: FormCompany
  "Champ libre"
  customInfo: String
  "N° de CAP (le cas échéant)"
  cap: String
  "Opération d'élimination / valorisation prévue (code D/R)"
  plannedOperationCode: String

  "Expédition reçue à l'installation de destination"
  reception: BsdaReception

  "Réalisation de l'opération (case 11)"
  operation: BsdaOperation
}

type BsdaReception {
  "Date de présentation sur site"
  date: DateTime
  "Poids présenté"
  weight: Float
  "Lot accepté, accepté partiellement ou refusé"
  acceptationStatus: WasteAcceptationStatus
  "Motif de refus"
  refusalReason: String
  "Signature case 10"
  signature: Signature
}

type BsdaOperation {
  "Code D/R"
  code: String
  "Qualification du traitement final"
  mode: OperationMode
  "Description de l'opération"
  description: String
  "Date de réalisation de l'opération"
  date: DateTime
  "Exutoire final (si la destination ne l'est pas)"
  nextDestination: BsdaNextDestination
  signature: Signature
}

type BsdaNextDestination {
  "Coordonnées de l'éxutoire final"
  company: FormCompany
  "N° de CAP (le cas échéant)"
  cap: String
  "Opération d'élimination / valorisation prévue (code D/R)"
  plannedOperationCode: String
}

type BsdaWorker {
  "Indique si une entreprise de travaux est présente sur le BSDA (pour le cas d'un émetteur qui démonte lui même son amiante par ex)"
  isDisabled: Boolean!

  "Entreprise de travaux"
  company: FormCompany

  "Informations de certification"
  certification: BsdaWorkerCertification

  "Déclaration générale"
  work: BsdaWork
}

type BsdaWorkerCertification {
  """
  Indique si l'entreprise réalise des travaux relevant de la sous-section 4
  """
  hasSubSectionFour: Boolean!

  """
  Indique si l'entreprise réalise des travaux relevant de la sous-section 3
  """
  hasSubSectionThree: Boolean!

  """
  Numéro de certification (sous-section 3 uniquement)
  """
  certificationNumber: String

  """
  Limite de validité de la certification (sous-section 3 uniquement)
  """
  validityLimit: DateTime

  """
  Organisation qui a décerné la certification (sous-section 3 uniquement)
  """
  organisation: String
}

type BsdaWork {
  """
  Indique si l'entreprise de travaux a une signature papier du MOA/détenteur du déchet
  Remettre une signature papier permet au détenteur de ne pas à avoir à signer sur la plateforme
  """
  hasEmitterPaperSignature: Boolean
  signature: Signature
}

type BsdaTransporter {
  "Identifiant du transporteur"
  id: ID!
  "Coordonnées de l'entreprise de transport"
  company: FormCompany
  "Champ libre"
  customInfo: String
  "Récépissé transporteur"
  recepisse: BsdaRecepisse
  "Déclaration générale"
  transport: BsdaTransport
}

type BsdaTransport {
  "Mode de transport"
  mode: TransportMode
  "Plaque(s) d'immatriculation"
  plates: [String!]
  "Date de prise en charge"
  takenOverAt: DateTime
  signature: Signature
}

type BsdaRecepisse {
  "Exemption de récépissé (conformément aux dispositions de l'article R.541-50 du code de l'environnement)"
  isExempted: Boolean
  "Numéro de récépissé"
  number: String
  "Département"
  department: String
  "Date limite de validité"
  validityLimit: DateTime
}

type BsdaBroker {
  "Coordonnées de l'entreprise courtier"
  company: FormCompany
  "Récépissé courtier"
  recepisse: BsdaRecepisse
}

type BsdaMetadata {
  errors: [BsdaError]
  "EXPERIMENTAL, ne pas utiliser - Dernière révision du bordereau"
  latestRevision: BsdaRevisionRequest
}

type BsdaError {
  message: String!
  path: String!
  requiredFor: BsdaSignatureType!
}

"Demande de révision Bsda"
type BsdaRevisionRequest {
  "Identifiant de la demande de révison"
  id: ID!

  "Aperçu du bordereau concerné au moment de la création de la demande de révision. Il ne reflète pas le bordereau actuel."
  bsda: Bsda!

  "Date de création de la demande"
  createdAt: DateTime!

  "Entreprise à l'origine de la demande de révision"
  authoringCompany: FormCompany!

  "Liste des approbations apposées sur la révision"
  approvals: [BsdaRevisionRequestApproval!]!

  "Contenu de la révision"
  content: BsdaRevisionRequestContent!

  "Commentaire explicatif, saisi par l'auteur de la demande de révision"
  comment: String!

  "Statut d'acceptation de la révision"
  status: RevisionRequestStatus!
}

"Approbation d'une demande de révision"
type BsdaRevisionRequestApproval {
  "Siret de l'entreprise responsable de cette approbation"
  approverSiret: String!

  "Commentaire explicatif, saisi par l'approbateur"
  comment: String

  "Statut d'acceptation de l'approbation"
  status: RevisionRequestApprovalStatus!
}

"Payload de révision d'un bordereau. Disponible sur une liste restreinte de champs."
type BsdaRevisionRequestContent {
  "Maitre d'ouvrage ou détenteur du déchet"
  emitter: BsdaRevisionRequestEmitter

  "Courtier"
  broker: BsdaBroker

  "Installation de destination"
  destination: BsdaRevisionRequestDestination

  "Description du déchet"
  waste: BsdaRevisionRequestWaste

  "Conditionnement"
  packagings: [BsdaPackaging!]

  "Demande d'annulation du bordereau"
  isCanceled: Boolean
}

type BsdaRevisionRequestEmitter {
  "Informations chantier (si différente de l'adresse de l'entreprise)"
  pickupSite: BsdaPickupSite
}

type BsdaRevisionRequestDestination {
  "N° de CAP (le cas échéant)"
  cap: String

  "Expédition reçue à l'installation de destination"
  reception: BsdaRevisionRequestReception

  "Réalisation de l'opération (case 11)"
  operation: BsdaRevisionRequestOperation
}

type BsdaRevisionRequestReception {
  "Poids présenté"
  weight: Float
}

type BsdaRevisionRequestOperation {
  "Code D/R"
  code: String

  "Mode de traitement"
  mode: OperationMode

  "Description de l'opération"
  description: String
}

type BsdaRevisionRequestWaste {
  "Rubrique Déchet"
  code: String

  "Nom usuel du matériau"
  materialName: String

  "Numéros de scellés"
  sealNumbers: [String!]

  "Contient des Polluants Organiques Persistants (POP) oui / non"
  pop: Boolean
}

type BsdaRevisionRequestConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [BsdaRevisionRequestEdge!]!
}

type BsdaRevisionRequestEdge {
  cursor: String!
  node: BsdaRevisionRequest!
}
