"Filtres possibles pour la récupération de bordereaux."
input BsdaWhere {
  "Filtre sur l'ID"
  id: IdFilter
  "Filtre sur le statut de brouillon."
  isDraft: Boolean
  "Filtre sur le statut"
  status: BsdaStatusFilter
  "Filtre sur la date de création"
  createdAt: DateFilter
  "Filtre sur la date de dernière modification"
  updatedAt: DateFilter
  "Filtre sur le champ emitter."
  emitter: BsdaEmitterWhere
  "Filtre sur le champ worker."
  worker: BsdaWorkerWhere
  "Filtre sur le champ transporter."
  transporter: BsdaTransporterWhere
  "Filtre sur le champ destination."
  destination: BsdaDestinationWhere
  "ET logique"
  _and: [BsdaWhere!]
  "OU logique"
  _or: [BsdaWhere!]
  "NON logique"
  _not: BsdaWhere
}

"Filtre sur le statut"
input BsdaStatusFilter {
  _eq: BsdaStatus
  _in: [BsdaStatus!]
}

"Champs possible pour le filtre sur l'émetteur."
input BsdaEmitterWhere {
  company: CompanyWhere
  emission: BsdaEmissionWhere
}

"Champs possibles pour le filtre sur l'émission"
input BsdaEmissionWhere {
  signature: SignatureWhere
}

"Champs possible pour le filtre sur le transporteur."
input BsdaTransporterWhere {
  company: CompanyWhere
  transport: BsdaTransportWhere
}

"Champs possible pour le filtre sur le transport."
input BsdaTransportWhere {
  signature: SignatureWhere
}

"Champs possible pour le filtre sur la destination."
input BsdaDestinationWhere {
  company: CompanyWhere
  reception: BsdaReceptionWhere
  operation: BsdaOperationWhere
}

"Champs possibles pour le filtre sur la réception"
input BsdaReceptionWhere {
  date: DateFilter
}

"Champs possible pour le filtre sur l'opération."
input BsdaOperationWhere {
  code: StringFilter
  signature: SignatureWhere
}

"Champs possible pour le filtre sur l'entreprise de travaux."
input BsdaWorkerWhere {
  company: CompanyWhere
  work: BsdaWorkWhere
}

"Champs possible pour le filtre sur les travaux."
input BsdaWorkWhere {
  signature: SignatureWhere
}

input BsdaInput {
  """
  Type de bordereau
  Le type de bordereau impacte le workflow et les champs obligatoires
  """
  type: BsdaType

  "Maitre d'ouvrage ou détenteur du déchet"
  emitter: BsdaEmitterInput

  "Eco-organisme"
  ecoOrganisme: BsdaEcoOrganismeInput

  "Courtier"
  broker: BsdaBrokerInput

  "Dénomination du déchet"
  waste: BsdaWasteInput
  "Conditionnement"
  packagings: [BsdaPackagingInput!]
  "Quantité"
  weight: BsdaWeightInput

  "Installation de destination"
  destination: BsdaDestinationInput

  "Entreprise de travaux"
  worker: BsdaWorkerInput
  "Entreprise de transport"
  transporter: BsdaTransporterInput

  "Bordereau que celui-ci reéxpédie"
  forwarding: ID

  "Liste des bordereaux que celui-ci groupe"
  grouping: [ID!]
}

input BsdaEmitterInput {
  "Indique si le détenteur est un particulier ou une entreprise"
  isPrivateIndividual: Boolean
  "Établissement MOA/détenteur. Partiellement rempli si l'émetteur est en fait un particulier"
  company: CompanyInput
  "Informations chantier (si différente de l'adresse de l'entreprise)"
  pickupSite: BsdaPickupSiteInput
  "Champ libre"
  customInfo: String
}

input BsdaEcoOrganismeInput {
  name: String!
  siret: String!
}

input BsdaPickupSiteInput {
  name: String
  address: String
  city: String
  postalCode: String
  "Autres informations, notamment le code chantier"
  infos: String
}

input BsdaWasteInput {
  "Rubrique Déchet"
  code: String
  "Dénomination usuelle"
  name: String
  "Code famille"
  familyCode: String
  "Nom du matériau"
  materialName: String
  "Consistence"
  consistence: BsdaConsistence
  "Numéros de scellés"
  sealNumbers: [String!]
  "Mention ADR"
  adr: String
}

input BsdaPackagingInput {
  "Type de conditionnement"
  type: BsdaPackagingType
  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String
  "Nombre de colis associés à ce conditionnement"
  quantity: Int!
}

input BsdaWeightInput {
  "Type de quantité (réelle ou estimé)"
  isEstimate: Boolean
  "Quantité en tonne"
  value: Float
}

input BsdaDestinationInput {
  "Établissement de destination"
  company: CompanyInput
  "N° de CAP (le cas échéant)"
  cap: String
  "Opération d'élimination / valorisation prévue (code D/R)"
  plannedOperationCode: String
  "Expédition reçue à l'installation de destination"
  reception: BsdaReceptionInput
  "Réalisation de l'opération (case 11)"
  operation: BsdaOperationInput
  "Champ libre"
  customInfo: String
}

input BsdaReceptionInput {
  "Date de présentation sur site"
  date: DateTime
  "Quantité présentée"
  weight: Float
  "Lot accepté, accepté partiellement ou refusé"
  acceptationStatus: BsdaAcceptationStatus
  "Motif de refus"
  refusalReason: String
}

input BsdaOperationInput {
  "Code D/R"
  code: String
  "Date de réalisation de l'opération"
  date: DateTime
  "Exutoire final (si la destination ne l'est pas)"
  nextDestination: BsdaNextDestinationInput
}

input BsdaNextDestinationInput {
  "Entreprise de travaux"
  company: CompanyInput
  "N° de CAP (le cas échéant)"
  cap: String
  "Opération d'élimination / valorisation prévue (code D/R)"
  plannedOperationCode: String
}

input BsdaWorkerInput {
  "Entreprise de travaux"
  company: CompanyInput
  "Déclaration générale"
  work: BsdaWorkInput
}

input BsdaWorkInput {
  """
  Indique si l'entreprise de travaux a une signature papier du MOA/détenteur du déchet
  Remettre une signature papier permet au détenteur de ne pas à avoir à signer sur la plateforme
  """
  hasEmitterPaperSignature: Boolean
}

input BsdaTransporterInput {
  "Entreprise de transport"
  company: CompanyInput
  "Champ libre"
  customInfo: String
  recepisse: BsdaRecepisseInput
  transport: BsdaTransportInput
}

input BsdaRecepisseInput {
  "Exemption de récépissé (conformément aux dispositions de l'article R.541-50 du code de l'environnement)"
  isExempted: Boolean
  "Numéro de récépissé"
  number: String
  "Département"
  department: String
  "Date limite de validité"
  validityLimit: DateTime
}

input BsdaTransportInput {
  "Mode de transport"
  mode: TransportMode
  "Plaque(s) d'immatriculation"
  plates: [String!]
  "Date de prise en charge"
  takenOverAt: DateTime
}

input BsdaBrokerInput {
  "Coordonnées de l'entreprise courtier"
  company: CompanyInput
  "Récépissé courtier"
  recepisse: BsdaRecepisseInput
}

input BsdaSignatureInput {
  "Type de signature apposé"
  type: BsdaSignatureType!
  "Date de la signature"
  date: DateTime
  "Nom et prénom du signataire"
  author: String!
  "Code de sécurité de l'entreprise pour laquelle on signe. Permet de signer en tant que. Optionnel"
  securityCode: Int
}
