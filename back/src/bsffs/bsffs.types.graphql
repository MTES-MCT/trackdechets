type Bsff {
  """
  Identifiant unique assigné par Trackdéchets.
  Il est à utiliser pour les échanges avec l'API.
  """
  id: ID!

  """
  Émetteur du déchet, qui n'est pas nécessairement le producteur.
  Il s'agit par exemple de l'opérateur ayant collecté des fluides lors d'interventions,
  ou alors d'une installation de collecte qui procède à la réexpédition pour traitement final.
  """
  emitter: BsffEmitter

  """
  Liste des contenants utilisés pour le transport des fluides.
  """
  packagings: [BsffPackaging!]!

  """
  Description du déchet et ses mentions associées.
  """
  waste: BsffWaste

  """
  Quantité totale du déchet, qu'elle soit réelle ou estimée.
  """
  quantity: BsffQuantity

  """
  Transporteur du déchet, effectue l'enlèvement du déchet auprès de l'émetteur et vers la destination.
  À noter que l'émetteur peut également être transporteur,
  par exemple dans le cas de l'opérateur qui dépose lui même ses contenants auprès d'une installation de collecte.
  """
  transporter: BsffTransporter

  """
  Destination du déchet, qui peut le réceptionner pour traitement, regroupement, reconditionnement ou réexpedition.
  Un nouveau bordereau doit être créé si le déchet connaît un nouveau parcours,
  par exemple si il quitte une installation de collecte pour un centre de traitement.
  """
  destination: BsffDestination

  """
  Liste des fiches d'intervention associés à ce bordereau.
  Habituellement renseigné par un opérateur lors de son intervention.
  """
  ficheInterventions: [BsffFicheIntervention!]!

  """
  Liste des bordereaux que celui-ci regroupe, dans le cas d'un regroupement, reconditionnement ou d'une réexpédition.
  """
  bsffs: [Bsff!]!
}

type BsffEmitter {
  "Entreprise émettant le déchet."
  company: FormCompany!
  "Déclaration de l'émetteur lors de l'enlèvement par le transporteur."
  emission: BsffEmission
}
type BsffEmission {
  "Signature de l'émetteur lors de l'enlèvement par le transporteur."
  signature: Signature!
}

type BsffPackaging {
  "Numéro du contenant."
  numero: String!
  "Type de contenant."
  type: BsffPackagingType!
  "Volume en litres des fluides à l'intérieur du contenant."
  litres: Int!
}
enum BsffPackagingType {
  BOUTEILLE
}

type BsffWaste {
  "Code déchet."
  code: String!
  "Description du déchet, permet de le qualifier de façon plus précise."
  description: String!
  "Mention ADR."
  adr: String!
}

type BsffQuantity {
  "Poids total du déchet en kilos."
  kilos: Int!
  "Si il s'agit d'une estimation ou d'un poids réel."
  isEstimate: Boolean!
}

type BsffTransporter {
  "Entreprise responsable du transport du déchet."
  company: FormCompany!
  "Récépissé du transporteur, à moins d'être exempté."
  recepisse: BsffTransporterRecepisse
  "Déclaration du transporteur lors de l'enlèvement auprès de l'émetteur."
  transport: BsffTransport
}
type BsffTransporterRecepisse {
  "Numéro du récépissé."
  number: String!
  "Département auquel est lié le récépissé."
  department: String!
  "Date limite de validité du récépissé."
  validityLimit: DateTime!
}
type BsffTransport {
  "Mode de transport utilisé."
  mode: TransportMode!
  "Signature du transporteur lors de l'enlèvement auprès de l'émetteur."
  signature: Signature!
}

type BsffDestination {
  "Entreprise réceptionant le déchet."
  company: FormCompany!
  "Déclaration de réception du déchet."
  reception: BsffReception
  "Déclaration de traitement du déchet."
  operation: BsffOperation
  "Opération de traitement prévu initialement."
  plannedOperation: BsffPlannedOperation!
  "Numéro CAP."
  cap: String
}
type BsffReception {
  "Date de réception du déchet."
  date: DateTime!
  "Quantité totale du déchet, qu'elle soit réelle ou estimée."
  kilos: Int!
  "En cas de refus, le motif."
  refusal: String
  "Signature de la destination lors de l'acceptation ou du refus du déchet."
  signature: Signature
}
interface IBsffOperation {
  "Code de l'opération de traitement."
  code: BsffOperationCode
  "Qualification plus précise du type d'opération réalisée."
  qualification: BsffOperationQualification!
}
type BsffOperation implements IBsffOperation {
  "Code de l'opération de traitement."
  code: BsffOperationCode
  "Qualification plus précise du type d'opération réalisée."
  qualification: BsffOperationQualification!
  "Signature de la destination lors du traitement."
  signature: Signature
}
type BsffPlannedOperation implements IBsffOperation {
  "Code de l'opération de traitement prévu."
  code: BsffOperationCode
  "Qualification plus précise du type d'opération prévu."
  qualification: BsffOperationQualification!
}
"Liste des codes de traitement possible."
enum BsffOperationCode {
  R2
  R12
  D10
  D13
  D14
}
"""
Liste des qualifications de traitement possible.
Attention, certaines combinaisons de code et qualification ne sont pas possibles.
Par exemple, seul le code D 10 peut être associé à une incinération.
"""
enum BsffOperationQualification {
  RECUPERATION_REGENERATION
  INCINERATION
  REGROUPEMENT
  RECONDITIONNEMENT
  REEXPEDITION
}

type BsffFicheIntervention {
  "Numéro de la fiche d'intervention, habituellement renseigné par l'opérateur."
  numero: String!
  "Poids total des fluides récupérés lors de cette intervention."
  kilos: Int!
  """
  Détenteur de l'équipement sur lequel est intervenu l'opérateur.
  À noter que dû à la valeur commerciale de ces informations, leur visibilité est limité aux acteurs en contact direct.
  """
  owner: BsffOwner
  "Code postal du lieu où l'intervention a eu lieu."
  postalCode: String!
}
type BsffOwner {
  "Entreprise détentrice de l'équipement."
  company: FormCompany!
}
