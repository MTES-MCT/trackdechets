type Query {
  bsffs(
    after: ID
    first: Int
    before: ID
    last: Int
    where: BsffWhere
  ): BsffConnection!
}

input BsffWhere {
  emitter: BsffWhereEmitter
  transporter: BsffWhereTransporter
  destination: BsffWhereDestination
}

input BsffWhereEmitter {
  company: BsffWhereCompany
}

input BsffWhereTransporter {
  company: BsffWhereCompany
}

input BsffWhereDestination {
  company: BsffWhereCompany
  operation: BsffWhereOperation
}
input BsffWhereOperation {
  code: BsffOperationCode
  qualification: BsffOperationQualification
}

input BsffWhereCompany {
  siret: String!
}

type BsffConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [BsffEdge!]!
}

type BsffEdge {
  cursor: String!
  node: Bsff!
}
