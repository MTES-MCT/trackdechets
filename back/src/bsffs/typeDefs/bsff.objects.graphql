type Bsff {
  """
  Identifiant unique assigné par Trackdéchets.
  Il est à utiliser pour les échanges avec l'API.
  """
  id: ID!

  "Date de création"
  createdAt: DateTime!

  "Date de dernière modification"
  updatedAt: DateTime!

  """
  Si ce BSFF est à l'état de brouillon ou pas.

  Il y a principalement deux différences entre un brouillon et un BSFF publié :
  - Il n'y a pas de champs requis sur un brouillon, là où il faut un minimum d'informations pour créer un BSFF publié.
  - L'état de brouillon peut permettre de distinguer un BSFF prêt à circuler d'un BSFF encore en préparation. Par exemple, sur l'interface Trackdéchets les brouillons sont dans l'onglet "brouillon" et non pas "pour action" ou "à collecter".
  """
  isDraft: Boolean!

  """
  Type de BSFF, voir l'enum pour plus de détails.
  """
  type: BsffType!

  """
  Statut qui synthétise où en est le déchet dans son cheminement, voir l'enum pour plus de détails.
  """
  status: BsffStatus!

  """
  Émetteur du déchet, qui n'est pas nécessairement le producteur.
  Il s'agit par exemple de l'opérateur ayant collecté des fluides lors d'interventions,
  ou alors d'une installation de collecte qui procède à la réexpédition pour traitement final.
  """
  emitter: BsffEmitter

  """
  Liste des contenants utilisés pour le transport du déchet.
  """
  packagings: [BsffPackaging!]!

  """
  Détails du déchet.
  """
  waste: BsffWaste

  """
  Quantité totale du déchet en kilogrammes, il peut s'agir d'une estimation.
  """
  weight: BsffWeight

  """
  Transporteur du déchet, effectue l'enlèvement du déchet auprès de l'émetteur et l'emporte à la destination.

  À noter que l'émetteur peut également être transporteur, par exemple dans le cas de l'opérateur qui dépose lui même ses contenants auprès d'une installation de collecte.
  Dans ce cas il nous faut quand même savoir qui a effectué le transport, et indiquer l'opérateur à la fois en tant qu'émetteur et transporteur.
  """
  transporter: BsffTransporter

  """
  Destination du déchet, qui peut le réceptionner pour traitement, groupement, reconditionnement ou réexpedition.
  Un nouveau bordereau doit être créé si le déchet connaît un nouveau parcours, par exemple s'il quitte une installation de collecte pour un centre de traitement.

  Pour plus de détails sur les différents types de bordereau, voir l'enum BsffType.
  """
  destination: BsffDestination

  """
  Liste des fiches d'intervention associés à ce bordereau.
  Habituellement renseigné par un opérateur lors de son intervention.
  """
  ficheInterventions: [BsffFicheIntervention!]!

  """
  Bordereau que celui-ci réexpédie
  """
  forwarding: InitialBsff

  """
  Bordereau dans lequel celui-ci est réexpédié
  """
  forwardedIn: Bsff

  """
  Bordereaux que celui-ci reconditionne
  """
  repackaging: [InitialBsff!]!

  """
  Bordereau dans lequel celui-ci est reconditionné
  """
  repackagedIn: Bsff

  """
  Bordereaux que celui-ci groupe
  """
  grouping: [InitialBsff!]!

  """
  Bordereau dans lequel celui-ci est groupé.
  """
  groupedIn: Bsff
}

"""
Extrait d'un bordereau initial dans le cas d'une réexpedition, d'un reconditionnement ou d'un groupement
"""
type InitialBsff {
  """
  Identifiant unique assigné par Trackdéchets.
  Il est à utiliser pour les échanges avec l'API.
  """
  id: ID!

  """
  Émetteur du déchet, qui n'est pas nécessairement le producteur.
  Il s'agit par exemple de l'opérateur ayant collecté des fluides lors d'interventions,
  ou alors d'une installation de collecte qui procède à la réexpédition pour traitement final.
  """
  emitter: BsffEmitter
  """
  Destination du déchet, qui peut le réceptionner pour traitement, groupement, reconditionnement ou réexpedition.
  Un nouveau bordereau doit être créé si le déchet connaît un nouveau parcours, par exemple s'il quitte une installation de collecte pour un centre de traitement.

  Pour plus de détails sur les différents types de bordereau, voir l'enum BsffType.
  """
  destination: BsffDestination
  """
  Détails du déchet.
  """
  waste: BsffWaste

  """
  Quantité totale du déchet en kilogrammes, il peut s'agir d'une estimation.
  """
  weight: BsffWeight
  """
  Liste des contenants utilisés pour le transport du déchet.
  """
  packagings: [BsffPackaging!]!
  """
  Liste des fiches d'intervention associés à ce bordereau.
  Habituellement renseigné par un opérateur lors de son intervention.
  """
  ficheInterventions: [BsffFicheIntervention!]!
}

type BsffEmitter {
  "Entreprise émettant le déchet."
  company: FormCompany
  "Déclaration de l'émetteur lors de l'enlèvement par le transporteur."
  emission: BsffEmission
  "Champ libre"
  customInfo: String
}
type BsffEmission {
  "Signature de l'émetteur lors de l'enlèvement par le transporteur."
  signature: Signature
}

type BsffPackaging {
  "Dénomination du contenant."
  name: String!
  "Volume du contenant."
  volume: Float
  "Numéro du contenant."
  numero: String!
  "Poids en kilogrammes."
  weight: Float!
}

type BsffWaste {
  "Code déchet."
  code: String!
  "Nature du fluide, laisser vide lorsqu'il est inconnu."
  description: String
  "Mention ADR."
  adr: String!
}

type BsffWeight {
  "Poids total du déchet en kilogrammes."
  value: Float!
  "Si il s'agit d'une estimation ou d'un poids réel."
  isEstimate: Boolean!
}

type BsffTransporter {
  "Entreprise responsable du transport du déchet."
  company: FormCompany
  "Récépissé du transporteur, laisser vide s'il déclare être exempté."
  recepisse: BsffTransporterRecepisse
  "Déclaration du transporteur lors de l'enlèvement auprès de l'émetteur."
  transport: BsffTransport
  "Champ libre"
  customInfo: String
}
type BsffTransporterRecepisse {
  "Numéro du récépissé."
  number: String!
  "Département auquel est lié le récépissé."
  department: String!
  "Date limite de validité du récépissé."
  validityLimit: DateTime!
}
type BsffTransport {
  "Mode de transport utilisé."
  mode: TransportMode!
  "Signature du transporteur lors de l'enlèvement auprès de l'émetteur."
  signature: Signature
}

type BsffDestination {
  "Entreprise réceptionant le déchet."
  company: FormCompany
  "Déclaration de réception du déchet."
  reception: BsffReception
  "Déclaration de traitement du déchet."
  operation: BsffOperation
  "Opération de traitement prévu initialement."
  plannedOperationCode: BsffOperationCode
  "Numéro CAP."
  cap: String
  "Champ libre"
  customInfo: String
}

type BsffAcceptation {
  "Accepté ou refusé"
  status: BsffAcceptationStatus!
  "En cas de refus, la raison"
  refusalReason: String
}

type BsffReception {
  "Date de réception du déchet."
  date: DateTime!
  "Quantité totale du déchet en kilogrammes, qu'elle soit réelle ou estimée. Doit être à 0 dans le cas d'un refus"
  weight: Float!
  "Statut d'acceptation du déchet"
  acceptation: BsffAcceptation
  "Signature de la destination lors de l'acceptation ou du refus du déchet."
  signature: Signature
}

type BsffNextDestination {
  "Entreprise qui va réceptionner le déchet par la suite."
  company: FormCompany!
}

type BsffOperation {
  "Code de l'opération de traitement."
  code: BsffOperationCode
  "Destination ultérieure prévue, dans le cas d'un envoi vers l'étranger."
  nextDestination: BsffNextDestination
  "Signature de la destination lors du traitement."
  signature: Signature
}

type BsffFicheIntervention {
  "Identifiant unique de la fiche d'intervention."
  id: ID!
  "Numéro de la fiche d'intervention, habituellement renseigné par l'opérateur."
  numero: String!
  "Poids total en kilogrammes des fluides récupérés lors de cette intervention."
  weight: Float!
  "Détenteur de l'équipement sur lequel est intervenu l'opérateur."
  detenteur: BsffDetenteur
  "Opérateur à l'origine de l'intervention."
  operateur: BsffOperateur
  "Code postal du lieu où l'intervention a eu lieu."
  postalCode: String!
}
type BsffDetenteur {
  "Entreprise détentrice de l'équipement."
  company: FormCompany!
}
type BsffOperateur {
  "Entreprise dont l'opérateur fait partie."
  company: FormCompany!
}

type BsffConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [BsffEdge!]!
}

type BsffEdge {
  cursor: String!
  node: Bsff!
}
