"Filtres possibles pour la récupération de bordereaux."
input BsffWhere {
  "Filtre sur l'ID"
  id: IdFilter
  "Filtre sur le statut de brouillon."
  isDraft: Boolean
  "Filtre sur le statut"
  status: BsffStatusFilter
  "Filtre sur la date de création"
  createdAt: DateFilter
  "Filtre sur la date de dernière modification"
  updatedAt: DateFilter
  "Filtre sur le champ emitter."
  emitter: BsffEmitterWhere
  "Filtre sur le champ transporter."
  transporter: BsffTransporterWhere
  "Filtre sur le champ destination."
  destination: BsffDestinationWhere
  "Filtre sur le conditionnement"
  packagings: BsffPackagingsWhere
  "ET logique"
  _and: [BsffWhere!]
  "OU logique"
  _or: [BsffWhere!]
  "NON logique"
  _not: BsffWhere
}

"Filtres possibles sur la récupération de contenants"
input BsffPackagingWhere {
  "Filtre sur l'ID"
  id: IdFilter
  "Filtre sur le numéro de contenant"
  numero: StringFilter
  "Filtre possible sur les bsffs"
  bsff: BsffWhere
  "Filtre possible sur l'acceptation des contenants"
  acceptation: BsffPackagingAcceptationWhere
  "Filtre possible sur l'opération effectuée"
  operation: BsffPackagingOperationWhere
  "Filtre possible sur le BSFF suivant (le cas échéant)"
  nextBsff: BsffWhere
  "ET logique"
  _and: [BsffPackagingWhere!]
  "OU logique"
  _or: [BsffPackagingWhere!]
  "NON logique"
  _not: BsffPackagingWhere
}

"Filtre sur le statut"
input BsffStatusFilter {
  _eq: BsffStatus
  _in: [BsffStatus!]
}

"Filtre sur l'opération de traitement effectuée"
input BsffOperationCodeFilter {
  _eq: BsffOperationCode
  _in: [BsffOperationCode!]
}

"Champs possible pour le filtre sur l'émetteur."
input BsffEmitterWhere {
  company: CompanyWhere
  emission: BsffEmissionWhere
}

"Champs possibles pour le filtre sur l'émission"
input BsffEmissionWhere {
  signature: SignatureWhere
}

"Champs possible pour le filtre sur le transporteur."
input BsffTransporterWhere {
  company: CompanyWhere
  transport: BsffTransportWhere
}

"Champs possible pour le filtre sur le transport."
input BsffTransportWhere {
  signature: SignatureWhere
}

"Champs possible pour le filtre sur la destination."
input BsffDestinationWhere {
  company: CompanyWhere
}

"Champs possibles pour le filtre sur la réception d'un contenant"
input BsffPackagingAcceptationWhere {
  wasteCode: StringFilter
  signature: SignatureWhere
}

"Champs possible pour le filtre sur l'opération sur un contenant"
input BsffPackagingOperationWhere {
  code: BsffOperationCodeFilter
  noTraceability: Boolean
  signature: SignatureWhere
}

input BsffPackagingsWhere {
  numero: StringFilter
  bsff: BsffWhere
}

input SignatureInput {
  date: DateTime!
  author: String!
}

input BsffSignatureInput {
  "Type de signature apposée"
  type: BsffSignatureType!

  """
  Identifiant du packaging en cas de signature pour une acceptation ou un traitement
  Si omis, permet de signer l'acceptation ou le traitement pour l'ensemble des contenants.
  """
  packagingId: ID

  "Date de la signature"
  date: DateTime
  "Nom et prénom du signataire"
  author: String!
  """
  Code de signature de l'auteur de la signature.

  Ce paramètre est optionnel, il n'est utile que dans le cas où vous souhaitez signer pour un tiers sans moyen de vous authentifier à sa place.
  Ce tiers peut alors saisir son code de signature dans votre outil.
  """
  securityCode: Int
}

input BsffInput {
  """
  Type de BSFF, voir l'enum pour plus de détails. -
  """
  type: BsffType
  """
  Émetteur du déchet. En fonction de la valeur du champ `type` il peut s'agir :
  - d'un opérateur qui collecte des déchets dangereux de fluides frigorigènes (ou autres déchets dangereux de fluides) lors d'opérations sur
  les équipements en contenant de ses clients
  - d'un autre détenteur de déchet.
  - d'une installation de tri, transit, regroupement lors d'une réexpédition, reconditionnement ou groupement.
  """
  emitter: BsffEmitterInput
  """
  Liste des contenants utilisés pour le transport des déchets de fluides.
  Ne pas renseigner ce champ en cas de groupement ou de réexpédition car les
  informations de contenants du nouveau BSFF sont déduites automatiquement à
  partir des informations des BSFFs initiaux
  """
  packagings: [BsffPackagingInput!]
  """
  Détails du déchet
  """
  waste: BsffWasteInput
  "Quantité"
  weight: BsffWeightInput
  transporter: BsffTransporterInput
  destination: BsffDestinationInput
  ficheInterventions: [ID!]
  "Identifiant des contenant réexpédié dans ce BSFF. La liste de contenants doit faire partie du même BSFF"
  forwarding: [ID!]
  "Identifiant des contenant reconditionné dans ce BSFF"
  repackaging: [ID!]
  "Identifiant des contenants regroupés dans ce BSFF"
  grouping: [ID!]
}

input BsffEmitterInput {
  company: CompanyInput
  "Champ libre"
  customInfo: String
}

"Permet de renseigner les informations d'un contenant par l'émetteur du BSFF"
input BsffPackagingInput {
  "Type de contenant : bouteille, ou autre à préciser ;"
  type: BsffPackagingType!
  "Précision sur le type de contenant lorsque type=OTHER"
  other: String
  "DEPRECATED - Dénomination du contenant."
  name: String @deprecated(reason: "Utiliser `type`")
  "Volume du contenant."
  volume: Float!
  "Numéro du contenant."
  numero: String!
  "Poids en kilogrammes"
  weight: Float!
}

input UpdateBsffPackagingInput {
  "Informations sur l'acceptation du contenant sur l'installation de destination"
  acceptation: BsffPackagingAcceptationInput
  "Informations sur le traitement effectué par contenant"
  operation: BsffPackagingOperationInput
}

input BsffPackagingAcceptationInput {
  "Date de la réception"
  date: DateTime!
  "Poids du contenant. Doit être à 0 dans le cas d'un refus"
  weight: Float!
  "Accepté ou refusé"
  status: WasteAcceptationStatus!
  "En cas de refus, la raison"
  refusalReason: String
  "Code déchet après analyse"
  wasteCode: String
  "Dénomination usuelle du déchet après analyse"
  wasteDescription: String
}

input BsffPackagingOperationInput {
  "Date de l'opération"
  date: DateTime!
  "Code de l'opération de traitement."
  code: BsffOperationCode!
  "Description de l'opération réaliséee"
  description: String!
  "Rupture de traçabilité autorisée par arrêté préfectoral"
  noTraceability: Boolean
  "Destination ultérieure prévue, dans le cas d'un envoi vers l'étranger."
  nextDestination: BsffPackagingNextDestinationInput
}

input BsffWasteInput {
  """
  Le code du déchet au regard l'[article R. 541-7 du code de l'environnement](https://www.legifrance.gouv.fr/affichCodeArticle.do?cidTexte=LEGITEXT000006074220&idArticle=LEGIARTI000006839070&dateTexte=&categorieLien=cid) à choisir parmi la liste suivante :
  14 06 01*, 14 06 02*, 14 06 03*, 16 05 04*, 13 03 10*.
  """
  code: String!
  "La dénomination usuelle du déchet"
  description: String
  "Les informations relatives au transport de marchandises dangereuses par voies terrestres"
  adr: String
}

input BsffWeightInput {
  "Quantité totale exprimée en kilogramme"
  value: Float!
  "Si cette quantité est estimée ou réelle"
  isEstimate: Boolean!
}

input BsffTransporterInput {
  company: CompanyInput
  "Informations sur le récepissé transporteur."
  recepisse: BsffTransporterRecepisseInput
  transport: BsffTransporterTransportInput
  "Champ libre"
  customInfo: String
}
input BsffTransporterRecepisseInput {
  "Le cas échéant, numéro de récépissé mentionné à l'article R. 541-51 du code de l'environnement."
  number: String
  "Le cas échéant, département de la déclaration mentionnée à l'article R. 541-50 du code de l'environnement."
  department: String
  "Le cas échéant, limite de validité du récépissé."
  validityLimit: DateTime
}
input BsffTransporterTransportInput {
  "Date de prise en charge"
  takenOverAt: DateTime
  mode: TransportMode
  "Plaque(s) d'immatriculation - maximum 2"
  plates: [String!]
}

input BsffDestinationInput {
  company: CompanyInput
  "Le cas échéant, numéro de certificat d'acceptation préalable des déchets."
  cap: String
  "Informations concernant la réception du déchet"
  reception: BsffDestinationReceptionInput
  "Code de l'opération d'élimination ou valorisation prévue selon les annexes I et II de la directive 2008/98/CE relative aux déchets susvisée."
  plannedOperationCode: BsffOperationCode
  "Champ libre"
  customInfo: String
}

input BsffAcceptationInput {
  "Accepté ou refusé"
  status: WasteAcceptationStatus!
  "En cas de refus, la raison"
  refusalReason: String
}

input BsffDestinationReceptionInput {
  date: DateTime!
}

input BsffPackagingNextDestinationInput {
  plannedOperationCode: BsffOperationCode
  cap: String
  company: CompanyInput
}

input BsffFicheInterventionInput {
  numero: String!
  "Poids en kilogrammes"
  weight: Float!
  detenteur: BsffDetenteurInput!
  operateur: BsffOperateurInput!
  postalCode: String!
}
input BsffDetenteurInput {
  company: CompanyInput!
}
input BsffOperateurInput {
  company: CompanyInput!
}
