"Filtres possibles pour la récupération de bordereaux."
input BsvhuWhere {
  "Filtre sur l'ID"
  id: IdFilter
  "Filtre sur le statut de brouillon."
  isDraft: Boolean
  "Filtre sur le statut"
  status: BsvhuStatusFilter
  "Filtre sur la date de création"
  createdAt: DateFilter
  "Filtre sur la date de dernière modification"
  updatedAt: DateFilter
  "Filtre sur le champ emitter."
  emitter: BsvhuEmitterWhere
  "Filtre sur le champ transporter."
  transporter: BsvhuTransporterWhere
  "Filtre sur le champ destination."
  destination: BsvhuDestinationWhere
  "ET logique"
  _and: [BsvhuWhere!]
  "OU logique"
  _or: [BsvhuWhere!]
  "NON logique"
  _not: BsvhuWhere
}

"Filtre sur le statut"
input BsvhuStatusFilter {
  _eq: BsvhuStatus
  _in: [BsvhuStatus!]
}

"Champs possible pour le filtre sur l'émetteur."
input BsvhuEmitterWhere {
  company: CompanyWhere
  emission: BsvhuEmissionWhere
}

"Champs possibles pour le filtre sur l'émission"
input BsvhuEmissionWhere {
  signature: SignatureWhere
}

"Champs possible pour le filtre sur le transporteur."
input BsvhuTransporterWhere {
  company: CompanyWhere
  transport: BsvhuTransportWhere
}

"Champs possible pour le filtre sur le transport."
input BsvhuTransportWhere {
  signature: SignatureWhere
}

"Champs possible pour le filtre sur la destination."
input BsvhuDestinationWhere {
  company: CompanyWhere
  reception: BsvhuReceptionWhere
  operation: BsvhuOperationWhere
}

"Champs possibles pour le filtre sur la réception"
input BsvhuReceptionWhere {
  date: DateFilter
}

"Champs possible pour le filtre sur l'opération."
input BsvhuOperationWhere {
  signature: SignatureWhere
  code: StringFilter
}

input BsvhuInput {
  "Détails sur l'émetteur"
  emitter: BsvhuEmitterInput

  "Code déchet. Presque toujours 16 01 06"
  wasteCode: String
  "Conditionnement du déchet"
  packaging: BsvhuPackaging
  "Identification des VHUs"
  identification: BsvhuIdentificationInput
  "Quantité de VHUs"
  quantity: Int
  "Poids des VHUs"
  weight: BsvhuWeightInput

  "Détails sur la destination"
  destination: BsvhuDestinationInput
  "Détails sur le transporteur"
  transporter: BsvhuTransporterInput
}

input BsvhuEmitterInput {
  "Numéro d'agrément émetteur"
  agrementNumber: String

  "Coordonnées de l'entreprise émétrice"
  company: CompanyInput
}

input BsvhuIdentificationInput {
  "Numéros d'identification"
  numbers: [String]
  "Type de numéros d'indentification"
  type: BsvhuIdentificationType
}

input BsvhuWeightInput {
  "Poids en tonnes"
  value: Float
  "Est-ce une estimation?"
  isEstimate: Boolean
}

input BsvhuDestinationInput {
  "Type de receveur: broyeur ou second centre VHU"
  type: BsvhuDestinationType
  "Numéro d'agrément de receveur"
  agrementNumber: String
  "Coordonnées de l'entreprise qui recoit les déchets"
  company: CompanyInput
  "Opération d'élimination / valorisation prévue (code D/R)"
  plannedOperationCode: String

  "Informations de réception"
  reception: BsvhuReceptionInput
  "Informations sur l'opétation de traitement"
  operation: BsvhuOperationInput
}

input BsvhuReceptionInput {
  "Date de présentation sur site"
  date: DateTime
  "Quantité de VHUs reçue"
  quantity: Int
  "Poids réel reçu"
  weight: Float
  "Lot accepté oui/non"
  acceptationStatus: WasteAcceptationStatusInput
  "Motif de refus"
  refusalReason: String
  "Identification éventuelle des VHU à la reception (numéro de lots ou d'ordre)"
  identification: BsvhuIdentificationInput
}

input BsvhuOperationInput {
  "Date de réalisation"
  date: DateTime
  "Opération de traitement réalisée (R4 ou R12)"
  code: String
  "Broyeur de destination, à remplir uniquement lorsque la destination est lui même un centre VHU"
  nextDestination: BsvhuNextDestinationInput
}

input BsvhuNextDestinationInput {
  company: CompanyInput
}

input BsvhuTransporterInput {
  "Coordonnées de l'entreprise de transport"
  company: CompanyInput
  "Récépissé transporteur"
  recepisse: BsvhuRecepisseInput
  "Informations liés au transport"
  transport: BsvhuTransportInput
}

input BsvhuTransportInput {
  "Date de prise en charge"
  takenOverAt: DateTime
}

input BsvhuRecepisseInput {
  number: String
  department: String
  validityLimit: DateTime
}

input BsvhuSignatureInput {
  "Type de signature apposé"
  type: SignatureTypeInput!
  "Date de la signature"
  date: DateTime
  "Nom et prénom du signataire"
  author: String!
  "Code de sécurité de l'entreprise pour laquelle on signe. Permet de signer en tant que. Optionnel"
  securityCode: Int
}
