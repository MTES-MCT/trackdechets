type BsvhuConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [BsvhuEdge!]!
}

type BsvhuEdge {
  cursor: String!
  node: Bsvhu!
}

type BsvhuMetadataFields {
  "Liste des champs scellés"
  sealed: [[String!]!]!
}

type BsvhuMetadata {
  errors: [BsvhuError!]!
  "Informations sur les champs"
  fields: BsvhuMetadataFields!
}

type BsvhuError {
  message: String!
  path: [String!]!
  requiredFor: SignatureTypeInput!
}

type Bsvhu {
  "Numéro unique attribué par Trackdéchets"
  id: ID!
  """
  Identifiant personnalisé permettant de faire le lien avec un
  objet un système d'information tierce
  """
  customId: String
  "Date de création"
  createdAt: DateTime
  "Date de dernière modification"
  updatedAt: DateTime
  "Indique si le bordereau est à l'état de brouillon"
  isDraft: Boolean!
  "Status du bordereau"
  status: BsvhuStatus!

  """
  Identifiant du bordereau à partir duquel ce celui-ci a été dupliqué.
  Est égal à `null` si le bordereau n'est pas issue d'une duplication.
  """
  isDuplicateOf: String

  "Émetteur du bordereau"
  emitter: BsvhuEmitter

  "Code déchet. Presque toujours 16 01 06"
  wasteCode: String
  "Conditionnement du déchet"
  packaging: BsvhuPackaging
  "Identification des VHUs"
  identification: BsvhuIdentification
  "Quantité de VHUs"
  quantity: Int
  "Poids en tonnes"
  weight: BsvhuWeight

  "Destinataire du bordereau"
  destination: BsvhuDestination
  "Transporteur"
  transporter: BsvhuTransporter
  """
  Liste d'entreprises intermédiaires. Un intermédiaire est une entreprise qui prend part à la gestion du déchet,
  mais pas à la responsabilité de la traçabilité. Il pourra lire ce bordereau, sans étape de signature.
  """
  intermediaries: [FormCompany!]

  "Eco-organisme"
  ecoOrganisme: BsvhuEcoOrganisme

  "Courtier"
  broker: BsvhuBroker

  "Négociant"
  trader: BsvhuTrader

  metadata: BsvhuMetadata!

  "Comprend des véhicules éléctriques ou hybrides"
  containsElectricOrHybridVehicles: Boolean
}

type BsvhuEmitter {
  "Numéro d'agrément émetteur"
  agrementNumber: String
  "Indique si l'émetteur est en situation irrégulière"
  irregularSituation: Boolean!
  "Indique si l'émetteur est un particulier ou une entreprise sans SIRET"
  noSiret: Boolean!
  "Coordonnées de l'entreprise émettrice"
  company: FormCompany
  "Déclaration générale de l'émetteur du bordereau"
  emission: BsvhuEmission
}

type BsvhuEmission {
  signature: Signature
}

"Information sur l'éco-organisme responsable du BSVHU"
type BsvhuEcoOrganisme {
  name: String!
  siret: String!
}

type BsvhuTransporter {
  "Coordonnées de l'entreprise de transport"
  company: FormCompany
  "Récépissé transporteur"
  recepisse: BsvhuRecepisse
  "Champ libre"
  customInfo: String
  "Informations liés au transport"
  transport: BsvhuTransport
}

type BsvhuTransport {
  "Mode de transport"
  mode: TransportMode
  "Plaque(s) d'immatriculation"
  plates: [String!]
  "Date de prise en charge"
  takenOverAt: DateTime
  signature: Signature
}

type BsvhuRecepisse {
  "Exemption de récépissé"
  isExempted: Boolean
  "Numéro de récépissé"
  number: String
  "Département"
  department: String
  "Date limite de validité"
  validityLimit: DateTime
}

type BsvhuBroker {
  "Coordonnées de l'entreprise courtier"
  company: FormCompany
  "Récépissé courtier"
  recepisse: BsvhuRecepisse
}

type BsvhuTrader {
  "Coordonnées de l'entreprise de négoce"
  company: FormCompany
  "Récépissé négociant"
  recepisse: BsvhuRecepisse
}

type BsvhuDestination {
  "Type de receveur: broyeur ou second centre VHU"
  type: BsvhuDestinationType
  "Numéro d'agrément de receveur"
  agrementNumber: String
  "Coordonnées de l'entreprise qui recoit les déchets"
  company: FormCompany
  "Opération d'élimination / valorisation prévue (code D/R)"
  plannedOperationCode: String

  "Informations de réception"
  reception: BsvhuReception
  "Informations sur l'opétation de traitement"
  operation: BsvhuOperation
}

type BsvhuReception {
  "Date de présentation sur site"
  date: DateTime
  "Quantité de VHUs reçue"
  quantity: Int
  "Poids réel reçu en tonnes"
  weight: Float
  "Lot accepté oui/non"
  acceptationStatus: WasteAcceptationStatus
  "Motif de refus"
  refusalReason: String
  "Identification éventuelle des VHU à la reception (numéro de lots ou d'ordre)"
  identification: BsvhuIdentification
  "Données relatives à la signature de la réception (optionelle)"
  signature: Signature
}

type BsvhuOperation {
  "Date de réalisation"
  date: DateTime
  "Opération de traitement réalisée (R4 ou R12)"
  code: String
  "Qualification du traitement final"
  mode: OperationMode
  "Broyeur de destination, à remplir uniquement lorsque la destination est lui même un centre VHU"
  nextDestination: BsvhuNextDestination
  signature: Signature
}

type BsvhuNextDestination {
  company: FormCompany
}

type BsvhuIdentification {
  numbers: [String]
  type: BsvhuIdentificationType
}

type BsvhuWeight {
  "Poids en tonnes"
  value: Float
  isEstimate: Boolean
}
