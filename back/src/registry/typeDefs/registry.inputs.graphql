input WasteRegistryWhere {
  "Filtre sur l'identifiant du bordereau"
  id: IdFilter
  "Filtre sur la date de création du bordereau associé"
  createdAt: DateFilter
  "Filtre sur le type de bordereaux"
  bsdType: BsdTypeFilter
  "Filtre sur le code déchet"
  wasteCode: StringFilter
  "Filtre sur le n° SIRET de l'émetteur"
  emitterCompanySiret: StringFilter
  "Filtre sur le n° SIRET du transporteur"
  transporterCompanySiret: StringFilter
  "Filtre sur la date de prise en charge du déchet par le transporteur"
  transporterTakenOverAt: DateFilter
  "Filtre sur le n° SIRET de l'installation de destination"
  destinationCompanySiret: StringFilter
  "Filtre sur la date de réception sur l'installation de destination"
  destinationReceptionDate: DateFilter
  "Filtre sur la quantité reçue (en kg)"
  destinationReceptionWeight: NumericFilter
  "Filtre sur le code de l'opération de traitement"
  destinationOperationCode: StringFilter
  "Filtre sur la date de l'opération de traitement"
  destinationOperationDate: DateFilter
}

input WasteRegistryV2Where {
  wasteType: WasteTypeFilter
  wasteCode: StringFilter
  declarationType: DeclarationTypeFilter
}

input BsdTypeFilter {
  _in: [BsdType!]
  _eq: BsdType
}

input WasteTypeFilter {
  _in: [RegistryExportWasteType!]
  _eq: RegistryExportWasteType
}

input DeclarationTypeFilter {
  _eq: DeclarationType
}

input SsdLineInput {
  reason: RegistryLineReason
  publicId: ID!
  reportAsSiret: String
  reportForSiret: String!
  useDate: DateTime
  dispatchDate: DateTime
  wasteCode: String!
  wasteDescription: String!
  wasteCodeBale: String
  secondaryWasteCodes: [String!]
  secondaryWasteDescriptions: [String!]
  product: String!
  weightValue: Float!
  weightIsEstimate: Boolean!
  volume: Float
  processingDate: DateTime!
  processingEndDate: DateTime
  destinationType: String!
  destinationOrgId: String
  destinationName: String
  destinationAddress: String
  destinationCity: String
  destinationPostalCode: String
  destinationCountryCode: String
  operationCode: String!
  operationMode: OperationMode!
  administrativeActReference: String!
}

input IncomingWasteLineInput {
  reason: RegistryLineReason
  publicId: ID!
  reportAsSiret: String
  reportForSiret: String!
  customInfo: String
  wasteCode: String!
  wastePop: Boolean!
  wasteIsDangerous: Boolean
  receptionDate: DateTime!
  weighingHour: String
  wasteDescription: String!
  wasteCodeBale: String
  weightValue: Float!
  weightIsEstimate: Boolean!
  volume: Float
  producerType: String!
  producerOrgId: String
  producerName: String
  producerAddress: String
  producerPostalCode: String
  producerCity: String
  producerCountryCode: String
  municipalitiesInseeCodes: [String!]
  municipalitiesNames: [String!]
  senderType: String!
  senderOrgId: String
  senderName: String
  senderAddress: String
  senderPostalCode: String
  senderCity: String
  senderCountryCode: String
  senderTakeOverAddress: String
  senderTakeOverPostalCode: String
  senderTakeOverCity: String
  senderTakeOverCountryCode: String
  brokerSiret: String
  brokerName: String
  brokerReceiptNumber: String
  traderSiret: String
  traderName: String
  traderReceiptNumber: String
  ecoOrganismeSiret: String
  ecoOrganismeName: String
  operationCode: String!
  noTraceability: Boolean
  nextDestinationIsAbroad: Boolean
  declarationNumber: String
  notificationNumber: String
  movementNumber: String
  nextOperationCode: String
  transporter1TransportMode: TransportMode!
  transporter1Type: String!
  transporter1OrgId: String
  transporter1ReceiptNumber: String
  transporter1Name: String
  transporter1Address: String
  transporter1PostalCode: String
  transporter1City: String
  transporter1CountryCode: String
  transporter2TransportMode: TransportMode
  transporter2Type: String
  transporter2OrgId: String
  transporter2ReceiptNumber: String
  transporter2Name: String
  transporter2Address: String
  transporter2PostalCode: String
  transporter2City: String
  transporter2CountryCode: String
  transporter3TransportMode: TransportMode
  transporter3Type: String
  transporter3OrgId: String
  transporter3ReceiptNumber: String
  transporter3Name: String
  transporter3Address: String
  transporter3PostalCode: String
  transporter3City: String
  transporter3CountryCode: String
  transporter4TransportMode: TransportMode
  transporter4Type: String
  transporter4OrgId: String
  transporter4ReceiptNumber: String
  transporter4Name: String
  transporter4Address: String
  transporter4PostalCode: String
  transporter4City: String
  transporter4CountryCode: String
  transporter5TransportMode: TransportMode
  transporter5Type: String
  transporter5OrgId: String
  transporter5ReceiptNumber: String
  transporter5Name: String
  transporter5Address: String
  transporter5PostalCode: String
  transporter5City: String
  transporter5CountryCode: String
}

input IncomingTexsLineInput {
  reason: RegistryLineReason
  publicId: ID!
  reportForSiret: String!
  reportAsSiret: String
  customInfo: String
  wasteCode: String!
  wastePop: Boolean!
  wasteIsDangerous: Boolean
  receptionDate: DateTime!
  wasteDescription: String!
  wasteCodeBale: String
  dap: String
  weightValue: Float!
  weightIsEstimate: Boolean!
  volume: Float
  parcelInseeCodes: [String!]
  parcelNumbers: [String!]
  parcelCoordinates: [String!]
  sisIdentifiers: [String!]
  producerType: String!
  producerOrgId: String
  producerName: String
  producerAddress: String
  producerPostalCode: String
  producerCity: String
  producerCountryCode: String
  municipalitiesInseeCodes: [String!]
  municipalitiesNames: [String!]
  senderType: String!
  senderOrgId: String
  senderName: String
  senderTakeOverAddress: String
  senderTakeOverPostalCode: String
  senderTakeOverCity: String
  senderTakeOverCountryCode: String
  senderAddress: String
  senderPostalCode: String
  senderCity: String
  senderCountryCode: String
  brokerSiret: String
  brokerName: String
  brokerReceiptNumber: String
  traderSiret: String
  traderName: String
  traderReceiptNumber: String
  operationCode: String!
  noTraceability: Boolean
  nextDestinationIsAbroad: Boolean
  declarationNumber: String
  notificationNumber: String
  movementNumber: String
  nextOperationCode: String
  isUpcycled: Boolean
  destinationParcelInseeCodes: [String!]
  destinationParcelNumbers: [String!]
  destinationParcelCoordinates: [String!]
  transporter1TransportMode: TransportMode!
  transporter1Type: String!
  transporter1OrgId: String
  transporter1ReceiptNumber: String
  transporter1Name: String
  transporter1Address: String
  transporter1PostalCode: String
  transporter1City: String
  transporter1CountryCode: String
  transporter2TransportMode: TransportMode
  transporter2Type: String
  transporter2OrgId: String
  transporter2ReceiptNumber: String
  transporter2Name: String
  transporter2Address: String
  transporter2PostalCode: String
  transporter2City: String
  transporter2CountryCode: String
  transporter3TransportMode: TransportMode
  transporter3Type: String
  transporter3OrgId: String
  transporter3ReceiptNumber: String
  transporter3Name: String
  transporter3Address: String
  transporter3PostalCode: String
  transporter3City: String
  transporter3CountryCode: String
  transporter4TransportMode: TransportMode
  transporter4Type: String
  transporter4OrgId: String
  transporter4ReceiptNumber: String
  transporter4Name: String
  transporter4Address: String
  transporter4PostalCode: String
  transporter4City: String
  transporter4CountryCode: String
  transporter5TransportMode: TransportMode
  transporter5Type: String
  transporter5OrgId: String
  transporter5ReceiptNumber: String
  transporter5Name: String
  transporter5Address: String
  transporter5PostalCode: String
  transporter5City: String
  transporter5CountryCode: String
}
