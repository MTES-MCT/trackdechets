input WasteRegistryWhere {
  "Filtre sur l'identifiant du bordereau"
  id: IdFilter
  "Filtre sur la date de création du bordereau associé"
  createdAt: DateFilter
  "Filtre sur le type de bordereaux"
  bsdType: BsdTypeFilter
  "Filtre sur le code déchet"
  wasteCode: StringFilter
  "Filtre sur le n° SIRET de l'émetteur"
  emitterCompanySiret: StringFilter
  "Filtre sur le n° SIRET du transporteur"
  transporterCompanySiret: StringFilter
  "Filtre sur la date de prise en charge du déchet par le transporteur"
  transporterTakenOverAt: DateFilter
  "Filtre sur le n° SIRET de l'installation de destination"
  destinationCompanySiret: StringFilter
  "Filtre sur la date de réception sur l'installation de destination"
  destinationReceptionDate: DateFilter
  "Filtre sur la quantité reçue (en kg)"
  destinationReceptionWeight: NumericFilter
  "Filtre sur le code de l'opération de traitement"
  destinationOperationCode: StringFilter
  "Filtre sur la date de l'opération de traitement"
  destinationOperationDate: DateFilter
}

input BsdTypeFilter {
  _in: [BsdType!]
  _eq: BsdType
}

input SsdLineInput {
  reason: RegistryLineReason
  publicId: ID!
  reportForSiret: String!
  reportForName: String!
  reportForAddress: String!
  reportForCity: String!
  reportForPostalCode: String!
  reportAsSiret: String
  weightValue: Float!
  weightIsEstimate: Boolean!
  volume: Float
  wasteCode: String!
  wasteCodeBale: String
  wasteDescription: String!
  secondaryWasteCodes: [String!]
  secondaryWasteDescriptions: [String!]
  dispatchDate: DateTime
  useDate: DateTime
  processingDate: DateTime!
  processingEndDate: DateTime
  operationCode: String!
  operationMode: OperationMode!
  product: String!
  administrativeActReference: String!
  destinationType: String!
  destinationOrgId: String
  destinationName: String
  destinationAddress: String
  destinationCity: String
  destinationPostalCode: String
  destinationCountryCode: String
}
