import { FormsRegisterExportType } from "../../generated/graphql/types";

/**
 * Returns Form fragment for each export
 */
export function formFragment(exportType: FormsRegisterExportType) {
  return {
    OUTGOING: outgoingWasteFragment,
    INCOMING: incomingWasteFragment,
    TRANSPORTED: transportedWasteFragment,
    TRADED: tradedWasteFragment,
    ALL: allWasteFragment
  }[exportType];
}

const outgoingWasteFragment = `
  fragment OutgoingWasteFragment on Form {
    readableId
    customId
    emitterWorkSiteName
    emitterWorkSiteAddress
    ecoOrganismeName
    recipientCompanySiret
    recipientCompanyName
    recipientCompanyAddress
    recipientCompanyMail
    recipientCompanyPhone
    recipientCompanyContact
    recipientProcessingOperation
    recipientIsTempStorage
    temporaryStorageDetail {
      destinationCompanySiret
      destinationCompanyName
      destinationCompanyAddress
      destinationCompanyMail
      destinationCompanyPhone
      destinationCompanyContact
      destinationProcessingOperation
      transporterCompanySiret
      transporterCompanyName
      transporterCompanyAddress
      transporterIsExemptedOfReceipt
      transporterReceipt
      transporterValidityLimit
      transporterNumberPlate
    }
    quantityReceived
    processingOperationDone
    wasteDetailsCode
    wasteDetailsQuantity
    wasteDetailsPop
    traderCompanyName
    traderCompanySiret
    traderReceipt
    traderValidityLimit
    traderCompanyContact
    traderCompanyAddress
    transporterCompanySiret
    transporterCompanyName
    transporterCompanyAddress
    transporterIsExemptedOfReceipt
    transporterReceipt
    transporterValidityLimit
    transporterNumberPlate
    sentAt
    nextDestinationProcessingOperation
    nextDestinationCompanyName
    nextDestinationCompanyContact
    nextDestinationCompanyMail
    nextDestinationCompanyPhone
    nextDestinationCompanyAddress
    nextDestinationCompanyCountry
  }
`;

const incomingWasteFragment = `
  fragment IncomingWasteFragment on Form {
    readableId
    customId
    emitterCompanySiret
    emitterCompanyName
    emitterCompanyContact
    emitterCompanyAddress
    emitterWorkSiteName
    emitterWorkSiteAddress
    ecoOrganismeName
    recipientProcessingOperation
    recipientIsTempStorage
    quantityReceived
    wasteDetailsCode
    wasteDetailsPop
    traderCompanyName
    traderCompanySiret
    traderReceipt
    traderValidityLimit
    traderCompanyContact
    traderCompanyAddress
    transporterCompanySiret
    transporterCompanyName
    transporterCompanyAddress
    transporterIsExemptedOfReceipt
    transporterReceipt
    transporterValidityLimit
    transporterNumberPlate
    processingOperationDone
    receivedAt
    isAccepted
    nextDestinationProcessingOperation
    nextDestinationCompanyName
    nextDestinationCompanyContact
    nextDestinationCompanyMail
    nextDestinationCompanyPhone
    nextDestinationCompanyAddress
    nextDestinationCompanyCountry
  }
`;
const transportedWasteFragment = `
  fragment TransportedWasteFragment on Form {
    readableId
    customId
    emitterCompanySiret
    emitterCompanyName
    emitterCompanyContact
    emitterCompanyAddress
    emitterWorkSiteName
    emitterWorkSiteAddress
    ecoOrganismeName
    recipientCompanySiret
    recipientCompanyName
    recipientCompanyAddress
    recipientCompanyMail
    recipientCompanyPhone
    recipientCompanyContact
    recipientProcessingOperation
    recipientIsTempStorage
    quantityReceived
    temporaryStorageDetail {
      destinationCompanySiret
      destinationCompanyName
      destinationCompanyAddress
      destinationCompanyMail
      destinationCompanyPhone
      destinationCompanyContact
      destinationProcessingOperation
      transporterCompanySiret
      transporterCompanyName
      transporterCompanyAddress
      transporterIsExemptedOfReceipt
      transporterReceipt
      transporterValidityLimit
      transporterNumberPlate
    }
    traderCompanyName
    traderCompanySiret
    traderReceipt
    traderValidityLimit
    traderCompanyContact
    traderCompanyAddress
    traderCompanyName
    traderCompanySiret
    traderReceipt
    traderValidityLimit
    traderCompanyContact
    traderCompanyAddress
    recipientCompanySiret
    recipientCompanyName
    recipientCompanyAddress
    recipientCompanyMail
    recipientProcessingOperation
    wasteDetailsCode
    wasteDetailsPop
    transporterNumberPlate
    sentAt
    receivedAt
    isAccepted
    nextDestinationProcessingOperation
    nextDestinationCompanyName
    nextDestinationCompanyContact
    nextDestinationCompanyMail
    nextDestinationCompanyPhone
    nextDestinationCompanyAddress
    nextDestinationCompanyCountry
  }
`;
const tradedWasteFragment = `
  fragment TradedWasteFragment on Form {
    readableId
    customId
    emitterCompanySiret
    emitterCompanyName
    emitterCompanyContact
    emitterCompanyAddress
    emitterWorkSiteName
    emitterWorkSiteAddress
    ecoOrganismeName
    recipientCompanySiret
    recipientCompanyName
    recipientCompanyAddress
    recipientCompanyMail
    recipientCompanyPhone
    recipientCompanyContact
    recipientProcessingOperation
    recipientIsTempStorage
    quantityReceived
    temporaryStorageDetail {
      destinationCompanySiret
      destinationCompanyName
      destinationCompanyAddress
      destinationCompanyMail
      destinationCompanyPhone
      destinationCompanyContact
      destinationProcessingOperation
      transporterCompanySiret
      transporterCompanyName
      transporterCompanyAddress
      transporterIsExemptedOfReceipt
      transporterReceipt
      transporterValidityLimit
      transporterNumberPlate
    }
    wasteDetailsCode
    wasteDetailsQuantity
    wasteDetailsPop
    traderCompanyName
    traderCompanySiret
    traderReceipt
    traderValidityLimit
    traderCompanyContact
    traderCompanyAddress
    transporterCompanySiret
    transporterCompanyName
    transporterCompanyAddress
    transporterIsExemptedOfReceipt
    transporterReceipt
    transporterValidityLimit
    transporterNumberPlate
    sentAt
    receivedAt
    isAccepted
    processingOperationDone
    noTraceability
    nextDestinationProcessingOperation
    nextDestinationCompanyName
    nextDestinationCompanyContact
    nextDestinationCompanyMail
    nextDestinationCompanyPhone
    nextDestinationCompanyAddress
    nextDestinationCompanyCountry
  }
`;

const allWasteFragment = `
  fragment AllWasteFragment on Form {
    readableId
    customId
    emitterCompanySiret
    emitterCompanyName
    emitterCompanyContact
    emitterCompanyAddress
    emitterWorkSiteName
    emitterWorkSiteAddress
    ecoOrganismeName
    recipientCompanySiret
    recipientCompanyName
    recipientCompanyAddress
    recipientCompanyMail
    recipientCompanyPhone
    recipientCompanyContact
    recipientProcessingOperation
    recipientIsTempStorage
    quantityReceived
    temporaryStorageDetail {
      destinationCompanySiret
      destinationCompanyName
      destinationCompanyAddress
      destinationCompanyMail
      destinationCompanyPhone
      destinationCompanyContact
      destinationProcessingOperation
      transporterCompanySiret
      transporterCompanyName
      transporterCompanyAddress
      transporterIsExemptedOfReceipt
      transporterReceipt
      transporterValidityLimit
      transporterNumberPlate
    }
    wasteDetailsCode
    wasteDetailsQuantity
    wasteDetailsPop
    traderCompanyName
    traderCompanySiret
    traderReceipt
    traderValidityLimit
    traderCompanyContact
    traderCompanyAddress
    transporterCompanySiret
    transporterCompanyName
    transporterCompanyAddress
    transporterIsExemptedOfReceipt
    transporterReceipt
    transporterValidityLimit
    transporterNumberPlate
    sentAt
    receivedAt
    isAccepted
    processingOperationDone
    noTraceability
    nextDestinationProcessingOperation
    nextDestinationCompanyName
    nextDestinationCompanyContact
    nextDestinationCompanyMail
    nextDestinationCompanyPhone
    nextDestinationCompanyAddress
    nextDestinationCompanyCountry
  }
`;
