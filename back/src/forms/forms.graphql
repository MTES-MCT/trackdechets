scalar DateTime

type Query {
  forms: [Form]
}

type Mutation {
  createForm(formInput: FormInput!): Form
  deleteForm(id: ID!): Form
}

type Form {
  id: ID

  emitter: Emitter
  recipient: Recipient
  transporter: Transporter
  wasteDetails: WasteDetails

  createdAt: DateTime
  updatedAt: DateTime

  ownerId: Int
}

type FormCompany {
  name: String
  siret: String
  address: String
  contact: String
  phone: Int
  mail: String
}

enum EmitterType {
  PRODUCER
  OTHER
}

type Emitter {
  type: EmitterType
  pickupSite: String

  company: FormCompany
}

type Recipient {
  cap: String
  processingOperation: String

  company: FormCompany
}

type Transporter {
  company: FormCompany

  receipt: String
  department: String
  validityLimit: DateTime
  contact: String
  numberPlate: String
}

enum QuantityType {
  REAL
  ESTIMATED
}

type WasteDetails {
  code: String
  onuCode: String
  packaging: String
  numberOfPackages: Int
  quantity: Float
  quantityType: QuantityType
}
