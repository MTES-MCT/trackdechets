"Payload de signature d'un BSD"
input SentFormInput {
  "Date de l'envoi du déchet par l'émetteur et de prise en charge du déchet par le transporteur"
  sentAt: DateTime!

  "Nom de la personne responsable de l'envoi du déchet (case 9)"
  sentBy: String!
}

input SignEmissionFormInput {
  "Conditionnements"
  packagingInfos: [PackagingInfoInput!]

  "Quantité en tonnes"
  quantity: Float!

  "Code ONU"
  onuCode: String

  "Numéro de la plaque d'immatriculation transporteur"
  transporterNumberPlate: String

  "Date de signature de l'émetteur"
  emittedAt: DateTime!

  "Nom de la personne signant pour l'émetteur"
  emittedBy: String!

  "Si c'est l'éco-organisme qui a signé ou pas"
  emittedByEcoOrganisme: Boolean
}

input SignTransportFormInput {
  "Date de signature du transporteur"
  takenOverAt: DateTime!

  "Nom de la personne signant pour le transporteur"
  takenOverBy: String!
}

"Payload de signature d'un BSD par un transporteur"
input TransporterSignatureFormInput {
  "Date de l'envoi du déchet par l'émetteur et de prise en charge du déchet par le transporteur"
  sentAt: DateTime!

  "Si oui ou non le BSD a été signé par un transporteur"
  signedByTransporter: Boolean!

  "Code de signature permettant d'authentifier l'émetteur"
  securityCode: Int!

  "Dénomination de l'auteur de la signature, par défaut il s'agit de l'émetteur"
  signatureAuthor: SignatureAuthor

  "Nom de la personne responsable de l'envoi du déchet (case 9)"
  sentBy: String!

  "Si oui on non le BSD a été signé par l'émetteur"
  signedByProducer: Boolean!

  "Conditionnements"
  packagingInfos: [PackagingInfoInput!]

  "DEPRECATED - Conditionnement"
  packagings: [Packagings]

  "Quantité en tonnes"
  quantity: Float!

  "Code ONU"
  onuCode: String
}

"Payload simplifié de signature d'un BSD par un transporteur"
input SignatureFormInput {
  "Date de l'envoi du déchet par l'émetteur et de prise en charge du déchet par le transporteur"
  sentAt: DateTime!
  "Nom de la personne responsable de l'envoi du déchet (case 9)"
  sentBy: String!
}

input AcceptedFormInput {
  "Statut d'acceptation du déchet (case 10)"
  wasteAcceptationStatus: WasteAcceptationStatus!

  "Raison du refus (case 10). Obligatoire en cas de refus de déchet"
  wasteRefusalReason: String

  "Date à laquelle le déchet a été accepté ou refusé (case 10)"
  signedAt: DateTime!

  "Nom de la personne en charge de l'acceptation' du déchet (case 10)"
  signedBy: String!

  """
  Quantité réelle présentée en tonnes (case 10).
   Doit être supérieure à 0 lorsque le déchet est accepté.
   Doit être égale à 0 lorsque le déchet est refusé.
  """
  quantityReceived: Float!
}

"Payload de réception d'un BSD"
input ReceivedFormInput {
  "Nom de la personne en charge de la réception du déchet (case 10)"
  receivedBy: String!

  "Date à laquelle le déchet a été reçu (case 10)"
  receivedAt: DateTime!

  "Statut d'acceptation du déchet (case 10)"
  wasteAcceptationStatus: WasteAcceptationStatus

  "Raison du refus (case 10). Obligatoire en cas de refus de déchet"
  wasteRefusalReason: String

  "Date à laquelle le déchet a été accepté ou refusé (case 10)"
  signedAt: DateTime

  """
  Quantité réelle présentée en tonnes (case 10).
   Doit être supérieure à 0 lorsque le déchet est accepté.
   Doit être égale à 0 lorsque le déchet est refusé.
  """
  quantityReceived: Float
}

"Payload de traitement d'un BSD"
input ProcessedFormInput {
  "Traitement réalisé (code D/R)"
  processingOperationDone: String!

  """
  Description de l'opération d’élimination / valorisation (case 11)
  Elle se complète automatiquement lorsque non fournie
  """
  processingOperationDescription: String

  "Personne en charge du traitement"
  processedBy: String!

  "Date à laquelle le déchet a été traité"
  processedAt: DateTime!

  "Destination ultérieure prévue (case 12)"
  nextDestination: NextDestinationInput

  "Si oui ou non il y a eu perte de traçabalité"
  noTraceability: Boolean
}

input NextDestinationInput {
  "Traitement prévue (code D/R)"
  processingOperation: String!

  "Établissement de destination ultérieur"
  company: InternationalCompanyInput!
}

"Payload de création d'un bordereau"
input CreateFormInput {
  """
  Identifiant personnalisé permettant de faire le lien avec un
  objet un système d'information tierce
  """
  customId: String

  "Établissement émetteur/producteur du déchet (case 1)"
  emitter: EmitterInput

  """
  Installation de destination ou d’entreposage ou de reconditionnement prévue (case 2)
  L'établissement renseigné doit être inscrit sur Trackdéchets en tant qu'installation
  de traitement ou de tri, transit, regroupement.
  """
  recipient: RecipientInput

  "Transporteur du déchet (case 8)"
  transporter: TransporterInput

  "Détails du déchet (case 3 à 6)"
  wasteDetails: WasteDetailsInput

  "Négociant (case 7)"
  trader: TraderInput

  "Courtier"
  broker: BrokerInput

  "Annexe 2"
  appendix2Forms: [AppendixFormInput!]
  ecoOrganisme: EcoOrganismeInput

  temporaryStorageDetail: TemporaryStorageDetailInput
}

"Payload de mise à jour d'un bordereau"
input UpdateFormInput {
  "Identifiant opaque"
  id: ID!

  """
  Identifiant personnalisé permettant de faire le lien avec un
  objet un système d'information tierce
  """
  customId: String

  "Établissement émetteur/producteur du déchet (case 1)"
  emitter: EmitterInput

  """
  Installation de destination ou d’entreposage ou de reconditionnement prévue (case 2)
  L'établissement renseigné doit être inscrit sur Trackdéchets en tant qu'installation
  de traitement ou de tri, transit, regroupement.
  """
  recipient: RecipientInput

  "Transporteur du déchet (case 8)"
  transporter: TransporterInput

  "Détails du déchet (case 3 à 6)"
  wasteDetails: WasteDetailsInput

  "Négociant (case 7)"
  trader: TraderInput

  "Courtier"
  broker: BrokerInput

  "Annexe 2"
  appendix2Forms: [AppendixFormInput!]
  ecoOrganisme: EcoOrganismeInput

  temporaryStorageDetail: TemporaryStorageDetailInput
}

"Payload de création d'un BSD"
input FormInput {
  "Identifiant opaque"
  id: ID

  """
  Identifiant personnalisé permettant de faire le lien avec un
  objet un système d'information tierce
  """
  customId: String

  "Établissement émetteur/producteur du déchet (case 1)"
  emitter: EmitterInput

  """
  Installation de destination ou d’entreposage ou de reconditionnement prévue (case 2)
  L'établissement renseigné doit être inscrit sur Trackdéchets en tant qu'installation
  de traitement ou de tri, transit, regroupement.
  """
  recipient: RecipientInput

  "Transporteur du déchet (case 8)"
  transporter: TransporterInput

  "Détails du déchet (case 3 à 6)"
  wasteDetails: WasteDetailsInput

  "Négociant (case 7)"
  trader: TraderInput

  "Courtier"
  broker: BrokerInput

  "Annexe 2"
  appendix2Forms: [AppendixFormInput!]
  ecoOrganisme: EcoOrganismeInput

  temporaryStorageDetail: TemporaryStorageDetailInput
}

"Payload de création d'une annexe 2"
input AppendixFormInput {
  "Identifiant unique du bordereau"
  id: ID!

  """
  N° de bordereau

  Déprécié : L'id du bordereau doit être utilisé comme identifiant (paramètre id).
  Le readableId permet de le récupérer via la query form.
  """
  readableId: ID
}

"Payload de liaison d'un BSD à un eco-organisme"
input EcoOrganismeInput {
  name: String!
  """
  SIRET composé de 14 caractères correspondant à un éco-organisme. La liste des éco-organismes
  est disponible via la [query ecoOrganismes](../user-company/queries#ecoorganismes)
  """
  siret: String!
}

input TemporaryStorageDetailInput {
  destination: DestinationInput
}

input DestinationInput {
  """
  Installation de destination prévue (case 14)
  L'établissement renseigné doit être inscrit sur Trackdéchets en tant qu'installation
  de traitement ou de tri, transit, regroupement.
  """
  company: CompanyInput

  "N° de CAP prévu (le cas échéant). Le champ CAP est obligatoire pour les déchets dangereux."
  cap: String

  "Opération d'élimination / valorisation prévue (code D/R)"
  processingOperation: String

  "Indique si c'est l'émetteur initial ou l'installation d'entreposage ou de reconditionnement qui a saisi les informations"
  isFilledByEmitter: Boolean
}

"""
Payload d'un établissement pouvant se situer en France
ou à l'étranger
"""
input InternationalCompanyInput {
  "SIRET de l'établissement, optionnel dans le cas d'un établissement à l'étranger"
  siret: String

  "Nom de l'établissement"
  name: String

  "Adresse de l'établissement"
  address: String

  """
  Code ISO 3166-1 alpha-2 du pays d'origine de l'entreprise :
  https://fr.wikipedia.org/wiki/ISO_3166-1_alpha-2

  En l'absence de code, l'entreprise est considérée comme résidant en France.
  """
  country: String

  "Nom du contact dans l'établissement"
  contact: String

  "Email du contact dans l'établissement"
  mail: String

  "Numéro de téléphone de contact dans l'établissement"
  phone: String
}

"Payload d'une adresse chantier"
input WorkSiteInput {
  name: String
  address: String
  city: String
  postalCode: String
  infos: String
}

"Payload lié à un l'émetteur du BSD (case 1)"
input EmitterInput {
  "Type d'émetteur. Le type d'émetteur doit être `OTHER` lorsqu'un éco-organisme est responsable du déchet"
  type: EmitterType

  "Adresse du chantier"
  workSite: WorkSiteInput

  "DEPRECATED - Ancienne adresse chantier"
  pickupSite: String

  "Établissement émetteur"
  company: CompanyInput
}

"""
Payload lié à l'installation de destination ou d'entreprosage
ou de reconditionnement prévue (case 2)
"""
input RecipientInput {
  "N° de CAP (le cas échéant)"
  cap: String

  "Opération d'élimination / valorisation prévue (code D/R)"
  processingOperation: String

  "Établissement de destination"
  company: CompanyInput

  "Si c'est un entreprosage provisoire ou reconditionnement"
  isTempStorage: Boolean
}

"Collecteur - transporteur (case 8)"
input TransporterInput {
  "Établissement collecteur - transporteur"
  company: CompanyInput

  "Exemption de récépissé"
  isExemptedOfReceipt: Boolean

  "N° de récipissé. Obligatoire lorsque l'exemption de récépissé n'est pas précisée"
  receipt: String

  "Département du récépissé. Obligatoire lorsque l'exemption de récépissé n'est pas précisée"
  department: String

  "Limite de validité du récépissé. Obligatoire lorsque l'exemption de récépissé n'est pas précisée"
  validityLimit: DateTime

  "Numéro de plaque d'immatriculation"
  numberPlate: String

  "Information libre, destinée aux transporteurs"
  customInfo: String

  "Mode de transport. 'Route' par défaut"
  mode: TransportMode
}

"Payload lié au négociant"
input TraderInput {
  "N° de récipissé"
  receipt: String

  "Département"
  department: String

  "Limite de validité"
  validityLimit: DateTime

  "Établissement négociant"
  company: CompanyInput
}

"Payload lié au courtier"
input BrokerInput {
  "N° de récipissé"
  receipt: String

  "Département"
  department: String

  "Limite de validité"
  validityLimit: DateTime

  "Établissement courtier"
  company: CompanyInput
}

"Payload lié à un élément de conditionnement"
input PackagingInfoInput {
  "Type de conditionnement"
  type: Packagings!

  "Description du conditionnement dans le cas où le type de conditionnement est `OTHER`"
  other: String

  """
  Nombre de colis associés à ce conditionnement. Dans le cas d'un conditionnemt BENNE ou CITERNE,
  le nombre de colis ne peut être supérieur à 2.
  """
  quantity: Int!
}

"Payload lié au détails du déchet (case 3 à 6)"
input WasteDetailsInput {
  """
  Code du déchet dangereux ou non-dangereux qui doit faire partie de la liste officielle du code de l'environnement :
  https://aida.ineris.fr/consultation_document/10327

  Il doit être composé de 3 paires de deux chiffres séparés par un espace et se termine éventuellement par une astérisque.

  Un exemple de déchet non-dangereux valide (déchets provenant de l'extraction des minéraux métallifères) :
  01 01 01

  Ce même exemple, mais avec un format invalide :
  010101

  Un exemple de déchet dangereux valide (stériles acidogènes provenant de la transformation du sulfure) :
  01 03 04*

  Ce même exemple, mais avec un format invalide :
  010304 *
  """
  code: String

  "Dénomination usuelle"
  name: String

  "Code ONU. Obligatoire pour les déchets dangereux. Merci d'indiquer 'non soumis' si nécessaire."
  onuCode: String

  "Liste de conditionnements. Les conditionnements CITERNE et BENNE ne peuvent pas être associés à un autre conditionnement"
  packagingInfos: [PackagingInfoInput!]

  "DEPRECATED - Conditionnement"
  packagings: [Packagings]

  "DEPRECATED - Autre packaging (préciser)"
  otherPackaging: String

  "DEPRECATED - Nombre de colis"
  numberOfPackages: Int

  "Quantité en tonnes"
  quantity: Float

  "Réelle ou estimée"
  quantityType: QuantityType

  "Consistance"
  consistence: Consistence

  "Contient des Polluants Organiques Persistants (POP) oui / non"
  pop: Boolean

  """
  https://www.ecologie.gouv.fr/dechets-dangereux
  Permet de préciser le caractère dangereux (au sens de l’article R541-8 du code de l’environnement)
  d'un déchet dont le code ne contient pas d'astérisque. Par défaut si cette valeur est omise,
  on considère dangereux un déchet dont le code comporte un astérique et non dangereux un déchet
  dont le code ne comporte pas d'astérisque.
  """
  isDangerous: Boolean
}

"""
Payload lié au reconditionnement (case 15 à 17)
"""
input WasteDetailsRepackagingInput {
  "Code ONU"
  onuCode: String

  "Conditionnements"
  packagingInfos: [PackagingInfoInput!]

  "Quantité en tonnes"
  quantity: Float

  "Réelle ou estimée"
  quantityType: QuantityType
}

input TempStorerAcceptedFormInput {
  "Date à laquelle le déchet a été accepté ou refusé (case 13)."
  signedAt: DateTime!

  "Nom de la personne en charge de l'acceptation du déchet (case 13)"
  signedBy: String!

  "Statut d'acceptation du déchet (case 13)"
  wasteAcceptationStatus: WasteAcceptationStatus!

  "Raison du refus (case 13). Obligatoire en cas de refus de déchet"
  wasteRefusalReason: String

  """
  Quantité réelle présentée en tonnes (case 13)
   Doit être supérieure à 0 lorsque le déchet est accepté.
   Doit être égale à 0 lorsque le déchet est refusé.
  """
  quantityReceived: Float!

  "Réelle ou estimée"
  quantityType: QuantityType!
}

input TempStoredFormInput {
  "Statut d'acceptation du déchet (case 13)"
  wasteAcceptationStatus: WasteAcceptationStatus

  "Raison du refus (case 13). Obligatoire en cas de refus de déchet"
  wasteRefusalReason: String

  "Nom de la personne en charge de la réception du déchet (case 13)"
  receivedBy: String!

  "Date à laquelle le déchet a été reçu (case 13)"
  receivedAt: DateTime!

  "Date à laquelle le déchet a été accepté ou refusé (case 13). Défaut à la date d'aujourd'hui."
  signedAt: DateTime

  """
  Quantité réelle présentée en tonnes (case 13)
   Doit être supérieure à 0 lorsque le déchet est accepté.
   Doit être égale à 0 lorsque le déchet est refusé.
  """
  quantityReceived: Float!

  "Réelle ou estimée"
  quantityType: QuantityType!
}

"""
Payload lié au reconditionnement (case 15 à 17)
"""
input WasteDetailsRepackagingInput {
  "Code ONU"
  onuCode: String

  "Conditionnements"
  packagingInfos: [PackagingInfoInput!]

  "Quantité en tonnes"
  quantity: Float

  "Réelle ou estimée"
  quantityType: QuantityType
}

"Payload lié au détails du déchet du BSD suite et à la signature de l'envoi (case 14 à 20)"
input ResentFormInput {
  "Destination finale du déchet (case 14)"
  destination: DestinationInput

  "Détail du déchet en cas de reconditionnement (case 15 à 19)"
  wasteDetails: WasteDetailsRepackagingInput

  "Transporteur du déchet reconditionné"
  transporter: TransporterInput

  "Nom du signataire du BSD suite  (case 19)"
  signedBy: String!

  "Date de signature du BSD suite (case 19). Défaut à la date d'aujourd'hui."
  signedAt: DateTime!
}

"Payload lié au détails du déchet du BSD suite (case 14 à 19)"
input ResealedFormInput {
  "Destination finale du déchet (case 14)"
  destination: DestinationInput

  "Détail du déchet en cas de reconditionnement (case 15 à 19)"
  wasteDetails: WasteDetailsRepackagingInput

  "Transporteur du déchet reconditionné"
  transporter: TransporterInput
}

"Payload lié à l'ajout de segment de transport multimodal (case 20 à 21)"
input NextSegmentInfoInput {
  transporter: TransporterInput
  mode: TransportMode!
}

"Payload de prise en charge de segment"
input TakeOverInput {
  takenOverAt: DateTime!
  takenOverBy: String!
}

"Payload d'import d'un BSD papier"
input ImportPaperFormInput {
  """
  Numéro de BSD Trackdéchets (uniquement dans le cas d'une mise à jour d'un
  bordereau émis initialement dans Trackdéchets)
  """
  id: ID
  """
  Identifiant libre qui peut éventuellement servir à faire le lien dans Trackdéchets
  entre le BSD papier et le BSD numérique dans le cas de l'import d'un BSD n'ayant
  pas été émis initialement dans Trackdéchets.
  """
  customId: String

  "Établissement émetteur/producteur du déchet (case 1)"
  emitter: EmitterInput

  """
  Installation de destination ou d’entreposage ou de reconditionnement prévue (case 2)
  L'établissement renseigné doit être inscrit sur Trackdéchets en tant qu'installation
  de traitement ou de tri, transit, regroupement.
  """
  recipient: RecipientInput

  "Transporteur du déchet (case 8)"
  transporter: TransporterInput

  "Détails du déchet (case 3 à 6)"
  wasteDetails: WasteDetailsInput

  "Négociant (case 7)"
  trader: TraderInput

  "Courtier"
  broker: BrokerInput

  "Éco-organisme (apparait en case 1)"
  ecoOrganisme: EcoOrganismeInput

  "Informations liées aux signatures transporteur et émetteur (case 8 et 9)"
  signingInfo: SignatureFormInput!

  "Informations liées à la réception du déchet (case 10)"
  receivedInfo: ReceivedFormInput!

  "Informations liées au traitement du déchet (case 11)"
  processedInfo: ProcessedFormInput!
}

"Payload de révision d'un bordereau."
input CreateFormRevisionRequestInput {
  "Identifiant du bordereau à réviser"
  formId: ID!
  "Numéro SIRET du demandeur"
  authoringCompanySiret: String!
  "Contenu de la révision"
  content: FormRevisionRequestContentInput!
  "Commentaire pour expliquer la demande de révision"
  comment: String!
}

"Payload du contenu de la révision d'un bordereau. Disponible sur une liste restreinte de champs."
input FormRevisionRequestContentInput {
  "Détails du déchet (édition partielle uniquement)"
  wasteDetails: FormRevisionRequestWasteDetailsInput

  "Négociant"
  trader: TraderInput

  "Courtier"
  broker: BrokerInput

  "Destination du déchet (édition partielle uniquement)"
  recipient: FormRevisionRequestRecipientInput

  "Quantité reçue, en tonnes"
  quantityReceived: Float

  "Traitement réalisé (code D/R)"
  processingOperationDone: String

  "Entreposage provisoire (édition partielle uniquement)"
  temporaryStorageDetail: FormRevisionRequestTemporaryStorageDetailInput
}

input FormRevisionRequestWasteDetailsInput {
  "Code CED"
  code: String

  "Contient des Polluants Organiques Persistants (POP) oui / non"
  pop: Boolean
}

input FormRevisionRequestRecipientInput {
  cap: String
}

input FormRevisionRequestTemporaryStorageDetailInput {
  destination: FormRevisionRequestDestinationInput
}

input FormRevisionRequestDestinationInput {
  "N° de CAP"
  cap: String

  "Opération d'élimination / valorisation prévue (code D/R)"
  processingOperation: String
}

input FormRevisionRequestWhere {
  status: RevisionRequestStatus
}
