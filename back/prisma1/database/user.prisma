type User {
  id: ID! @id
  isActive: Boolean @default(value: false)
  email: String! @unique
  password: String!
  name: String
  phone: String

  companyAssociations: [CompanyAssociation]

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum UserRole {
  MEMBER
  ADMIN
}

type UserActivationHash {
  id: ID! @id
  user: User! @relation(link: TABLE)
  hash: String! @unique

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserAccountHash {
  id: ID! @id
  email: String!
  companySiret: ID!
  role: UserRole!
  hash: String! @unique

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  # date when the invitation was accepted and the user joined
  acceptedAt: DateTime
}

enum MembershipRequestStatus {
  PENDING
  ACCEPTED
  REFUSED
}

type MembershipRequest {
  id: ID! @id

  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  status: MembershipRequestStatus! @default(value: PENDING)

  # Email of the admin who has accepted or refused the request
  statusUpdatedBy: String

  user: User! @relation(link: INLINE, name: "MembershipRequest_user_User")
  company: Company! @relation(link: INLINE)

  # List of emails the request was sent to
  sentTo: [String!]! @scalarList(strategy: RELATION)
}

"""
Different types of authentication possible to Trackdechet's API
"""
enum AuthType {
  # Session authentification from Trackdechets'UI
  SESSION
  # Bearer access token (stored in database)
  BEARER
  # JWT token
  JWT
}

"""
OAuth2 - Access token to a user resource
https://tools.ietf.org/html/rfc6749#section-5
"""
type AccessToken {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  user: User!
  application: Application
  token: String! @unique
  isRevoked: Boolean! @default(value: false)
  lastUsed: DateTime
}


"""
OAuth2 - Application (Client on the Authorization server)
"""
type Application {
  # id used as clientId
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  # Confidential secret issued to the client
  clientSecret: String!
  # Friendly name for the application
  name: String!
  admins: [User!]!
  # The list of allowed redirect uris
  redirectUris: [String!]! @scalarList(strategy: RELATION)
  logoUrl: String
}

"""
OAuth2 - Grant represents a token with a short lifetime
that can be swapped for an access token
https://tools.ietf.org/html/rfc6749#section-4.1.2
"""
type Grant {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  # The user who requested the grant
  user: User!
  # The authorization code generated by the autorization server
  code: String! @unique
  # Application instance this grant was asked for
  application: Application!
  # Expires time in seconds
  expires: Int!
  redirectUri: String!
}
