schema {
  query: Query
  mutation: Mutation
}

type Query {
  """
  Renvoie des informations publiques sur un établissement
  extrait de la base SIRENE et de la base des installations
  classées pour la protection de l'environnement (ICPE)
  """
  companyInfos(
    """SIRET de l'établissement"""
    siret: String!
  ): CompanyPublic!
  """Renvoie la liste des éco-organismes"""
  ecoOrganismes: [EcoOrganisme!]!
  """Renvoie les informations sur l'utilisateur authentifié"""
  me: User!
  """
  Récupère une demande de rattachement effectuée par l'utilisateur courant
  à partir de l'identifiant de cette demande ou du SIRET de l'établissement
  auquel l'utilisateur a demandé à être rattaché. L'un ou l'autre des
  paramètres (id ou siret) doit être être passé mais pas les deux. Cette query
  permet notamment de suivre l'état d'avancement de la demande de rattachement
  (en attente, accepté, refusé)
  """
  membershipRequest(id: ID, siret: String): MembershipRequest
  """
  Effectue une recherche floue sur la base SIRENE et enrichit
  les résultats avec des informations provenant de Trackdéchets
  """
  searchCompanies(
    """
    Champ utilisé pour faire une recherche floue
    sur la nom de l'établissement, ex: 'Boulangerie Dupont'
    """
    clue: String!
    """(Optionnel) Filtre les résultats par numéro de département"""
    department: String
  ): [CompanySearchResult!]!
}

"""Information sur un établissement accessible publiquement"""
type CompanyPublic {
  """Adresse de l'établissement"""
  address: String
  """Récépissé courtier associé à cet établissement (le cas échant)"""
  brokerReceipt: BrokerReceipt
  """
  Profil de l'établissement sur Trackdéchets
  ayant pour valeur un tableau vide quand l'établissement
  n'est pas inscrit sur la plateforme `isRegistered=false`
  """
  companyTypes: [CompanyType!]!
  """Email de contact"""
  contactEmail: String
  """Numéro de téléphone de contact"""
  contactPhone: String
  """Liste des agréments de l'éco-organisme"""
  ecoOrganismeAgreements: [URL!]!
  """État administratif de l'établissement. A = Actif, F = Fermé"""
  etatAdministratif: String
  """
  Installation classée pour la protection de l'environnement (ICPE)
  associé à cet établissement
  """
  installation: Installation
  """Si oui on non cet établissement est inscrit sur la plateforme Trackdéchets"""
  isRegistered: Boolean
  """Libellé NAF"""
  libelleNaf: String
  """Code NAF"""
  naf: String
  """Nom de l'établissement"""
  name: String
  """SIRET de l'établissement"""
  siret: String
  """Récépissé négociant associé à cet établissement (le cas échant)"""
  traderReceipt: TraderReceipt
  """Récépissé transporteur associé à cet établissement (le cas échéant)"""
  transporterReceipt: TransporterReceipt
  """Agrément VHU broyeur (le cas échéant, pour les profils VHU)"""
  vhuAgrementBroyeur: VhuAgrement
  """Agrément VHU démolisseur (le cas échéant, pour les profils VHU)"""
  vhuAgrementDemolisseur: VhuAgrement
  """Site web"""
  website: String
}

"""Récépissé courtier"""
type BrokerReceipt {
  """Département ayant enregistré la déclaration"""
  department: String!
  id: ID!
  """Numéro de récépissé courtier"""
  receiptNumber: String!
  """Limite de validité du récépissé"""
  validityLimit: DateTime!
}

"""
Le scalaire `DateTime` accepte des chaines de caractères
formattées selon le standard ISO 8601. Exemples:
- "yyyy-MM-dd" (eg. 2020-11-23)
- "yyyy-MM-ddTHH:mm:ss" (eg. 2020-11-23T13:34:55)
- "yyyy-MM-ddTHH:mm:ssX" (eg. 2020-11-23T13:34:55Z)
- "yyyy-MM-dd'T'HH:mm:ss.SSS" (eg. 2020-11-23T13:34:55.987)
- "yyyy-MM-dd'T'HH:mm:ss.SSSX" (eg. 2020-11-23T13:34:55.987Z)
"""
scalar DateTime

"""Profil entreprise"""
enum CompanyType {
  """Courtier"""
  BROKER
  """Installation de Transit, regroupement ou tri de déchets"""
  COLLECTOR
  """Éco-organisme"""
  ECO_ORGANISME
  """Producteur de déchet"""
  PRODUCER
  """Négociant"""
  TRADER
  """Transporteur"""
  TRANSPORTER
  """Installation de collecte de déchets apportés par le producteur initial"""
  WASTE_CENTER
  """Installation de traitement de VHU (casse automobile et/ou broyeur agréé)"""
  WASTE_VEHICLES
  """Installation de traitement"""
  WASTEPROCESSOR
}

"""Chaîne de caractère au format URL, débutant par un protocole http(s)."""
scalar URL

"""Installation pour la protection de l'environnement (ICPE)"""
type Installation {
  """Identifiant S3IC"""
  codeS3ic: String
  """Liste des déclarations GEREP"""
  declarations: [Declaration!]
  """Liste des rubriques associées"""
  rubriques: [Rubrique!]
  """URL de la fiche ICPE sur Géorisques"""
  urlFiche: String
}

"""Représente une ligne dans une déclaration GEREP"""
type Declaration {
  """Année de la déclaration"""
  annee: String
  """Code du déchet"""
  codeDechet: String
  """Type de déclaration GEREP: producteur ou traiteur"""
  gerepType: GerepType
  """Description du déchet"""
  libDechet: String
}

"""Type d'une déclaration GEREP"""
enum GerepType {
  Producteur
  Traiteur
}

"""
Rubrique ICPE d'un établissement avec les autorisations associées
Pour plus de détails, se référer à la
[nomenclature des ICPE](https://www.georisques.gouv.fr/articles-risques/les-installations-classees-pour-la-protection-de-lenvironnement#nomenclature-des-installations-classees)
"""
type Rubrique {
  """
  Description de l'activité:
  Ex: traitement thermique de déchets dangereux
  """
  activite: String
  """Alinéa pour la rubrique concerné"""
  alinea: String
  """Catégorie d'établissement associé: TTR, VHU, Traitement"""
  category: String!
  """État de l'activité, ex: 'En fonct', 'À l'arrêt'"""
  etatActivite: String
  """Régime autorisé pour la rubrique: déclaratif, autorisation, seveso, etc"""
  regimeAutorise: String
  """
  Numéro de rubrique tel que défini dans la nomenclature des ICPE
  Ex: 2710
  """
  rubrique: String!
  """Unité utilisé pour le volume autorisé"""
  unite: String
  """Volume autorisé"""
  volume: String
  """Type de déchets autorisé"""
  wasteType: WasteType
}

"""Type de déchets autorisé pour une rubrique"""
enum WasteType {
  """Déchet dangereux"""
  DANGEROUS
  """Déchet inerte"""
  INERTE
  """Déchet non dangereux"""
  NOT_DANGEROUS
}

"""Récépissé négociant"""
type TraderReceipt {
  """Département ayant enregistré la déclaration"""
  department: String!
  id: ID!
  """Numéro de récépissé négociant"""
  receiptNumber: String!
  """Limite de validité du récépissé"""
  validityLimit: DateTime!
}

"""Récépissé transporteur"""
type TransporterReceipt {
  """Département ayant enregistré la déclaration"""
  department: String!
  id: ID!
  """Numéro de récépissé transporteur"""
  receiptNumber: String!
  """Limite de validité du récépissé"""
  validityLimit: DateTime!
}

"""Agrément VHU"""
type VhuAgrement {
  """Numéro d'agrément VHU"""
  agrementNumber: String!
  """Département ayant enregistré la déclaration"""
  department: String!
  id: ID!
}

"""
Eco-organisme
Les éco-organismes n'apparaissent pas en case 1 du bordereau mais sont quand même responsables du déchet.
C'est l'entreprise de collecte de déchet qui apparait en case 1.
Pour pouvoir saisir un éco-organisme, le détenteur du déchet doit être défini comme 'Autre détenteur'.
Seul un éco-organisme enregistré dans Trackdéchet peut être associé.
"""
type EcoOrganisme {
  """Adresse de l'éco-organisme"""
  address: String!
  id: ID!
  """Nom de l'éco-organisme"""
  name: String!
  """Siret de l'éco-organisme"""
  siret: String!
}

"""Représente un utilisateur sur la plateforme Trackdéchets"""
type User {
  """Liste des établissements dont l'utilisateur est membre"""
  companies: [CompanyPrivate!]!
  """Email de l'utiliateur"""
  email: String!
  """Identifiant opaque"""
  id: ID!
  """Qualité d'administrateur. Rôle reservé aux agents de l'administration"""
  isAdmin: Boolean
  """Nom de l'utilisateur"""
  name: String
  """Numéro de téléphone de l'utilisateur"""
  phone: String
}

"""Information sur un établissement accessible par un utilisateur membre"""
type CompanyPrivate {
  """Adresse de l'établissement"""
  address: String
  """Récépissé courtier (le cas échéant, pour les profils courtier)"""
  brokerReceipt: BrokerReceipt
  """Profil de l'établissement"""
  companyTypes: [CompanyType!]!
  """Email de contact (visible sur la fiche entreprise)"""
  contactEmail: String
  """Numéro de téléphone de contact (visible sur la fiche entreprise)"""
  contactPhone: String
  """Liste des agréments de l'éco-organisme"""
  ecoOrganismeAgreements: [URL!]!
  """Identifiant GEREP"""
  gerepId: String
  """
  Nom d'usage de l'entreprise qui permet de différencier
  différents établissements ayant le même nom
  """
  givenName: String
  """Identifiant opaque"""
  id: ID!
  """
  Installation classée pour la protection de l'environnement (ICPE)
  associé à cet établissement (le cas échéant)
  """
  installation: Installation
  """Libellé NAF de l'établissement"""
  libelleNaf: String
  """Code NAF de l'établissement"""
  naf: String
  """Nom de l'établissement"""
  name: String
  """Code de signature permettant de signer les BSD"""
  securityCode: Int!
  """SIRET de l'établissement"""
  siret: String!
  """Récépissé négociant (le cas échéant, pour les profils négociant)"""
  traderReceipt: TraderReceipt
  """Récépissé transporteur (le cas échéant, pour les profils transporteur)"""
  transporterReceipt: TransporterReceipt
  """Rôle de l'utilisateur authentifié cau sein de cet établissement"""
  userRole: UserRole
  """Liste des utilisateurs appartenant à cet établissement"""
  users: [CompanyMember!]
  """État du processus de vérification de l'établissement"""
  verificationStatus: CompanyVerificationStatus!
  """Agrément broyeur (le cas échéant, pour les profils VHU)"""
  vhuAgrementBroyeur: VhuAgrement
  """Agrément démolisseur (le cas échéant, pour les profils VHU)"""
  vhuAgrementDemolisseur: VhuAgrement
  """Site web (visible sur la fiche entreprise)"""
  website: String
}

"""
Liste les différents rôles d'un utilisateur au sein
d'un établissement.

Les admins peuvent:
* consulter/éditer les bordereaux
* gérer les utilisateurs de l'établissement
* éditer les informations de la fiche entreprise
* demander le renouvellement du code de signature
* Éditer les informations de la fiche entreprise

Les membres peuvent:
* consulter/éditer les bordereaux
* consulter le reste des informations

Vous pouvez consulter [cette page](https://docs.google.com/spreadsheets/d/12K9Bd2k5l4uqXhS0h5uI00lNEzW7C-1t-NDOyxy8aKk/edit#gid=0)
pour le détail de chacun des rôles
"""
enum UserRole {
  ADMIN
  MEMBER
}

"""Information sur utilisateur au sein d'un établissement"""
type CompanyMember {
  """Email"""
  email: String!
  """Identifiant opaque"""
  id: ID!
  """Si oui ou non l'email de l'utilisateur a été confirmé"""
  isActive: Boolean
  """Si oui ou non cet utilisateur correspond à l'utilisateur authentifié"""
  isMe: Boolean
  """Si oui ou non une une invitation à joindre l'établissement est en attente"""
  isPendingInvitation: Boolean
  """Nom de l'utilisateur"""
  name: String
  """Rôle de l'utilisateur dans l'établissement (admin ou membre)"""
  role: UserRole
}

"""État du processus de vérification de l'établissement"""
enum CompanyVerificationStatus {
  """
  Les vérifications manuelles n'ont pas abouties, une lettre a été envoyée à l'adresse enregistrée
  auprès du registre du commerce et des sociétés
  """
  LETTER_SENT
  """L'établissement vient d'être crée, en attente de vérifications manuelles par l'équipe Trackdéchets"""
  TO_BE_VERIFIED
  """L'établissement est vérifié"""
  VERIFIED
}

"""
Demande de rattachement à un établissement effectué par
un utilisateur.
"""
type MembershipRequest {
  """Email de l'utilisateur faisant la demande"""
  email: String!
  id: ID!
  """Nom de l'établissement"""
  name: String!
  """
  Liste des adresses email correspondant aux comptes administrateurs à qui la demande
  de rattachement a été envoyée. Les adresses emails sont partiellement masquées de la
  façon suivante j********w@trackdechets.fr
  """
  sentTo: [String!]!
  """SIRET de l'établissement"""
  siret: String!
  """Statut de la demande de rattachement"""
  status: MembershipRequestStatus!
}

"""
Différents statuts possibles pour une demande de rattachement
à un établissement
"""
enum MembershipRequestStatus {
  ACCEPTED
  PENDING
  REFUSED
}

"""Information sur un établissement accessible publiquement en recherche"""
type CompanySearchResult {
  """Adresse de l'établissement"""
  address: String
  """Récépissé courtier associé à cet établissement (le cas échant)"""
  brokerReceipt: BrokerReceipt
  """Code commune de l'établissement"""
  codeCommune: String
  """État administratif de l'établissement. A = Actif, F = Fermé"""
  etatAdministratif: String
  """
  Installation classée pour la protection de l'environnement (ICPE)
  associé à cet établissement
  """
  installation: Installation
  """Libellé NAF"""
  libelleNaf: String
  """Code NAF"""
  naf: String
  """Nom de l'établissement"""
  name: String
  """SIRET de l'établissement"""
  siret: String
  """Récépissé négociant associé à cet établissement (le cas échant)"""
  traderReceipt: TraderReceipt
  """Récépissé transporteur associé à cet établissement (le cas échéant)"""
  transporterReceipt: TransporterReceipt
  """Agrément VHU broyeur (le cas échéant, pour les profils VHU)"""
  vhuAgrementBroyeur: VhuAgrement
  """Agrément VHU démolisseur (le cas échéant, pour les profils VHU)"""
  vhuAgrementDemolisseur: VhuAgrement
}

type Mutation {
  """
  DEPRECATED - La récupération de token pour le compte de tiers
  doit s'effectuer avec le protocole OAuth2
  
  Récupére un token à partir de l'email et du mot de passe
  d'un utilisateur.
  """
  login(email: String!, password: String!): AuthPayload!
  """
  Envoie une demande de rattachement de l'utilisateur courant
  à rejoindre l'établissement dont le siret est précisé en paramètre.
  Cette demande est communiquée à l'ensemble des administrateurs de
  l'établissement qui ont le choix de l'accepter ou de la refuser.
  """
  sendMembershipRequest(siret: String!): MembershipRequest
}

"""Cet objet est renvoyé par la mutation login qui est dépréciée"""
type AuthPayload {
  """
  Bearer token à durée illimité permettant de s'authentifier
  à l'API Trackdéchets. Pour ce faire, il doit être passé dans le
  header d'autorisation `Authorization: Bearer ******`
  """
  token: String!
  """Utilisateur lié au token"""
  user: User!
}

scalar JSON
